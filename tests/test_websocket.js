import { tests, WindowTestEnvironment, WorkerTestEnvironment, SharedWorkerTestEnvironment, ServiceWorkerTestEnvironment, ShadowRealmTestEnvironment, ShellTestEnvironment, test, async_test, promise_test, promise_rejects_js, promise_rejects_dom, promise_rejects_exactly, EventWatcher, setup, promise_setup, done, generate_tests, on_event, step_timeout, format_value, assert_true, assert_false, assert_equals, assert_not_equals, assert_in_array, assert_object_equals, assert_array_equals, assert_array_approx_equals, assert_approx_equals, assert_less_than, assert_greater_than, assert_between_exclusive, assert_less_than_equal, assert_greater_than_equal, assert_between_inclusive, assert_regexp_match, assert_class_string, assert_own_property, assert_not_own_property, assert_inherits, assert_idl_attribute, assert_readonly, assert_throws_js, assert_throws_dom, assert_throws_exactly, assert_unreached, assert_any, assert_implements, assert_implements_optional, Test, RemoteTest, RemoteContext, TestsStatus, AssertRecord, Tests, fetch_tests_from_worker, fetch_tests_from_window, fetch_tests_from_shadow_realm, begin_shadow_realm_tests, timeout, add_start_callback, add_test_state_callback, add_result_callback, add_completion_callback, Output, AssertionError, OptionalFeatureUnsupportedError, } from './lib/testharnessreport.js';
import { WebSocket } from '../lib/websocket.js';

test(() => {
  const ws = new WebSocket('ws://localhost/ws', []);
}, 'Create WebSocket');
