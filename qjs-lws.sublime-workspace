{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"stra",
				"strategy"
			],
			[
				"un",
				"underlyingSource"
			],
			[
				"asyn",
				"asyncIterable"
			],
			[
				"JS_Is",
				"JS_IsUndefined"
			],
			[
				"asy",
				"asyncIterator"
			],
			[
				"is",
				"isPrototypeOf"
			],
			[
				"Read",
				"ReadableStream"
			],
			[
				"remote",
				"remoteAddress"
			],
			[
				"LWS",
				"LWS_WRITE_HTTP_FINAL"
			],
			[
				"LWS_WRI",
				"LWS_WRITE_HTTP_FINAL"
			],
			[
				"JS_Get",
				"JS_GetPropertyUint32"
			],
			[
				"GET",
				"GET_VHOST_BY_NAME"
			],
			[
				"JS_C",
				"JS_CFUNC_MAGIC_DEF"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"opt",
				"options_or_protocols"
			],
			[
				"op",
				"options_or_protocols"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"LWS_SER",
				"LWS_SERVER_OPTION_ALLOW_NON_SSL_ON_SSL_PORT"
			],
			[
				"LWS_SE",
				"LWS_SERVER_OPTION_CREATE_VHOST_SSL_CTX"
			],
			[
				"LWS_",
				"LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT"
			],
			[
				"getLo",
				"getLogLevelColour"
			],
			[
				"lwsjs_log_",
				"lwsjs_log_colours"
			],
			[
				"JS_Throw",
				"JS_ThrowTypeError"
			],
			[
				"LCCSCF_",
				"LCCSCF_HTTP_MULTIPART_MIME"
			],
			[
				"onCli",
				"onClientHttpWriteable"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"cont",
				"content_type"
			],
			[
				"METHOD_",
				"METHOD_CLIENT_HTTP_MULTIPART"
			],
			[
				"METHOD_HT",
				"METHOD_CLIENT_HTTP_MULTIPART"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"WebSock",
				"WebSocketStream"
			],
			[
				"WebSo",
				"WebSocketStream"
			],
			[
				"WebSocke",
				"WebSocketStream"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"defin",
				"defineProperty(...)"
			],
			[
				"local",
				"local_protocol_name"
			],
			[
				"type",
				"typedListeners"
			],
			[
				"onRe",
				"onReceiveClientHttpRead"
			],
			[
				"JS_GetP",
				"JS_GetPropertyUint32"
			],
			[
				"lws_pr",
				"lws_process_html_args"
			],
			[
				"ioha",
				"iohandler_functions"
			],
			[
				"JS_Sert",
				"JS_SetPropertyUint32"
			],
			[
				"lwsjs",
				"lwsjs_loglevel"
			],
			[
				"lwsjs_clear",
				"lwsjs_clear_all_handlers"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"lws_",
				"lws_context_class_id"
			],
			[
				"callba",
				"callback_names"
			],
			[
				"call",
				"callback_names"
			],
			[
				"FUNCTION_GET_",
				"FUNCTION_GET_CALLBACK_NUMBER"
			],
			[
				"PROP_PE",
				"PROP_PEER_WRITE_ALLOWANCE"
			],
			[
				"PROP_PEE",
				"PROP_PEER_WRITE_ALLOWANCE"
			],
			[
				"lws_callback",
				"lws_callback_names"
			],
			[
				"jsm_start_",
				"jsm_start_interactive3"
			],
			[
				"by",
				"byobRequest"
			],
			[
				"js_by",
				"js_readable_byob_request"
			],
			[
				"BY",
				"BYOB_REQUEST_METHOD_RESPONDWITHNEWVIEW"
			],
			[
				"JS_",
				"JS_NewObjectProtoClass"
			],
			[
				"is_",
				"is_exception"
			],
			[
				"JS_T",
				"JS_ThrowInternalError"
			],
			[
				"Repe",
				"RepeaterItem"
			],
			[
				"WRITER_PROP",
				"WRITER_PROP_READY"
			],
			[
				"Der",
				"DereferenceError"
			],
			[
				"Dere",
				"DereferenceError"
			],
			[
				"Is",
				"IsPunctuator"
			],
			[
				"js_magic_fun",
				"js_magic_function"
			],
			[
				"js_queue_iter",
				"js_queue_iterator_class_id"
			],
			[
				"js_queue_itreat",
				"js_queue_iterator_class_id"
			],
			[
				"js_",
				"js_archive_mode"
			],
			[
				"ENTRY_IS",
				"ENTRY_ISDATAENCRYPTED"
			],
			[
				"js_archivema",
				"js_archivematch_class_id"
			],
			[
				"JS_NewObjec",
				"JS_NewObjectProtoClass"
			],
			[
				"Module",
				"ModuleLoaderContext"
			],
			[
				"JS_Th",
				"JS_ThrowTypeError"
			],
			[
				"ModuleLo",
				"ModuleLoaderContext"
			],
			[
				"escape",
				"escape_noquote_tab"
			],
			[
				"max",
				"max_array_length"
			],
			[
				"tty",
				"tty_set_raw"
			],
			[
				"getOwnPrope",
				"getOwnPropertyDescriptor"
			],
			[
				"PATH_SKIP",
				"PATH_SKIP_SEPARATOR"
			],
			[
				"ListIterat",
				"ListIteratorKind"
			],
			[
				"_f",
				"_wfindnext64"
			],
			[
				"JS_PROP_",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"js_sock",
				"js_sockaddr_data"
			],
			[
				"SET_",
				"SET_CONSOLE_MODE"
			],
			[
				"ERA",
				"ERASE_IN_LINE"
			],
			[
				"js_misc_set",
				"js_misc_settextattr"
			],
			[
				"dw",
				"dwCursorPosition"
			],
			[
				"prop",
				"property_recursion_top"
			],
			[
				"property_enumer",
				"property_enumeration_index"
			],
			[
				"INT",
				"INSPECT_INT32T_INRANGE"
			],
			[
				"js_inspect_print_arra",
				"js_inspect_print_arraybuffer2"
			],
			[
				"is_a",
				"is_arraybuffer"
			],
			[
				"fmt",
				"fmt_ulong"
			],
			[
				"inspec",
				"inspect_newline2"
			],
			[
				"property_",
				"property_recursion_top"
			],
			[
				"js_inspec",
				"js_inspect_print_value"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"mysql_op",
				"mysql_optionsv"
			],
			[
				"MY",
				"MYSQLConnectParameters"
			],
			[
				"js_connect",
				"js_connectparams_class_id"
			],
			[
				"js_conn",
				"js_connectparams_from"
			],
			[
				"MYSQL",
				"MYSQLConnectParameters"
			],
			[
				"mysql_get",
				"mysql_get_socket"
			],
			[
				"async",
				"asyncclosure_resolve"
			],
			[
				"res",
				"resolving_funcs"
			],
			[
				"HAVE_LIB",
				"HAVE_LIBMARIADBCLIENT"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"FileDesc",
				"FileDescriptorHandlers"
			],
			[
				"js_generat",
				"js_generator_prototype"
			],
			[
				"tab_",
				"tab_atom_len"
			],
			[
				"proper",
				"property_recursion_pop"
			],
			[
				"property_rec",
				"property_recursion_top"
			],
			[
				"property",
				"property_recursion_top"
			],
			[
				"RETURN",
				"deep.RETURN_VALUE_PATH"
			],
			[
				"LIBS",
				"LIBSERIALPORT_LIBRARY_DIR"
			],
			[
				"js_misc_atexit_",
				"js_misc_atexit_called"
			],
			[
				"getO",
				"getOwnPropertyNames(...)"
			],
			[
				"Res",
				"ResolveAlias"
			],
			[
				"relati",
				"relativePath"
			],
			[
				"js_syscla",
				"js_syscallerror_defines"
			],
			[
				"get",
				"getOwnPropertyDescriptor(...)"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"set",
				"set_handler"
			],
			[
				"Async",
				"AsyncSocketClosure"
			],
			[
				"Asy",
				"AsyncSocketClosure"
			],
			[
				"js_socket_async_",
				"js_socket_async_resolver"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Body\n  constructor(body)\nReadableStream\nBlob\nArrayBuffer\n  start(controller)\n() =>\n  blob()\n  a =>\n  arrayBuffer()\n  b =>\n  text()\n  b =>\n  json()\n  s =>\nBody\nBody\nBody",
			"settings":
			{
				"buffer_size": 168,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					99,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-client.js",
						"symkeys":
						[
							[
								687,
								692
							],
							[
								701,
								723
							],
							[
								1344,
								1361
							],
							[
								1423,
								1442
							],
							[
								1506,
								1525
							],
							[
								1609,
								1627
							],
							[
								1734,
								1749
							],
							[
								1809,
								1839
							],
							[
								2016,
								2050
							],
							[
								2124,
								2169
							],
							[
								2584,
								2610
							],
							[
								2681,
								2707
							],
							[
								2778,
								2801
							],
							[
								2908,
								2947
							],
							[
								3144,
								3177
							],
							[
								3654,
								3687
							],
							[
								3764,
								3793
							],
							[
								3898,
								3928
							]
						],
						"symlist":
						[
							"() =>",
							"function main(...args)",
							"onConnecting(wsi)",
							"onRawConnected(wsi)",
							"onRawWriteable(wsi)",
							"onRawRx(wsi, data)",
							"onRawClose(wsi)",
							"callback(wsi, reason, ...args)",
							"onEstablishedClientHttp(wsi, data)",
							"onClientAppendHandshakeHeader(wsi, data, len)",
							"onClientHttpWriteable(wsi)",
							"onCompletedClientHttp(wsi)",
							"onClosedClientHttp(wsi)",
							"onReceiveClientHttpRead(wsi, data, len)",
							"onReceiveClientHttp(wsi, ...rest)",
							"onClientConnectionError(wsi, msg)",
							"onClientHttpDropProtocol(wsi)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyAgAAQ29ubmVjdGlvbkVycm9yCiAgY29uc3RydWN0b3IobWVzc2FnZSkKICB3YWl0V3JpdGUod3NpKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgogIHR5cGVJc09iamVjdCh4KQogIGlzQXN5bmNJdGVyYWJsZShvYmopCiAgaXNJdGVyYWJsZShvYmopCiAgaXRlcmF0b3JQcm9wZXJ0eShvYmopCiAgaXRlcmF0b3JGdW5jdGlvbihvYmopCiAgd3JhcEZ1bmN0aW9uKGZuLCB3cmFwcGVyID0gYSA9PiBhKQpmdW5jdGlvbiguLi5hcmdzKQogIGlzUHJvdG90eXBlT2YoYSwgYikKICBzdHJpcEFuc2koc3RyKQogIHBhZEVuZChzdHIsIG4sIHMgPSAnICcpCiAgaW50ZXJhY3RpdmUoKQogIHZlcmJvc2UobmFtZSwgLi4uYXJncykKICBkZWJ1ZyhuYW1lLCAuLi5hcmdzKQogIHdlYWtNYXBwZXIoY3JlYXRlLCBtYXAgPSAKKCkpCihrZXksIHZhbHVlKSA9PgogIHNldEZ1bmN0aW9uTmFtZShmbiwgbmFtZSkKICBhc3NpZ24ob2JqLCAuLi5hcmdzKQogIGRlZmluZShvYmosIHByb3BzLCBvcHRzID0geyB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pCiAgbWFwcGVyKHRhcmdldCA9IAooKSkKKC4uLmFyZ3MpID0+CiAgYWN0b3Iod3MsIGxvZykKICBzdGF0ZShzdGF0ZSkKICBldmVudCh0eXBlLCBwcm9wcykKVWludDhBcnJheQogIGlzVmlldyhvYmopCkRhdGFWaWV3CiAgb25jZShmbiwgdGhpc0FyZykKKC4uLmFyZ3MpID0+AAAAAAAAAAD5AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					100,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/util.js",
						"symkeys":
						[
							[
								284,
								299
							],
							[
								318,
								338
							],
							[
								424,
								447
							],
							[
								471,
								491
							],
							[
								896,
								920
							],
							[
								1006,
								1035
							],
							[
								1147,
								1171
							],
							[
								1278,
								1308
							],
							[
								1487,
								1517
							],
							[
								1633,
								1676
							],
							[
								1731,
								1748
							],
							[
								2008,
								2036
							],
							[
								2127,
								2150
							],
							[
								2228,
								2260
							],
							[
								2370,
								2392
							],
							[
								2432,
								2463
							],
							[
								2572,
								2601
							],
							[
								2662,
								2695
							],
							[
								2707,
								2710
							],
							[
								2722,
								2737
							],
							[
								2864,
								2898
							],
							[
								3275,
								3304
							],
							[
								3795,
								3869
							],
							[
								4388,
								4412
							],
							[
								4424,
								4427
							],
							[
								4439,
								4451
							],
							[
								4538,
								4561
							],
							[
								4579,
								4591
							],
							[
								4743,
								4761
							],
							[
								4974,
								4984
							],
							[
								5005,
								5025
							],
							[
								5094,
								5102
							],
							[
								5130,
								5156
							],
							[
								5196,
								5208
							]
						],
						"symlist":
						[
							"ConnectionError",
							"constructor(message)",
							" function waitWrite(wsi)",
							"(resolve, reject) =>",
							" function typeIsObject(x)",
							" function isAsyncIterable(obj)",
							" function isIterable(obj)",
							" function iteratorProperty(obj)",
							" function iteratorFunction(obj)",
							" function wrapFunction(fn, wrapper = a => a)",
							" function(...args)",
							" function isPrototypeOf(a, b)",
							" function stripAnsi(str)",
							" function padEnd(str, n, s = ' ')",
							" function interactive()",
							" function verbose(name, ...args)",
							" function debug(name, ...args)",
							" function weakMapper(create, map = ",
							"())",
							" (key, value) =>",
							" function setFunctionName(fn, name)",
							" function assign(obj, ...args)",
							" function define(obj, props, opts = { writable: true, configurable: true })",
							" function mapper(target = ",
							"())",
							" (...args) =>",
							" function actor(ws, log)",
							"state(state)",
							"event(type, props)",
							"Uint8Array",
							" function isView(obj)",
							"DataView",
							" function once(fn, thisArg)",
							" (...args) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD5AQAAKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25Db25uZWN0aW5nKHdzaSkKICBvblJhd0Nvbm5lY3RlZCh3c2kpCiAgb25SYXdXcml0ZWFibGUod3NpKQogIG9uUmF3Ungod3NpLCBkYXRhKQogIG9uUmF3Q2xvc2Uod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQogIG9uRXN0YWJsaXNoZWRDbGllbnRIdHRwKHdzaSwgZGF0YSkKICBvbkNsaWVudEFwcGVuZEhhbmRzaGFrZUhlYWRlcih3c2ksIGRhdGEsIGxlbikKICBvbkNsaWVudEh0dHBXcml0ZWFibGUod3NpKQogIG9uQ29tcGxldGVkQ2xpZW50SHR0cCh3c2kpCiAgb25DbG9zZWRDbGllbnRIdHRwKHdzaSkKICBvblJlY2VpdmVDbGllbnRIdHRwUmVhZCh3c2ksIGRhdGEsIGxlbikKICBvblJlY2VpdmVDbGllbnRIdHRwKHdzaSwgLi4ucmVzdCkKICBvbkNsaWVudENvbm5lY3Rpb25FcnJvcih3c2ksIG1zZykKICBvbkNsaWVudEh0dHBEcm9wUHJvdG9jb2wod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQAAAAAAAAAAsgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					101,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								775,
								780
							],
							[
								836,
								858
							],
							[
								929,
								959
							],
							[
								1038,
								1061
							],
							[
								1166,
								1171
							],
							[
								1180,
								1202
							],
							[
								1742,
								1804
							],
							[
								1951,
								1982
							],
							[
								2072,
								2097
							],
							[
								2279,
								2311
							],
							[
								2504,
								2534
							],
							[
								2678,
								2703
							],
							[
								2845,
								2870
							],
							[
								3005,
								3010
							],
							[
								3329,
								3349
							],
							[
								3796,
								3801
							],
							[
								4065,
								4070
							],
							[
								4169,
								4185
							],
							[
								4453,
								4480
							],
							[
								4608,
								4638
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyAgAAQ29ubmVjdGlvbkVycm9yCiAgY29uc3RydWN0b3IobWVzc2FnZSkKICB3YWl0V3JpdGUod3NpKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgogIHR5cGVJc09iamVjdCh4KQogIGlzQXN5bmNJdGVyYWJsZShvYmopCiAgaXNJdGVyYWJsZShvYmopCiAgaXRlcmF0b3JQcm9wZXJ0eShvYmopCiAgaXRlcmF0b3JGdW5jdGlvbihvYmopCiAgd3JhcEZ1bmN0aW9uKGZuLCB3cmFwcGVyID0gYSA9PiBhKQpmdW5jdGlvbiguLi5hcmdzKQogIGlzUHJvdG90eXBlT2YoYSwgYikKICBzdHJpcEFuc2koc3RyKQogIHBhZEVuZChzdHIsIG4sIHMgPSAnICcpCiAgaW50ZXJhY3RpdmUoKQogIHZlcmJvc2UobmFtZSwgLi4uYXJncykKICBkZWJ1ZyhuYW1lLCAuLi5hcmdzKQogIHdlYWtNYXBwZXIoY3JlYXRlLCBtYXAgPSAKKCkpCihrZXksIHZhbHVlKSA9PgogIHNldEZ1bmN0aW9uTmFtZShmbiwgbmFtZSkKICBhc3NpZ24ob2JqLCAuLi5hcmdzKQogIGRlZmluZShvYmosIHByb3BzLCBvcHRzID0geyB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pCiAgbWFwcGVyKHRhcmdldCA9IAooKSkKKC4uLmFyZ3MpID0+CiAgYWN0b3Iod3MsIGxvZykKICBzdGF0ZShzdGF0ZSkKICBldmVudCh0eXBlLCBwcm9wcykKVWludDhBcnJheQogIGlzVmlldyhvYmopCkRhdGFWaWV3CiAgb25jZShmbiwgdGhpc0FyZykKKC4uLmFyZ3MpID0+AAAAAAAAAADlAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					102,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-client.js",
						"symkeys":
						[
							[
								687,
								692
							],
							[
								701,
								723
							],
							[
								1344,
								1361
							],
							[
								1423,
								1442
							],
							[
								1506,
								1525
							],
							[
								1609,
								1627
							],
							[
								1734,
								1749
							],
							[
								1809,
								1839
							],
							[
								2016,
								2050
							],
							[
								2124,
								2169
							],
							[
								2584,
								2610
							],
							[
								2681,
								2707
							],
							[
								2778,
								2801
							],
							[
								2908,
								2947
							],
							[
								3144,
								3177
							],
							[
								3654,
								3687
							],
							[
								3764,
								3793
							],
							[
								3898,
								3928
							]
						],
						"symlist":
						[
							"() =>",
							"function main(...args)",
							"onConnecting(wsi)",
							"onRawConnected(wsi)",
							"onRawWriteable(wsi)",
							"onRawRx(wsi, data)",
							"onRawClose(wsi)",
							"callback(wsi, reason, ...args)",
							"onEstablishedClientHttp(wsi, data)",
							"onClientAppendHandshakeHeader(wsi, data, len)",
							"onClientHttpWriteable(wsi)",
							"onCompletedClientHttp(wsi)",
							"onClosedClientHttp(wsi)",
							"onReceiveClientHttpRead(wsi, data, len)",
							"onReceiveClientHttp(wsi, ...rest)",
							"onClientConnectionError(wsi, msg)",
							"onClientHttpDropProtocol(wsi)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					103,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								775,
								780
							],
							[
								836,
								858
							],
							[
								929,
								959
							],
							[
								1038,
								1061
							],
							[
								1166,
								1171
							],
							[
								1180,
								1202
							],
							[
								1742,
								1804
							],
							[
								1951,
								1982
							],
							[
								2072,
								2097
							],
							[
								2279,
								2311
							],
							[
								2504,
								2534
							],
							[
								2678,
								2703
							],
							[
								2845,
								2870
							],
							[
								3005,
								3010
							],
							[
								3329,
								3349
							],
							[
								3796,
								3801
							],
							[
								4065,
								4070
							],
							[
								4169,
								4185
							],
							[
								4453,
								4480
							],
							[
								4608,
								4638
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD5AQAAKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25Db25uZWN0aW5nKHdzaSkKICBvblJhd0Nvbm5lY3RlZCh3c2kpCiAgb25SYXdXcml0ZWFibGUod3NpKQogIG9uUmF3Ungod3NpLCBkYXRhKQogIG9uUmF3Q2xvc2Uod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQogIG9uRXN0YWJsaXNoZWRDbGllbnRIdHRwKHdzaSwgZGF0YSkKICBvbkNsaWVudEFwcGVuZEhhbmRzaGFrZUhlYWRlcih3c2ksIGRhdGEsIGxlbikKICBvbkNsaWVudEh0dHBXcml0ZWFibGUod3NpKQogIG9uQ29tcGxldGVkQ2xpZW50SHR0cCh3c2kpCiAgb25DbG9zZWRDbGllbnRIdHRwKHdzaSkKICBvblJlY2VpdmVDbGllbnRIdHRwUmVhZCh3c2ksIGRhdGEsIGxlbikKICBvblJlY2VpdmVDbGllbnRIdHRwKHdzaSwgLi4ucmVzdCkKICBvbkNsaWVudENvbm5lY3Rpb25FcnJvcih3c2ksIG1zZykKICBvbkNsaWVudEh0dHBEcm9wUHJvdG9jb2wod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQAAAAAAAAAA5QEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					104,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-client.js",
						"symkeys":
						[
							[
								687,
								692
							],
							[
								701,
								723
							],
							[
								1344,
								1361
							],
							[
								1423,
								1442
							],
							[
								1506,
								1525
							],
							[
								1609,
								1627
							],
							[
								1734,
								1749
							],
							[
								1809,
								1839
							],
							[
								2016,
								2050
							],
							[
								2124,
								2169
							],
							[
								2584,
								2610
							],
							[
								2681,
								2707
							],
							[
								2778,
								2801
							],
							[
								2908,
								2947
							],
							[
								3144,
								3177
							],
							[
								3654,
								3687
							],
							[
								3764,
								3793
							],
							[
								3898,
								3928
							]
						],
						"symlist":
						[
							"() =>",
							"function main(...args)",
							"onConnecting(wsi)",
							"onRawConnected(wsi)",
							"onRawWriteable(wsi)",
							"onRawRx(wsi, data)",
							"onRawClose(wsi)",
							"callback(wsi, reason, ...args)",
							"onEstablishedClientHttp(wsi, data)",
							"onClientAppendHandshakeHeader(wsi, data, len)",
							"onClientHttpWriteable(wsi)",
							"onCompletedClientHttp(wsi)",
							"onClosedClientHttp(wsi)",
							"onReceiveClientHttpRead(wsi, data, len)",
							"onReceiveClientHttp(wsi, ...rest)",
							"onClientConnectionError(wsi, msg)",
							"onClientHttpDropProtocol(wsi)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					105,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								775,
								780
							],
							[
								836,
								858
							],
							[
								929,
								959
							],
							[
								1038,
								1061
							],
							[
								1166,
								1171
							],
							[
								1180,
								1202
							],
							[
								1742,
								1804
							],
							[
								1951,
								1982
							],
							[
								2072,
								2097
							],
							[
								2279,
								2311
							],
							[
								2504,
								2534
							],
							[
								2678,
								2703
							],
							[
								2845,
								2870
							],
							[
								3005,
								3010
							],
							[
								3329,
								3349
							],
							[
								3796,
								3801
							],
							[
								4065,
								4070
							],
							[
								4169,
								4185
							],
							[
								4453,
								4480
							],
							[
								4608,
								4638
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD5AQAAKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25Db25uZWN0aW5nKHdzaSkKICBvblJhd0Nvbm5lY3RlZCh3c2kpCiAgb25SYXdXcml0ZWFibGUod3NpKQogIG9uUmF3Ungod3NpLCBkYXRhKQogIG9uUmF3Q2xvc2Uod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQogIG9uRXN0YWJsaXNoZWRDbGllbnRIdHRwKHdzaSwgZGF0YSkKICBvbkNsaWVudEFwcGVuZEhhbmRzaGFrZUhlYWRlcih3c2ksIGRhdGEsIGxlbikKICBvbkNsaWVudEh0dHBXcml0ZWFibGUod3NpKQogIG9uQ29tcGxldGVkQ2xpZW50SHR0cCh3c2kpCiAgb25DbG9zZWRDbGllbnRIdHRwKHdzaSkKICBvblJlY2VpdmVDbGllbnRIdHRwUmVhZCh3c2ksIGRhdGEsIGxlbikKICBvblJlY2VpdmVDbGllbnRIdHRwKHdzaSwgLi4ucmVzdCkKICBvbkNsaWVudENvbm5lY3Rpb25FcnJvcih3c2ksIG1zZykKICBvbkNsaWVudEh0dHBEcm9wUHJvdG9jb2wod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQAAAAAAAAAA5QEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-websocket.js",
						"symkeys":
						[
							[
								1382,
								1387
							]
						],
						"symlist":
						[
							"() =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAAUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					107,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								775,
								780
							],
							[
								836,
								858
							],
							[
								929,
								959
							],
							[
								1038,
								1061
							],
							[
								1166,
								1171
							],
							[
								1180,
								1202
							],
							[
								1742,
								1804
							],
							[
								1951,
								1982
							],
							[
								2072,
								2097
							],
							[
								2279,
								2311
							],
							[
								2504,
								2534
							],
							[
								2678,
								2703
							],
							[
								2845,
								2870
							],
							[
								3005,
								3010
							],
							[
								3329,
								3349
							],
							[
								3796,
								3801
							],
							[
								4065,
								4070
							],
							[
								4169,
								4185
							],
							[
								4453,
								4480
							],
							[
								4608,
								4638
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAKCkgPT4AAAAAAAAAAOUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					108,
					2,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								773,
								778
							],
							[
								834,
								856
							],
							[
								927,
								957
							],
							[
								1036,
								1059
							],
							[
								1164,
								1169
							],
							[
								1178,
								1200
							],
							[
								1740,
								1802
							],
							[
								1949,
								1980
							],
							[
								2070,
								2095
							],
							[
								2277,
								2309
							],
							[
								2502,
								2532
							],
							[
								2676,
								2701
							],
							[
								2843,
								2868
							],
							[
								3003,
								3008
							],
							[
								3327,
								3347
							],
							[
								3794,
								3799
							],
							[
								4063,
								4068
							],
							[
								4167,
								4183
							],
							[
								4451,
								4478
							],
							[
								4606,
								4636
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAOUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAOUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					109,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								773,
								778
							],
							[
								834,
								856
							],
							[
								927,
								957
							],
							[
								1036,
								1059
							],
							[
								1164,
								1169
							],
							[
								1178,
								1200
							],
							[
								1740,
								1802
							],
							[
								1949,
								1980
							],
							[
								2070,
								2095
							],
							[
								2277,
								2309
							],
							[
								2502,
								2532
							],
							[
								2676,
								2701
							],
							[
								2843,
								2868
							],
							[
								3003,
								3008
							],
							[
								3327,
								3347
							],
							[
								3794,
								3799
							],
							[
								4063,
								4068
							],
							[
								4167,
								4183
							],
							[
								4451,
								4478
							],
							[
								4606,
								4636
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAOUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-client.js",
						"symkeys":
						[
							[
								687,
								692
							],
							[
								701,
								723
							],
							[
								1344,
								1361
							],
							[
								1423,
								1442
							],
							[
								1506,
								1525
							],
							[
								1609,
								1627
							],
							[
								1734,
								1749
							],
							[
								1809,
								1839
							],
							[
								2016,
								2050
							],
							[
								2124,
								2169
							],
							[
								2584,
								2610
							],
							[
								2681,
								2707
							],
							[
								2778,
								2801
							],
							[
								2908,
								2947
							],
							[
								3144,
								3177
							],
							[
								3654,
								3687
							],
							[
								3764,
								3793
							],
							[
								3898,
								3928
							]
						],
						"symlist":
						[
							"() =>",
							"function main(...args)",
							"onConnecting(wsi)",
							"onRawConnected(wsi)",
							"onRawWriteable(wsi)",
							"onRawRx(wsi, data)",
							"onRawClose(wsi)",
							"callback(wsi, reason, ...args)",
							"onEstablishedClientHttp(wsi, data)",
							"onClientAppendHandshakeHeader(wsi, data, len)",
							"onClientHttpWriteable(wsi)",
							"onCompletedClientHttp(wsi)",
							"onClosedClientHttp(wsi)",
							"onReceiveClientHttpRead(wsi, data, len)",
							"onReceiveClientHttp(wsi, ...rest)",
							"onClientConnectionError(wsi, msg)",
							"onClientHttpDropProtocol(wsi)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					111,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								773,
								778
							],
							[
								834,
								856
							],
							[
								927,
								957
							],
							[
								1036,
								1059
							],
							[
								1164,
								1169
							],
							[
								1178,
								1200
							],
							[
								1740,
								1802
							],
							[
								1949,
								1980
							],
							[
								2070,
								2095
							],
							[
								2277,
								2309
							],
							[
								2502,
								2532
							],
							[
								2676,
								2701
							],
							[
								2843,
								2868
							],
							[
								3003,
								3008
							],
							[
								3327,
								3347
							],
							[
								3794,
								3799
							],
							[
								4063,
								4068
							],
							[
								4167,
								4183
							],
							[
								4451,
								4478
							],
							[
								4606,
								4636
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD5AQAAKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25Db25uZWN0aW5nKHdzaSkKICBvblJhd0Nvbm5lY3RlZCh3c2kpCiAgb25SYXdXcml0ZWFibGUod3NpKQogIG9uUmF3Ungod3NpLCBkYXRhKQogIG9uUmF3Q2xvc2Uod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQogIG9uRXN0YWJsaXNoZWRDbGllbnRIdHRwKHdzaSwgZGF0YSkKICBvbkNsaWVudEFwcGVuZEhhbmRzaGFrZUhlYWRlcih3c2ksIGRhdGEsIGxlbikKICBvbkNsaWVudEh0dHBXcml0ZWFibGUod3NpKQogIG9uQ29tcGxldGVkQ2xpZW50SHR0cCh3c2kpCiAgb25DbG9zZWRDbGllbnRIdHRwKHdzaSkKICBvblJlY2VpdmVDbGllbnRIdHRwUmVhZCh3c2ksIGRhdGEsIGxlbikKICBvblJlY2VpdmVDbGllbnRIdHRwKHdzaSwgLi4ucmVzdCkKICBvbkNsaWVudENvbm5lY3Rpb25FcnJvcih3c2ksIG1zZykKICBvbkNsaWVudEh0dHBEcm9wUHJvdG9jb2wod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQAAAAAAAAAA5QEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					112,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-client.js",
						"symkeys":
						[
							[
								687,
								692
							],
							[
								701,
								723
							],
							[
								1344,
								1361
							],
							[
								1423,
								1442
							],
							[
								1506,
								1525
							],
							[
								1609,
								1627
							],
							[
								1734,
								1749
							],
							[
								1809,
								1839
							],
							[
								2016,
								2050
							],
							[
								2124,
								2169
							],
							[
								2584,
								2610
							],
							[
								2681,
								2707
							],
							[
								2778,
								2801
							],
							[
								2908,
								2947
							],
							[
								3144,
								3177
							],
							[
								3654,
								3687
							],
							[
								3764,
								3793
							],
							[
								3898,
								3928
							]
						],
						"symlist":
						[
							"() =>",
							"function main(...args)",
							"onConnecting(wsi)",
							"onRawConnected(wsi)",
							"onRawWriteable(wsi)",
							"onRawRx(wsi, data)",
							"onRawClose(wsi)",
							"callback(wsi, reason, ...args)",
							"onEstablishedClientHttp(wsi, data)",
							"onClientAppendHandshakeHeader(wsi, data, len)",
							"onClientHttpWriteable(wsi)",
							"onCompletedClientHttp(wsi)",
							"onClosedClientHttp(wsi)",
							"onReceiveClientHttpRead(wsi, data, len)",
							"onReceiveClientHttp(wsi, ...rest)",
							"onClientConnectionError(wsi, msg)",
							"onClientHttpDropProtocol(wsi)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAPkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					113,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								773,
								778
							],
							[
								834,
								856
							],
							[
								927,
								957
							],
							[
								1036,
								1059
							],
							[
								1164,
								1169
							],
							[
								1178,
								1200
							],
							[
								1740,
								1802
							],
							[
								1949,
								1980
							],
							[
								2070,
								2095
							],
							[
								2277,
								2309
							],
							[
								2502,
								2532
							],
							[
								2676,
								2701
							],
							[
								2843,
								2868
							],
							[
								3003,
								3008
							],
							[
								3327,
								3347
							],
							[
								3794,
								3799
							],
							[
								4063,
								4068
							],
							[
								4167,
								4183
							],
							[
								4451,
								4478
							],
							[
								4606,
								4636
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD5AQAAKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25Db25uZWN0aW5nKHdzaSkKICBvblJhd0Nvbm5lY3RlZCh3c2kpCiAgb25SYXdXcml0ZWFibGUod3NpKQogIG9uUmF3Ungod3NpLCBkYXRhKQogIG9uUmF3Q2xvc2Uod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQogIG9uRXN0YWJsaXNoZWRDbGllbnRIdHRwKHdzaSwgZGF0YSkKICBvbkNsaWVudEFwcGVuZEhhbmRzaGFrZUhlYWRlcih3c2ksIGRhdGEsIGxlbikKICBvbkNsaWVudEh0dHBXcml0ZWFibGUod3NpKQogIG9uQ29tcGxldGVkQ2xpZW50SHR0cCh3c2kpCiAgb25DbG9zZWRDbGllbnRIdHRwKHdzaSkKICBvblJlY2VpdmVDbGllbnRIdHRwUmVhZCh3c2ksIGRhdGEsIGxlbikKICBvblJlY2VpdmVDbGllbnRIdHRwKHdzaSwgLi4ucmVzdCkKICBvbkNsaWVudENvbm5lY3Rpb25FcnJvcih3c2ksIG1zZykKICBvbkNsaWVudEh0dHBEcm9wUHJvdG9jb2wod3NpKQogIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKQAAAAAAAAAA5QEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					114,
					2,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								773,
								778
							],
							[
								834,
								856
							],
							[
								927,
								957
							],
							[
								1036,
								1059
							],
							[
								1164,
								1169
							],
							[
								1178,
								1200
							],
							[
								1740,
								1802
							],
							[
								1949,
								1980
							],
							[
								2070,
								2095
							],
							[
								2277,
								2309
							],
							[
								2502,
								2532
							],
							[
								2676,
								2701
							],
							[
								2843,
								2868
							],
							[
								3003,
								3008
							],
							[
								3327,
								3347
							],
							[
								3794,
								3799
							],
							[
								4063,
								4068
							],
							[
								4167,
								4183
							],
							[
								4451,
								4478
							],
							[
								4606,
								4636
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAOUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAOUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					115,
					2,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-websocket.js",
						"symkeys":
						[
							[
								1382,
								1387
							]
						],
						"symlist":
						[
							"() =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAKCkgPT4AAAAAAAAAAAUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					116,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/streams.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAKCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					117,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					118,
					2,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/streams.js",
						"symkeys":
						[
							[
								359,
								363
							],
							[
								430,
								435
							],
							[
								571,
								575
							],
							[
								674,
								678
							],
							[
								752,
								776
							],
							[
								839,
								878
							],
							[
								983,
								1018
							],
							[
								1107,
								1140
							],
							[
								1222,
								1275
							],
							[
								1378,
								1425
							],
							[
								1515,
								1556
							],
							[
								1586,
								1616
							],
							[
								1648,
								1671
							],
							[
								1720,
								1784
							],
							[
								2526,
								2555
							],
							[
								2601,
								2636
							],
							[
								2659,
								2669
							],
							[
								2690,
								2726
							],
							[
								2772,
								2833
							],
							[
								2908,
								2962
							],
							[
								3087,
								3133
							],
							[
								3176,
								3219
							],
							[
								3272,
								3348
							],
							[
								3430,
								3473
							],
							[
								3557,
								3586
							],
							[
								3746,
								3769
							],
							[
								3856,
								3888
							],
							[
								4026,
								4058
							],
							[
								4623,
								4685
							],
							[
								5142,
								5200
							],
							[
								5331,
								5382
							],
							[
								6096,
								6130
							],
							[
								6216,
								6269
							],
							[
								6322,
								6342
							],
							[
								6478,
								6549
							],
							[
								6655,
								6712
							],
							[
								6956,
								7006
							],
							[
								7244,
								7285
							],
							[
								7423,
								7474
							],
							[
								7530,
								7588
							],
							[
								7740,
								7802
							],
							[
								8013,
								8062
							],
							[
								8114,
								8161
							],
							[
								8328,
								8355
							],
							[
								8360,
								8379
							],
							[
								8966,
								8978
							],
							[
								9254,
								9280
							],
							[
								9810,
								9816
							],
							[
								10122,
								10142
							],
							[
								10247,
								10268
							],
							[
								10322,
								10340
							],
							[
								10397,
								10414
							],
							[
								11144,
								11157
							],
							[
								11701,
								11728
							],
							[
								11774,
								11801
							],
							[
								11843,
								11870
							],
							[
								11918,
								11945
							],
							[
								12016,
								12057
							],
							[
								12229,
								12290
							],
							[
								12677,
								12741
							],
							[
								12856,
								12870
							],
							[
								12903,
								12950
							],
							[
								13117,
								13155
							],
							[
								13188,
								13267
							],
							[
								13459,
								13523
							],
							[
								13610,
								13636
							],
							[
								13677,
								13708
							],
							[
								13776,
								13807
							],
							[
								13864,
								13895
							],
							[
								13941,
								13975
							],
							[
								14018,
								14041
							],
							[
								14081,
								14109
							],
							[
								14134,
								14162
							],
							[
								14222,
								14267
							],
							[
								14467,
								14501
							],
							[
								14703,
								14759
							],
							[
								14866,
								14872
							],
							[
								15888,
								15938
							],
							[
								16103,
								16107
							],
							[
								16188,
								16236
							],
							[
								17012,
								17049
							],
							[
								17317,
								17348
							],
							[
								17353,
								17387
							],
							[
								17515,
								17521
							],
							[
								17534,
								17551
							],
							[
								17741,
								17754
							],
							[
								17767,
								17786
							],
							[
								17989,
								18001
							],
							[
								18253,
								18273
							],
							[
								18378,
								18399
							],
							[
								18468,
								18473
							],
							[
								18537,
								18555
							],
							[
								18758,
								18780
							],
							[
								19042,
								19061
							],
							[
								19494,
								19499
							],
							[
								19691,
								19697
							],
							[
								20371,
								20437
							],
							[
								20708,
								20749
							],
							[
								20996,
								21049
							],
							[
								21232,
								21236
							],
							[
								21289,
								21320
							],
							[
								21443,
								21472
							],
							[
								21643,
								21675
							],
							[
								21958,
								22011
							],
							[
								22295,
								22329
							],
							[
								22502,
								22532
							],
							[
								22755,
								22763
							],
							[
								22882,
								22907
							],
							[
								22929,
								22937
							],
							[
								23011,
								23052
							],
							[
								23201,
								23226
							],
							[
								23231,
								23244
							],
							[
								23416,
								23426
							],
							[
								23548,
								23569
							],
							[
								24284,
								24308
							],
							[
								25152,
								25177
							],
							[
								25225,
								25250
							],
							[
								25312,
								25337
							],
							[
								25419,
								25447
							],
							[
								25452,
								25465
							],
							[
								25609,
								25626
							],
							[
								26052,
								26069
							],
							[
								26450,
								26457
							],
							[
								26920,
								26934
							],
							[
								27850,
								27870
							],
							[
								29972,
								30000
							],
							[
								30044,
								30072
							],
							[
								30120,
								30148
							],
							[
								30184,
								30212
							],
							[
								30284,
								30326
							],
							[
								30515,
								30554
							],
							[
								30750,
								30815
							],
							[
								31631,
								31636
							],
							[
								31851,
								31855
							],
							[
								31948,
								32018
							],
							[
								32141,
								32230
							],
							[
								33014,
								33105
							],
							[
								33251,
								33333
							],
							[
								33680,
								33780
							],
							[
								33892,
								33998
							],
							[
								34305,
								34401
							],
							[
								34705,
								34805
							],
							[
								36633,
								36734
							],
							[
								36941,
								37006
							],
							[
								37361,
								37431
							],
							[
								37637,
								37722
							],
							[
								38272,
								38350
							],
							[
								40825,
								40894
							],
							[
								41024,
								41088
							],
							[
								41178,
								41232
							],
							[
								41928,
								41991
							],
							[
								44612,
								44669
							],
							[
								44960,
								45046
							],
							[
								45361,
								45424
							],
							[
								45787,
								45812
							],
							[
								46187,
								46250
							],
							[
								46456,
								46526
							],
							[
								47309,
								47382
							],
							[
								48623,
								48771
							],
							[
								49688,
								49693
							],
							[
								49898,
								49902
							],
							[
								49995,
								50040
							],
							[
								50165,
								50219
							],
							[
								50391,
								50446
							],
							[
								50657,
								50705
							],
							[
								50758,
								50824
							],
							[
								51010,
								51063
							],
							[
								51119,
								51163
							],
							[
								51327,
								51351
							],
							[
								51356,
								51375
							],
							[
								52153,
								52165
							],
							[
								52435,
								52461
							],
							[
								52749,
								52776
							],
							[
								53400,
								53421
							],
							[
								54409,
								54429
							],
							[
								54538,
								54559
							],
							[
								54613,
								54634
							],
							[
								54687,
								54704
							],
							[
								55443,
								55456
							],
							[
								55993,
								56017
							],
							[
								56063,
								56087
							],
							[
								56129,
								56153
							],
							[
								56201,
								56225
							],
							[
								56293,
								56331
							],
							[
								56504,
								56577
							],
							[
								58902,
								58967
							],
							[
								59098,
								59116
							],
							[
								59153,
								59197
							],
							[
								59364,
								59415
							],
							[
								59637,
								59676
							],
							[
								59727,
								59732
							],
							[
								59796,
								59842
							],
							[
								60240,
								60288
							],
							[
								60331,
								60339
							],
							[
								60422,
								60463
							],
							[
								60583,
								60612
							],
							[
								60697,
								60708
							],
							[
								60878,
								60892
							],
							[
								60897,
								60950
							],
							[
								61186,
								61208
							],
							[
								61713,
								61722
							],
							[
								61875,
								61880
							],
							[
								62027,
								62040
							],
							[
								62197,
								62219
							],
							[
								62650,
								62681
							],
							[
								62758,
								62763
							],
							[
								62799,
								62804
							],
							[
								62880,
								62888
							],
							[
								62931,
								62936
							],
							[
								63033,
								63038
							],
							[
								63064,
								63069
							],
							[
								63166,
								63175
							],
							[
								63207,
								63212
							],
							[
								63489,
								63501
							],
							[
								64201,
								64226
							],
							[
								65084,
								65091
							],
							[
								66053,
								66064
							],
							[
								66411,
								66425
							],
							[
								66469,
								66483
							],
							[
								66527,
								66541
							],
							[
								66585,
								66599
							],
							[
								66657,
								66708
							],
							[
								66764,
								66805
							],
							[
								67163,
								67300
							],
							[
								67380,
								67394
							],
							[
								67478,
								67509
							],
							[
								67696,
								67724
							],
							[
								67895,
								67934
							],
							[
								68040,
								68084
							],
							[
								68772,
								68792
							],
							[
								69131,
								69167
							],
							[
								69513,
								69533
							],
							[
								70002,
								70057
							],
							[
								70258,
								70310
							],
							[
								70801,
								70846
							],
							[
								71103,
								71118
							],
							[
								71703,
								71708
							],
							[
								71837,
								71846
							],
							[
								71984,
								72036
							],
							[
								72158,
								72215
							],
							[
								72345,
								72411
							],
							[
								72775,
								72838
							],
							[
								73384,
								73411
							],
							[
								73416,
								73435
							],
							[
								74903,
								74915
							],
							[
								75567,
								75584
							],
							[
								76552,
								76563
							],
							[
								76835,
								76860
							],
							[
								77337,
								77344
							],
							[
								78525,
								78538
							],
							[
								78819,
								78843
							],
							[
								79463,
								79490
							],
							[
								79534,
								79561
							],
							[
								79605,
								79632
							],
							[
								79688,
								79715
							],
							[
								79751,
								79778
							],
							[
								79849,
								79890
							],
							[
								80069,
								80118
							],
							[
								80240,
								80317
							],
							[
								80614,
								80665
							],
							[
								81421,
								81477
							],
							[
								82634,
								82654
							],
							[
								83318,
								83349
							],
							[
								83354,
								83367
							],
							[
								83742,
								83759
							],
							[
								84032,
								84044
							],
							[
								84761,
								84781
							],
							[
								85462,
								85493
							],
							[
								85568,
								85613
							],
							[
								85801,
								85960
							],
							[
								86905,
								86910
							],
							[
								87122,
								87126
							],
							[
								87321,
								87388
							],
							[
								87569,
								87626
							],
							[
								87753,
								87819
							],
							[
								87888,
								87960
							],
							[
								88844,
								88849
							],
							[
								89676,
								89685
							],
							[
								90488,
								90493
							],
							[
								91154,
								91163
							],
							[
								91607,
								91679
							],
							[
								91806,
								91873
							],
							[
								91987,
								92051
							],
							[
								92259,
								92299
							],
							[
								92402,
								92453
							],
							[
								92590,
								92637
							],
							[
								92766,
								92807
							],
							[
								92893,
								92946
							],
							[
								92999,
								93019
							],
							[
								93213,
								93284
							],
							[
								93390,
								93447
							],
							[
								93785,
								93835
							],
							[
								94126,
								94178
							],
							[
								94230,
								94250
							],
							[
								94378,
								94448
							],
							[
								94552,
								94614
							],
							[
								94711,
								94767
							],
							[
								95048,
								95097
							],
							[
								95351,
								95372
							],
							[
								95622,
								95662
							],
							[
								95870,
								95894
							],
							[
								96043,
								96068
							],
							[
								96079,
								96123
							],
							[
								96322,
								96326
							],
							[
								96395,
								96399
							],
							[
								96592,
								96686
							],
							[
								97282,
								97302
							],
							[
								97366,
								97388
							],
							[
								97581,
								97586
							],
							[
								97799,
								97804
							],
							[
								97997,
								98002
							],
							[
								98027,
								98036
							],
							[
								98215,
								98234
							],
							[
								98261,
								98289
							],
							[
								98300,
								98319
							],
							[
								98472,
								98491
							],
							[
								98605,
								98610
							],
							[
								98639,
								98667
							],
							[
								98734,
								98755
							],
							[
								98934,
								98952
							],
							[
								99105,
								99119
							],
							[
								99165,
								99170
							],
							[
								99350,
								99364
							],
							[
								99411,
								99416
							],
							[
								99600,
								99605
							],
							[
								99659,
								99664
							],
							[
								100425,
								100430
							],
							[
								100584,
								100616
							],
							[
								100709,
								100714
							],
							[
								100800,
								100852
							],
							[
								100974,
								101025
							],
							[
								101129,
								101196
							],
							[
								101422,
								101442
							],
							[
								101496,
								101501
							],
							[
								101554,
								101565
							],
							[
								101642,
								101675
							],
							[
								101859,
								101864
							],
							[
								101939,
								101972
							],
							[
								102319,
								102350
							],
							[
								102355,
								102368
							],
							[
								102668,
								102685
							],
							[
								103070,
								103077
							],
							[
								103374,
								103400
							],
							[
								103843,
								103863
							],
							[
								105092,
								105123
							],
							[
								105167,
								105198
							],
							[
								105246,
								105277
							],
							[
								105313,
								105344
							],
							[
								105419,
								105464
							],
							[
								105652,
								105720
							],
							[
								106059,
								106064
							],
							[
								106282,
								106286
							],
							[
								106382,
								106448
							],
							[
								106869,
								106936
							],
							[
								107075,
								107132
							],
							[
								107446,
								107512
							],
							[
								108274,
								108334
							],
							[
								108559,
								108625
							],
							[
								108827,
								108894
							],
							[
								108969,
								109038
							],
							[
								109191,
								109334
							],
							[
								110026,
								110031
							],
							[
								110239,
								110243
							],
							[
								110339,
								110391
							],
							[
								110563,
								110621
							],
							[
								110989,
								110999
							],
							[
								111037,
								111061
							],
							[
								111209,
								111230
							],
							[
								111257,
								111262
							],
							[
								111669,
								111687
							],
							[
								111992,
								112010
							],
							[
								112145,
								112178
							],
							[
								112471,
								112504
							],
							[
								112797,
								112822
							],
							[
								113031,
								113035
							],
							[
								113319,
								113357
							],
							[
								113797,
								113807
							],
							[
								113845,
								113884
							],
							[
								113932,
								113936
							],
							[
								114244,
								114276
							],
							[
								114558,
								114579
							],
							[
								114606,
								114611
							],
							[
								115571,
								115589
							],
							[
								116188,
								116206
							],
							[
								116298,
								116343
							],
							[
								116736,
								116757
							],
							[
								116784,
								116789
							],
							[
								118009,
								118030
							],
							[
								118866,
								118884
							],
							[
								118986,
								119011
							],
							[
								119399,
								119424
							],
							[
								119811,
								119844
							],
							[
								120137,
								120170
							],
							[
								120463,
								120488
							],
							[
								120790,
								120839
							],
							[
								121041,
								121086
							],
							[
								121666,
								121709
							],
							[
								121845,
								121859
							],
							[
								121864,
								121919
							],
							[
								122163,
								122183
							],
							[
								122952,
								122961
							],
							[
								123111,
								123124
							],
							[
								123280,
								123293
							],
							[
								123819,
								123847
							],
							[
								123928,
								123933
							],
							[
								123971,
								123976
							],
							[
								124054,
								124059
							],
							[
								124096,
								124101
							],
							[
								124204,
								124213
							],
							[
								124248,
								124253
							],
							[
								124841,
								124872
							],
							[
								124953,
								124958
							],
							[
								124996,
								125001
							],
							[
								125079,
								125084
							],
							[
								125121,
								125126
							],
							[
								125229,
								125238
							],
							[
								125273,
								125278
							],
							[
								125577,
								125589
							],
							[
								125982,
								126008
							],
							[
								126295,
								126328
							],
							[
								126431,
								126452
							],
							[
								126923,
								126965
							],
							[
								127132,
								127150
							],
							[
								128299,
								128335
							],
							[
								129900,
								129905
							],
							[
								130245,
								130275
							],
							[
								130375,
								130396
							],
							[
								131234,
								131260
							],
							[
								131458,
								131482
							],
							[
								131684,
								131697
							],
							[
								132152,
								132184
							],
							[
								132577,
								132601
							],
							[
								132861,
								132874
							],
							[
								133338,
								133370
							],
							[
								133777,
								133790
							],
							[
								134524,
								134538
							],
							[
								134584,
								134598
							],
							[
								134650,
								134664
							],
							[
								134720,
								134734
							],
							[
								134780,
								134794
							],
							[
								134834,
								134848
							],
							[
								134886,
								134900
							],
							[
								134980,
								134994
							],
							[
								135039,
								135053
							],
							[
								135117,
								135238
							],
							[
								135318,
								135332
							],
							[
								135416,
								135447
							],
							[
								135618,
								135699
							],
							[
								135733,
								135747
							],
							[
								135831,
								135859
							],
							[
								136011,
								136052
							],
							[
								136164,
								136192
							],
							[
								136363,
								136402
							],
							[
								136508,
								136553
							],
							[
								137002,
								137020
							],
							[
								137213,
								137249
							],
							[
								137596,
								137610
							],
							[
								137646,
								137685
							],
							[
								138169,
								138210
							],
							[
								138360,
								138410
							],
							[
								138726,
								138759
							],
							[
								138855,
								138880
							],
							[
								138885,
								138905
							],
							[
								139214,
								139233
							],
							[
								139496,
								139506
							],
							[
								139787,
								139812
							],
							[
								139881,
								139925
							],
							[
								140050,
								140089
							],
							[
								140328,
								140353
							],
							[
								140415,
								140435
							],
							[
								140440,
								140460
							],
							[
								140759,
								140778
							],
							[
								141089,
								141099
							],
							[
								141360,
								141380
							],
							[
								141444,
								141483
							],
							[
								141598,
								141632
							],
							[
								141862,
								141877
							],
							[
								141882,
								141966
							],
							[
								142241,
								142263
							],
							[
								142879,
								142888
							],
							[
								143042,
								143055
							],
							[
								143234,
								143247
							],
							[
								143430,
								143452
							],
							[
								144157,
								144167
							],
							[
								144244,
								144269
							],
							[
								144316,
								144346
							],
							[
								144704,
								144709
							],
							[
								145119,
								145150
							],
							[
								145391,
								145411
							],
							[
								145726,
								145731
							],
							[
								146112,
								146116
							],
							[
								146379,
								146404
							],
							[
								146645,
								146665
							],
							[
								146971,
								146976
							],
							[
								147349,
								147353
							],
							[
								147772,
								147796
							],
							[
								148022,
								148054
							],
							[
								148295,
								148315
							],
							[
								148630,
								148635
							],
							[
								149075,
								149079
							],
							[
								149851,
								149883
							],
							[
								149980,
								149988
							],
							[
								150040,
								150048
							],
							[
								150385,
								150390
							],
							[
								150423,
								150428
							],
							[
								150524,
								150533
							],
							[
								150563,
								150568
							],
							[
								150907,
								150921
							],
							[
								151097,
								151111
							],
							[
								151364,
								151379
							],
							[
								151438,
								151467
							],
							[
								151640,
								151680
							],
							[
								151831,
								151894
							],
							[
								152120,
								152164
							],
							[
								152244,
								152305
							],
							[
								152505,
								152515
							],
							[
								152627,
								152659
							],
							[
								152664,
								152677
							],
							[
								152868,
								152885
							],
							[
								153183,
								153209
							],
							[
								153619,
								153644
							],
							[
								154050,
								154061
							],
							[
								154727,
								154759
							],
							[
								154807,
								154839
							],
							[
								154883,
								154915
							],
							[
								154959,
								154991
							],
							[
								155067,
								155113
							],
							[
								155303,
								155371
							],
							[
								155508,
								155575
							],
							[
								156280,
								156356
							],
							[
								156484,
								156488
							],
							[
								156581,
								156633
							],
							[
								156772,
								156830
							],
							[
								157034,
								157099
							],
							[
								157363,
								157404
							]
						],
						"symlist":
						[
							" e =>",
							"() =>",
							"x =>",
							"v =>",
							"function isDictionary(x)",
							"function assertDictionary(obj, context)",
							"function assertFunction(x, context)",
							"function assertObject(x, context)",
							"function assertRequiredArgument(x, position, context)",
							"function assertRequiredField(x, field, context)",
							"function convertUnrestrictedDouble(value)",
							"function censorNegativeZero(x)",
							"function integerPart(x)",
							"function convertUnsignedLongLongWithEnforceRange(value, context)",
							"function newPromise(executor)",
							"function promiseResolvedWith(value)",
							"resolve =>",
							"function promiseRejectedWith(reason)",
							"function PerformPromiseThen(promise, onFulfilled, onRejected)",
							"function uponPromise(promise, onFulfilled, onRejected)",
							"function uponFulfillment(promise, onFulfilled)",
							"function uponRejection(promise, onRejected)",
							"function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler)",
							"function setPromiseIsHandledToTrue(promise)",
							"_queueMicrotask = callback =>",
							"_queueMicrotask = cb =>",
							"function reflectCall(F, V, args)",
							"function promiseCall(F, V, args)",
							"function ReadableStreamReaderGenericInitialize(reader, stream)",
							"function ReadableStreamReaderGenericCancel(reader, reason)",
							"function ReadableStreamReaderGenericRelease(reader)",
							"function readerLockException(name)",
							"function defaultReaderClosedPromiseInitialize(reader)",
							"(resolve, reject) =>",
							"function defaultReaderClosedPromiseInitializeAsRejected(reader, reason)",
							"function defaultReaderClosedPromiseReject(reader, reason)",
							"function defaultReaderClosedPromiseResolve(reader)",
							"function assertReadableStream(x, context)",
							"function AcquireReadableStreamDefaultReader(stream)",
							"function ReadableStreamAddReadRequest(stream, readRequest)",
							"function ReadableStreamFulfillReadRequest(stream, chunk, done)",
							"function ReadableStreamGetNumReadRequests(stream)",
							"function ReadableStreamHasDefaultReader(stream)",
							"ReadableStreamDefaultReader",
							"constructor(stream)",
							"get closed()",
							"cancel(reason = undefined)",
							"read()",
							"(resolve, reject) =>",
							"_chunkSteps: chunk =>",
							"_closeSteps: () =>",
							"_errorSteps: e =>",
							"releaseLock()",
							"ReadableStreamDefaultReader",
							"ReadableStreamDefaultReader",
							"ReadableStreamDefaultReader",
							"ReadableStreamDefaultReader",
							"function IsReadableStreamDefaultReader(x)",
							"function ReadableStreamDefaultReaderRead(reader, readRequest)",
							"function ReadableStreamDefaultReaderErrorReadRequests(reader, e)",
							"readRequest =>",
							"function defaultReaderBrandCheckException(name)",
							"function CreateArrayFromList(elements)",
							"function CanCopyDataBlockBytes(toBuffer, toIndex, fromBuffer, fromIndex, count)",
							"function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n)",
							"TransferArrayBuffer = O =>",
							"TransferArrayBuffer = buffer =>",
							"TransferArrayBuffer = buffer =>",
							"TransferArrayBuffer = buffer =>",
							"function CanTransferArrayBuffer(O)",
							"IsDetachedBuffer = O =>",
							"IsDetachedBuffer = buffer =>",
							"IsDetachedBuffer = buffer =>",
							"function ArrayBufferSlice(buffer, begin, end)",
							"function GetMethod(receiver, prop)",
							"function CreateAsyncFromSyncIterator(syncIteratorRecord)",
							"next()",
							"function AsyncFromSyncIteratorContinuation(result)",
							" v =>",
							"function GetIterator(obj, hint = 'sync', method)",
							"function IteratorNext(iteratorRecord)",
							"ReadableStreamAsyncIteratorImpl",
							"constructor(reader, preventCancel)",
							"next()",
							"nextSteps = () =>",
							"return(value)",
							"returnSteps = () =>",
							"_nextSteps()",
							"(resolve, reject) =>",
							"_chunkSteps: chunk =>",
							"() =>",
							"_closeSteps: () =>",
							"_errorSteps: reason =>",
							"_returnSteps(value)",
							" () =>",
							"next()",
							"function AcquireReadableStreamAsyncIterator(stream, preventCancel)",
							"function IsReadableStreamAsyncIterator(x)",
							"function streamAsyncIteratorBrandCheckException(name)",
							"x =>",
							"function IsNonNegativeNumber(v)",
							"function CloneAsUint8Array(O)",
							"function DequeueValue(container)",
							"function EnqueueValueWithSize(container, value, size)",
							"function PeekQueueValue(container)",
							"function ResetQueue(container)",
							"value =>",
							"function isDataView(view)",
							"DataView",
							"function arrayBufferViewElementSize(ctor)",
							"ReadableStreamBYOBRequest",
							"constructor()",
							"get view()",
							"respond(bytesWritten)",
							"respondWithNewView(view)",
							"ReadableStreamBYOBRequest",
							"ReadableStreamBYOBRequest",
							"ReadableStreamBYOBRequest",
							"ReadableByteStreamController",
							"constructor()",
							"get byobRequest()",
							"get desiredSize()",
							"close()",
							"enqueue(chunk)",
							"error(e = undefined)",
							"ReadableByteStreamController",
							"ReadableByteStreamController",
							"ReadableByteStreamController",
							"ReadableByteStreamController",
							"function IsReadableByteStreamController(x)",
							"function IsReadableStreamBYOBRequest(x)",
							"function ReadableByteStreamControllerCallPullIfNeeded(controller)",
							" () =>",
							" e =>",
							"function ReadableByteStreamControllerClearPendingPullIntos(controller)",
							"function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor)",
							"function ReadableByteStreamControllerCommitPullIntoDescriptors(stream, pullIntoDescriptors)",
							"function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor)",
							"function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength)",
							"function ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, buffer, byteOffset, byteLength)",
							"function ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, firstDescriptor)",
							"function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)",
							"function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor)",
							"function ReadableByteStreamControllerHandleQueueDrain(controller)",
							"function ReadableByteStreamControllerInvalidateBYOBRequest(controller)",
							"function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller)",
							"function ReadableByteStreamControllerRespondInternal(controller, bytesWritten)",
							"function ReadableByteStreamControllerShiftPendingPullInto(controller)",
							"function ReadableByteStreamControllerClearAlgorithms(controller)",
							"function ReadableByteStreamControllerClose(controller)",
							"function ReadableByteStreamControllerEnqueue(controller, chunk)",
							"function ReadableByteStreamControllerError(controller, e)",
							"function ReadableByteStreamControllerFillReadRequestFromQueue(controller, readRequest)",
							"function ReadableByteStreamControllerGetBYOBRequest(controller)",
							"ReadableStreamBYOBRequest",
							"function ReadableByteStreamControllerGetDesiredSize(controller)",
							"function ReadableByteStreamControllerRespond(controller, bytesWritten)",
							"function ReadableByteStreamControllerRespondWithNewView(controller, view)",
							"function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize)",
							" () =>",
							" r =>",
							"function byobRequestBrandCheckException(name)",
							"function byteStreamControllerBrandCheckException(name)",
							"function convertReadableStreamReaderMode(mode, context)",
							"function AcquireReadableStreamBYOBReader(stream)",
							"function ReadableStreamAddReadIntoRequest(stream, readIntoRequest)",
							"function ReadableStreamGetNumReadIntoRequests(stream)",
							"function ReadableStreamHasBYOBReader(stream)",
							"ReadableStreamBYOBReader",
							"constructor(stream)",
							"get closed()",
							"cancel(reason = undefined)",
							"read(view, rawOptions = {})",
							"(options, context) =>",
							"(resolve, reject) =>",
							"_chunkSteps: chunk =>",
							"_closeSteps: chunk =>",
							"_errorSteps: e =>",
							"releaseLock()",
							"ReadableStreamBYOBReader",
							"ReadableStreamBYOBReader",
							"ReadableStreamBYOBReader",
							"ReadableStreamBYOBReader",
							"function IsReadableStreamBYOBReader(x)",
							"function ReadableStreamBYOBReaderRead(reader, view, min, readIntoRequest)",
							"function ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e)",
							"readIntoRequest =>",
							"function byobReaderBrandCheckException(name)",
							"function ExtractHighWaterMark(strategy, defaultHWM)",
							"function ExtractSizeAlgorithm(strategy)",
							" () =>",
							"function convertQueuingStrategy(init, context)",
							"function convertQueuingStrategySize(fn, context)",
							" chunk =>",
							"function assertWritableStream(x, context)",
							"function isAbortSignal(value)",
							"AbortSignal",
							"WritableStream",
							"constructor(rawUnderlyingSink = {}, rawStrategy = {})",
							"(original, context) =>",
							" reason =>",
							" () =>",
							" controller =>",
							" (chunk, controller) =>",
							"WritableStreamDefaultController",
							" () =>",
							" () =>",
							" chunk =>",
							" () =>",
							" () =>",
							" () =>",
							" reason =>",
							" () =>",
							"get locked()",
							"abort(reason = undefined)",
							"close()",
							"getWriter()",
							"WritableStream",
							"WritableStream",
							"WritableStream",
							"WritableStream",
							"function AcquireWritableStreamDefaultWriter(stream)",
							"function InitializeWritableStream(stream)",
							"function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1)",
							"WritableStream",
							"WritableStreamDefaultController",
							"function IsWritableStream(x)",
							"function IsWritableStreamLocked(stream)",
							"function WritableStreamAbort(stream, reason)",
							"(resolve, reject) =>",
							"function WritableStreamClose(stream)",
							"(resolve, reject) =>",
							"function WritableStreamDealWithRejection(stream, error)",
							"function WritableStreamStartErroring(stream, reason)",
							"function WritableStreamFinishErroring(stream)",
							"writeRequest =>",
							" () =>",
							" reason =>",
							"function WritableStreamCloseQueuedOrInFlight(stream)",
							"function WritableStreamHasOperationMarkedInFlight(stream)",
							"function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream)",
							"function WritableStreamUpdateBackpressure(stream, backpressure)",
							"WritableStreamDefaultWriter",
							"constructor(stream)",
							"get closed()",
							"get desiredSize()",
							"get ready()",
							"abort(reason = undefined)",
							"close()",
							"releaseLock()",
							"write(chunk = undefined)",
							"WritableStreamDefaultWriter",
							"WritableStreamDefaultWriter",
							"WritableStreamDefaultWriter",
							"WritableStreamDefaultWriter",
							"WritableStreamDefaultWriter",
							"function IsWritableStreamDefaultWriter(x)",
							"function WritableStreamDefaultWriterClose(writer)",
							"function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error)",
							"function WritableStreamDefaultWriterRelease(writer)",
							"function WritableStreamDefaultWriterWrite(writer, chunk)",
							"(resolve, reject) =>",
							"WritableStreamDefaultController",
							"constructor()",
							"get abortReason()",
							"get signal()",
							"error(e = undefined)",
							"WritableStreamDefaultController",
							"function IsWritableStreamDefaultController(x)",
							"function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm)",
							" () =>",
							" r =>",
							"function WritableStreamDefaultControllerClearAlgorithms(controller)",
							"function WritableStreamDefaultControllerClose(controller)",
							"function WritableStreamDefaultControllerGetDesiredSize(controller)",
							"function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller)",
							" () =>",
							" reason =>",
							" () =>",
							" reason =>",
							"function WritableStreamDefaultControllerErrorIfNeeded(controller, error)",
							"function WritableStreamDefaultControllerGetBackpressure(controller)",
							"function WritableStreamDefaultControllerError(controller, error)",
							"function streamBrandCheckException(name)",
							"function defaultControllerBrandCheckException(name)",
							"function defaultWriterBrandCheckException(name)",
							"function defaultWriterLockException(name)",
							"function defaultWriterClosedPromiseInitialize(writer)",
							"(resolve, reject) =>",
							"function defaultWriterClosedPromiseInitializeAsRejected(writer, reason)",
							"function defaultWriterClosedPromiseReject(writer, reason)",
							"function defaultWriterClosedPromiseResolve(writer)",
							"function defaultWriterReadyPromiseInitialize(writer)",
							"(resolve, reject) =>",
							"function defaultWriterReadyPromiseInitializeAsRejected(writer, reason)",
							"function defaultWriterReadyPromiseInitializeAsResolved(writer)",
							"function defaultWriterReadyPromiseReject(writer, reason)",
							"function defaultWriterReadyPromiseResolve(writer)",
							"function getGlobals()",
							"function isDOMExceptionConstructor(ctor)",
							"function getFromGlobal()",
							"function createPolyfill()",
							"ctor = function DOMException2(message, name)",
							"ctor",
							"ctor",
							"function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal)",
							"(resolve, reject) =>",
							"abortAlgorithm = () =>",
							"() =>",
							"() =>",
							"() =>",
							"action =>",
							" function pipeLoop()",
							"(resolveLoop, rejectLoop) =>",
							" function next(done)",
							" function pipeStep()",
							" () =>",
							"(resolveRead, rejectRead) =>",
							"_chunkSteps: chunk =>",
							"_closeSteps: () =>",
							" storedError =>",
							"() =>",
							" storedError =>",
							"() =>",
							" () =>",
							"() =>",
							"() =>",
							" function waitForWritesToFinish()",
							" () =>",
							" function isOrBecomesErrored(stream, promise, action)",
							" function isOrBecomesClosed(stream, promise, action)",
							" function shutdownWithAction(action, originalIsError, originalError)",
							" function doTheRest()",
							" () =>",
							" newError =>",
							" function shutdown(isError, error)",
							" () =>",
							" function finalize(isError, error)",
							"ReadableStreamDefaultController",
							"constructor()",
							"get desiredSize()",
							"close()",
							"enqueue(chunk = undefined)",
							"error(e = undefined)",
							"ReadableStreamDefaultController",
							"ReadableStreamDefaultController",
							"ReadableStreamDefaultController",
							"ReadableStreamDefaultController",
							"function IsReadableStreamDefaultController(x)",
							"function ReadableStreamDefaultControllerCallPullIfNeeded(controller)",
							" () =>",
							" e =>",
							"function ReadableStreamDefaultControllerShouldCallPull(controller)",
							"function ReadableStreamDefaultControllerClearAlgorithms(controller)",
							"function ReadableStreamDefaultControllerClose(controller)",
							"function ReadableStreamDefaultControllerEnqueue(controller, chunk)",
							"function ReadableStreamDefaultControllerError(controller, e)",
							"function ReadableStreamDefaultControllerGetDesiredSize(controller)",
							"function ReadableStreamDefaultControllerHasBackpressure(controller)",
							"function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)",
							"function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm)",
							" () =>",
							" r =>",
							"function defaultControllerBrandCheckException2(name)",
							"function ReadableStreamDefaultTee(stream, cloneForBranch2)",
							"resolve =>",
							" function pullAlgorithm()",
							"_chunkSteps: chunk =>",
							"() =>",
							"_closeSteps: () =>",
							"_errorSteps: () =>",
							" function cancel1Algorithm(reason)",
							" function cancel2Algorithm(reason)",
							" function startAlgorithm()",
							" r =>",
							"function ReadableByteStreamTee(stream)",
							"resolve =>",
							" function forwardReaderError(thisReader)",
							" r =>",
							" function pullWithDefaultReader()",
							"_chunkSteps: chunk =>",
							"() =>",
							"_closeSteps: () =>",
							"_errorSteps: () =>",
							" function pullWithBYOBReader(view, forBranch2)",
							"_chunkSteps: chunk =>",
							"() =>",
							"_closeSteps: chunk =>",
							"_errorSteps: () =>",
							" function pull1Algorithm()",
							" function pull2Algorithm()",
							" function cancel1Algorithm(reason)",
							" function cancel2Algorithm(reason)",
							" function startAlgorithm()",
							"function convertReadableStreamType(type, context)",
							"function convertPipeOptions(options, context)",
							"function assertAbortSignal(signal, context)",
							"ReadableStream",
							"constructor(rawUnderlyingSource = {}, rawStrategy = {})",
							"(source, context) =>",
							" reason =>",
							" controller =>",
							" controller =>",
							"ReadableByteStreamController",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" reason =>",
							" () =>",
							"ReadableStreamDefaultController",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" reason =>",
							" () =>",
							"get locked()",
							"cancel(reason = undefined)",
							"getReader(rawOptions = undefined)",
							"(options, context) =>",
							"pipeThrough(rawTransform, rawOptions = {})",
							"(pair, context) =>",
							"pipeTo(destination, rawOptions = {})",
							"tee()",
							"values(rawOptions = undefined)",
							"(options, context) =>",
							"static from(asyncIterable)",
							" function pullAlgorithm()",
							" readResult =>",
							" function cancelAlgorithm(reason)",
							" function pullAlgorithm()",
							" iterResult =>",
							" function cancelAlgorithm(reason)",
							" iterResult =>",
							"ReadableStream",
							"ReadableStream",
							"ReadableStream",
							"ReadableStream",
							"ReadableStream",
							"ReadableStream",
							"ReadableStream",
							"ReadableStream",
							"ReadableStream",
							"function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1)",
							"ReadableStream",
							"ReadableStreamDefaultController",
							"function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm)",
							"ReadableStream",
							"ReadableByteStreamController",
							"function InitializeReadableStream(stream)",
							"function IsReadableStream(x)",
							"function IsReadableStreamLocked(stream)",
							"function ReadableStreamCancel(stream, reason)",
							"readIntoRequest =>",
							"function ReadableStreamClose(stream)",
							"readRequest =>",
							"function ReadableStreamError(stream, e)",
							"function streamBrandCheckException2(name)",
							"function convertQueuingStrategyInit(init, context)",
							"byteLengthSizeFunction = chunk =>",
							"ByteLengthQueuingStrategy",
							"constructor(options)",
							"get highWaterMark()",
							"get size()",
							"ByteLengthQueuingStrategy",
							"function byteLengthBrandCheckException(name)",
							"function IsByteLengthQueuingStrategy(x)",
							"countSizeFunction = () =>",
							"CountQueuingStrategy",
							"constructor(options)",
							"get highWaterMark()",
							"get size()",
							"CountQueuingStrategy",
							"function countBrandCheckException(name)",
							"function IsCountQueuingStrategy(x)",
							"TransformStream",
							"constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {})",
							"(original, context) =>",
							" reason =>",
							" controller =>",
							" controller =>",
							" (chunk, controller) =>",
							"resolve =>",
							" function startAlgorithm()",
							" function writeAlgorithm(chunk)",
							" () =>",
							" function abortAlgorithm(reason)",
							"(resolve, reject) =>",
							" () =>",
							" r =>",
							" function closeAlgorithm()",
							"(resolve, reject) =>",
							" () =>",
							" r =>",
							" function pullAlgorithm()",
							" function cancelAlgorithm(reason)",
							"(resolve, reject) =>",
							" () =>",
							" r =>",
							"TransformStreamDefaultController",
							" chunk =>",
							" chunk =>",
							" () =>",
							" () =>",
							" reason =>",
							" () =>",
							"get readable()",
							"get writable()",
							"TransformStream",
							"function IsTransformStream(x)",
							"function TransformStreamError(stream, e)",
							"function TransformStreamErrorWritableAndUnblockWrite(stream, e)",
							"function TransformStreamUnblockWrite(stream)",
							"function TransformStreamSetBackpressure(stream, backpressure)",
							"resolve =>",
							"TransformStreamDefaultController",
							"constructor()",
							"get desiredSize()",
							"enqueue(chunk = undefined)",
							"error(reason = undefined)",
							"terminate()",
							"TransformStreamDefaultController",
							"TransformStreamDefaultController",
							"TransformStreamDefaultController",
							"TransformStreamDefaultController",
							"function IsTransformStreamDefaultController(x)",
							"function TransformStreamDefaultControllerClearAlgorithms(controller)",
							"function TransformStreamDefaultControllerEnqueue(controller, chunk)",
							"function TransformStreamDefaultControllerPerformTransform(controller, chunk)",
							" r =>",
							"function defaultControllerBrandCheckException3(name)",
							"function defaultControllerFinishPromiseResolve(controller)",
							"function defaultControllerFinishPromiseReject(controller, reason)",
							"function streamBrandCheckException3(name)"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					119,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/stream-utils.js",
						"symkeys":
						[
							[
								590,
								624
							],
							[
								824,
								853
							],
							[
								1076,
								1107
							],
							[
								1143,
								1151
							],
							[
								1446,
								1478
							],
							[
								1496,
								1516
							],
							[
								1680,
								1693
							],
							[
								1710,
								1725
							],
							[
								1909,
								1946
							],
							[
								2052,
								2059
							],
							[
								2116,
								2141
							],
							[
								2278,
								2291
							],
							[
								2419,
								2469
							],
							[
								2536,
								2545
							],
							[
								2609,
								2618
							],
							[
								2829,
								2850
							],
							[
								2937,
								2957
							],
							[
								3009,
								3029
							],
							[
								3070,
								3085
							],
							[
								3121,
								3133
							],
							[
								3162,
								3178
							],
							[
								3220,
								3237
							]
						],
						"symlist":
						[
							"async function readWholeStream(st)",
							"async function readStream(st)",
							" function writeStream(st, chunk)",
							" chunk =>",
							" function writeStreamIterator(st)",
							"next: async chunk =>",
							"return: () =>",
							"throw: error =>",
							" function streamFromIterable(iterable)",
							"start()",
							"pull: async controller =>",
							"cancel: () =>",
							" function readableStreamCallback(st, startCallback)",
							" reader =>",
							" result =>",
							" function streamPipe()",
							"start: controller =>",
							"start: controller =>",
							"write: chunk =>",
							"close: () =>",
							"abort: reason =>",
							"cancel: reason =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					120,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/simple-queue.js",
						"symkeys":
						[
							[
								462,
								473
							],
							[
								518,
								531
							],
							[
								1014,
								1026
							],
							[
								1228,
								1241
							],
							[
								1847,
								1854
							],
							[
								3167,
								3184
							],
							[
								3770,
								3776
							],
							[
								3911,
								3922
							],
							[
								4074,
								4085
							]
						],
						"symlist":
						[
							"SimpleQueue",
							"constructor()",
							"get length()",
							"push(element)",
							"shift()",
							"forEach(callback)",
							"peek()",
							"next: () =>",
							"SimpleQueue"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACpAQAAICByZWFkV2hvbGVTdHJlYW0oc3QpCiAgcmVhZFN0cmVhbShzdCkKICB3cml0ZVN0cmVhbShzdCwgY2h1bmspCmNodW5rID0+CiAgd3JpdGVTdHJlYW1JdGVyYXRvcihzdCkKICBuZXh0OiBjaHVuayA9PgogIHJldHVybjogKCkgPT4KICB0aHJvdzogZXJyb3IgPT4KICBzdHJlYW1Gcm9tSXRlcmFibGUoaXRlcmFibGUpCiAgc3RhcnQoKQogIHB1bGw6IGNvbnRyb2xsZXIgPT4KICBjYW5jZWw6ICgpID0+CiAgcmVhZGFibGVTdHJlYW1DYWxsYmFjayhzdCwgc3RhcnRDYWxsYmFjaykKcmVhZGVyID0+CnJlc3VsdCA9PgogIHN0cmVhbVBpcGUoKQogIHN0YXJ0OiBjb250cm9sbGVyID0+CiAgc3RhcnQ6IGNvbnRyb2xsZXIgPT4KICB3cml0ZTogY2h1bmsgPT4KICBjbG9zZTogKCkgPT4KICBhYm9ydDogcmVhc29uID0+CiAgY2FuY2VsOiByZWFzb24gPT4AAAAAAAAAAHsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					121,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/request.js",
						"symkeys":
						[
							[
								88,
								95
							],
							[
								113,
								145
							],
							[
								2004,
								2011
							],
							[
								2090,
								2097
							],
							[
								2300,
								2332
							]
						],
						"symlist":
						[
							"Request",
							"constructor(input, options = {})",
							"clone()",
							"Request",
							"function normalizeMethod(method)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB7AAAAU2ltcGxlUXVldWUKICBjb25zdHJ1Y3RvcigpCiAgZ2V0IGxlbmd0aCgpCiAgcHVzaChlbGVtZW50KQogIHNoaWZ0KCkKICBmb3JFYWNoKGNhbGxiYWNrKQogIHBlZWsoKQogIG5leHQ6ICgpID0+ClNpbXBsZVF1ZXVlAAAAAAAAAABWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					122,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/response.js",
						"symkeys":
						[
							[
								141,
								149
							],
							[
								167,
								198
							],
							[
								696,
								710
							],
							[
								896,
								924
							],
							[
								1098,
								1105
							],
							[
								1306,
								1314
							]
						],
						"symlist":
						[
							"Response",
							"constructor(body, options = {})",
							"static error()",
							"static redirect(url, status)",
							"clone()",
							"Response"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABWAAAAUmVxdWVzdAogIGNvbnN0cnVjdG9yKGlucHV0LCBvcHRpb25zID0ge30pCiAgY2xvbmUoKQpSZXF1ZXN0CiAgbm9ybWFsaXplTWV0aG9kKG1ldGhvZCkAAAAAAAAAAG0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					123,
					2,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/response.js",
						"symkeys":
						[
							[
								141,
								149
							],
							[
								167,
								198
							],
							[
								696,
								710
							],
							[
								896,
								924
							],
							[
								1098,
								1105
							],
							[
								1311,
								1319
							]
						],
						"symlist":
						[
							"Response",
							"constructor(body, options = {})",
							"static error()",
							"static redirect(url, status)",
							"clone()",
							"Response"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABtAAAAUmVzcG9uc2UKICBjb25zdHJ1Y3Rvcihib2R5LCBvcHRpb25zID0ge30pCiAgc3RhdGljIGVycm9yKCkKICBzdGF0aWMgcmVkaXJlY3QodXJsLCBzdGF0dXMpCiAgY2xvbmUoKQpSZXNwb25zZQAAAAAAAAAAbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG0AAABSZXNwb25zZQogIGNvbnN0cnVjdG9yKGJvZHksIG9wdGlvbnMgPSB7fSkKICBzdGF0aWMgZXJyb3IoKQogIHN0YXRpYyByZWRpcmVjdCh1cmwsIHN0YXR1cykKICBjbG9uZSgpClJlc3BvbnNlAAAAAAAAAABtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					124,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/request.js",
						"symkeys":
						[
							[
								88,
								95
							],
							[
								113,
								145
							],
							[
								2004,
								2011
							],
							[
								2090,
								2097
							],
							[
								2300,
								2332
							]
						],
						"symlist":
						[
							"Request",
							"constructor(input, options = {})",
							"clone()",
							"Request",
							"function normalizeMethod(method)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAAAAUmVzcG9uc2UKICBjb25zdHJ1Y3Rvcihib2R5LCBvcHRpb25zID0ge30pCiAgc3RhdGljIGVycm9yKCkKICBzdGF0aWMgcmVkaXJlY3QodXJsLCBzdGF0dXMpCiAgY2xvbmUoKQpSZXNwb25zZQAAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					125,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABWAAAAUmVxdWVzdAogIGNvbnN0cnVjdG9yKGlucHV0LCBvcHRpb25zID0ge30pCiAgY2xvbmUoKQpSZXF1ZXN0CiAgbm9ybWFsaXplTWV0aG9kKG1ldGhvZCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					126,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/request.js",
						"symkeys":
						[
							[
								88,
								95
							],
							[
								113,
								145
							],
							[
								2004,
								2011
							],
							[
								2090,
								2097
							],
							[
								2300,
								2332
							]
						],
						"symlist":
						[
							"Request",
							"constructor(input, options = {})",
							"clone()",
							"Request",
							"function normalizeMethod(method)"
						]
					},
					"AQAAAAAAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					127,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABWAAAAUmVxdWVzdAogIGNvbnN0cnVjdG9yKGlucHV0LCBvcHRpb25zID0ge30pCiAgY2xvbmUoKQpSZXF1ZXN0CiAgbm9ybWFsaXplTWV0aG9kKG1ldGhvZCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					128,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/request.js",
						"symkeys":
						[
							[
								88,
								95
							],
							[
								113,
								145
							],
							[
								2004,
								2011
							],
							[
								2090,
								2097
							],
							[
								2300,
								2332
							]
						],
						"symlist":
						[
							"Request",
							"constructor(input, options = {})",
							"clone()",
							"Request",
							"function normalizeMethod(method)"
						]
					},
					"AQAAAAAAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					129,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/mimetypes.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABWAAAAUmVxdWVzdAogIGNvbnN0cnVjdG9yKGlucHV0LCBvcHRpb25zID0ge30pCiAgY2xvbmUoKQpSZXF1ZXN0CiAgbm9ybWFsaXplTWV0aG9kKG1ldGhvZCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					130,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/list.js",
						"symkeys":
						[
							[
								130,
								152
							],
							[
								318,
								350
							],
							[
								489,
								529
							],
							[
								639,
								668
							],
							[
								902,
								937
							],
							[
								1180,
								1207
							],
							[
								1413,
								1445
							],
							[
								1564,
								1585
							],
							[
								1861,
								1886
							],
							[
								2041,
								2072
							],
							[
								2144,
								2177
							],
							[
								2441,
								2470
							],
							[
								2541,
								2572
							],
							[
								3925,
								3952
							],
							[
								4021,
								4050
							],
							[
								4426,
								4454
							],
							[
								4678,
								4711
							],
							[
								4970,
								5000
							],
							[
								5393,
								5442
							],
							[
								5679,
								5709
							],
							[
								5952,
								5987
							],
							[
								6168,
								6209
							],
							[
								6371,
								6417
							],
							[
								6605,
								6651
							],
							[
								6813,
								6864
							],
							[
								7016,
								7026
							],
							[
								7060,
								7081
							],
							[
								7314,
								7325
							],
							[
								7460,
								7471
							],
							[
								7602,
								7612
							],
							[
								7754,
								7769
							],
							[
								7933,
								7947
							],
							[
								8101,
								8111
							],
							[
								8331,
								8340
							],
							[
								8583,
								8600
							],
							[
								8865,
								8881
							],
							[
								9029,
								9038
							],
							[
								9205,
								9220
							],
							[
								9256,
								9265
							],
							[
								9388,
								9395
							],
							[
								9571,
								9581
							]
						],
						"symlist":
						[
							" function list_node(el)",
							" function LIST_HEAD_INIT(el = {})",
							" function list_entry(el, member = 'data')",
							" function init_list_head(head)",
							" function __list_add(el, prev, next)",
							" function list_add(el, head)",
							" function list_add_tail(el, head)",
							" function list_del(el)",
							" function list_empty(head)",
							" function list_splice(src, dest)",
							" function __list_splice(src, dest)",
							" function list_sort(head, cmp)",
							" function __list_sort(head, cmp)",
							" function list_reverse(head)",
							" function __list_reverse(head)",
							" function list_move(el, head)",
							" function list_move_tail(el, head)",
							" function list_replace(old, el)",
							" function __list_merge(dprev, shead, stail, dnext)",
							" function list_merge(dest, src)",
							" function list_merge_tail(dest, src)",
							" function* list_for_each(head, t = a => a)",
							" function* list_for_each_safe(head, t = a => a)",
							" function* list_for_each_prev(head, t = a => a)",
							" function* list_for_each_prev_safe(head, t = a => a)",
							"LinkedList",
							"constructor(iterable)",
							"get empty()",
							"get front()",
							"get back()",
							"pushFront(data)",
							"pushBack(data)",
							"popFront()",
							"popBack()",
							"prependRange(rng)",
							"appendRange(rng)",
							"reverse()",
							"cmp = (a, b) =>",
							" (a, b) =>",
							"clone()",
							"LinkedList"
						]
					},
					"AQAAAAAAAAAAAAAAjwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					135,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/headers.js",
						"symkeys":
						[
							[
								13,
								20
							],
							[
								190,
								210
							],
							[
								272,
								288
							],
							[
								378,
								387
							],
							[
								637,
								644
							],
							[
								1063,
								1082
							],
							[
								1456,
								1468
							],
							[
								1912,
								1921
							],
							[
								2231,
								2240
							],
							[
								2591,
								2607
							],
							[
								2919,
								2945
							],
							[
								3198,
								3204
							],
							[
								3247,
								3259
							],
							[
								3417,
								3425
							],
							[
								3468,
								3476
							],
							[
								3674,
								3683
							],
							[
								3726,
								3742
							],
							[
								3862,
								3869
							],
							[
								3989,
								4017
							],
							[
								4329,
								4359
							]
						],
						"symlist":
						[
							"Headers",
							"constructor(headers)",
							"(value, name) =>",
							"header =>",
							"name =>",
							"append(name, value)",
							"delete(name)",
							"get(name)",
							"has(name)",
							"set(name, value)",
							"forEach(callback, thisArg)",
							"keys()",
							"(_, name) =>",
							"values()",
							"value =>",
							"entries()",
							"(value, name) =>",
							"Headers",
							" function normalizeName(name)",
							" function normalizeValue(value)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACPAwAAICBsaXN0X25vZGUoZWwpCkxJU1RfSEVBRF9JTklUKGVsID0ge30pCiAgbGlzdF9lbnRyeShlbCwgbWVtYmVyID0gJ2RhdGEnKQogIGluaXRfbGlzdF9oZWFkKGhlYWQpCiAgX19saXN0X2FkZChlbCwgcHJldiwgbmV4dCkKICBsaXN0X2FkZChlbCwgaGVhZCkKICBsaXN0X2FkZF90YWlsKGVsLCBoZWFkKQogIGxpc3RfZGVsKGVsKQogIGxpc3RfZW1wdHkoaGVhZCkKICBsaXN0X3NwbGljZShzcmMsIGRlc3QpCiAgX19saXN0X3NwbGljZShzcmMsIGRlc3QpCiAgbGlzdF9zb3J0KGhlYWQsIGNtcCkKICBfX2xpc3Rfc29ydChoZWFkLCBjbXApCiAgbGlzdF9yZXZlcnNlKGhlYWQpCiAgX19saXN0X3JldmVyc2UoaGVhZCkKICBsaXN0X21vdmUoZWwsIGhlYWQpCiAgbGlzdF9tb3ZlX3RhaWwoZWwsIGhlYWQpCiAgbGlzdF9yZXBsYWNlKG9sZCwgZWwpCiAgX19saXN0X21lcmdlKGRwcmV2LCBzaGVhZCwgc3RhaWwsIGRuZXh0KQogIGxpc3RfbWVyZ2UoZGVzdCwgc3JjKQogIGxpc3RfbWVyZ2VfdGFpbChkZXN0LCBzcmMpCiAgbGlzdF9mb3JfZWFjaChoZWFkLCB0ID0gYSA9PiBhKQogIGxpc3RfZm9yX2VhY2hfc2FmZShoZWFkLCB0ID0gYSA9PiBhKQogIGxpc3RfZm9yX2VhY2hfcHJldihoZWFkLCB0ID0gYSA9PiBhKQogIGxpc3RfZm9yX2VhY2hfcHJldl9zYWZlKGhlYWQsIHQgPSBhID0+IGEpCkxpbmtlZExpc3QKICBjb25zdHJ1Y3RvcihpdGVyYWJsZSkKICBnZXQgZW1wdHkoKQogIGdldCBmcm9udCgpCiAgZ2V0IGJhY2soKQogIHB1c2hGcm9udChkYXRhKQogIHB1c2hCYWNrKGRhdGEpCiAgcG9wRnJvbnQoKQogIHBvcEJhY2soKQogIHByZXBlbmRSYW5nZShybmcpCiAgYXBwZW5kUmFuZ2Uocm5nKQogIHJldmVyc2UoKQogIGNtcCA9IChhLCBiKSA9PgooYSwgYikgPT4KICBjbG9uZSgpCkxpbmtlZExpc3QAAAAAAAAAADEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/events.js",
						"symkeys":
						[
							[
								13,
								24
							],
							[
								251,
								283
							],
							[
								825,
								860
							],
							[
								1420,
								1440
							],
							[
								1900,
								1911
							],
							[
								1973,
								1985
							],
							[
								2010,
								2028
							],
							[
								2140,
								2170
							],
							[
								2415,
								2439
							],
							[
								2635,
								2653
							],
							[
								2768,
								2787
							],
							[
								2914,
								2934
							],
							[
								2947,
								2970
							],
							[
								3225,
								3249
							],
							[
								3371,
								3403
							],
							[
								3564,
								3593
							],
							[
								3929,
								3962
							],
							[
								4399,
								4477
							],
							[
								4501,
								4511
							],
							[
								4533,
								4540
							],
							[
								4597,
								4620
							],
							[
								4644,
								4651
							],
							[
								4766,
								4788
							],
							[
								4920,
								4967
							],
							[
								5017,
								5030
							],
							[
								5118,
								5122
							],
							[
								5155,
								5160
							],
							[
								5220,
								5230
							]
						],
						"symlist":
						[
							"EventTarget",
							"addEventListener(type, listener)",
							"removeEventListener(type, listener)",
							"dispatchEvent(event)",
							"EventTarget",
							"EventEmitter",
							"on(type, listener)",
							"removeListener(type, listener)",
							"removeAllListeners(type)",
							"rawListeners(type)",
							"emit(type, ...args)",
							"once(type, listener)",
							"callback = (...args) =>",
							"function checkType(type)",
							"function checkListener(listener)",
							"function removeAll(arr, elem)",
							" function once(emitter, ...events)",
							" function waitOne(emitter, events, options = { passive: true, capture: false })",
							"resolve =>",
							"type =>",
							" function handler(event)",
							"type =>",
							"map => (key, value) =>",
							" function EventTargetProperties(properties = [])",
							"constructor()",
							"ctor",
							"get()",
							"set(value)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxAQAASGVhZGVycwogIGNvbnN0cnVjdG9yKGhlYWRlcnMpCih2YWx1ZSwgbmFtZSkgPT4KICBoZWFkZXIgPT4KICBuYW1lID0+CiAgYXBwZW5kKG5hbWUsIHZhbHVlKQogIGRlbGV0ZShuYW1lKQogIGdldChuYW1lKQogIGhhcyhuYW1lKQogIHNldChuYW1lLCB2YWx1ZSkKICBmb3JFYWNoKGNhbGxiYWNrLCB0aGlzQXJnKQogIGtleXMoKQooXywgbmFtZSkgPT4KICB2YWx1ZXMoKQogIHZhbHVlID0+CiAgZW50cmllcygpCih2YWx1ZSwgbmFtZSkgPT4KSGVhZGVycwogIG5vcm1hbGl6ZU5hbWUobmFtZSkKICBub3JtYWxpemVWYWx1ZSh2YWx1ZSkAAAAAAAAAAHUCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					137,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/context.js",
						"symkeys":
						[
							[
								604,
								619
							],
							[
								966,
								999
							],
							[
								1312,
								1316
							],
							[
								2333,
								2352
							],
							[
								2621,
								2659
							]
						],
						"symlist":
						[
							" (level, msg) =>",
							" function createContext(info = {})",
							"m =>",
							"function empty(obj)",
							"function centerPad(len, str, ch = ' ')"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1AgAARXZlbnRUYXJnZXQKICBhZGRFdmVudExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKQogIHJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpCiAgZGlzcGF0Y2hFdmVudChldmVudCkKRXZlbnRUYXJnZXQKRXZlbnRFbWl0dGVyCiAgb24odHlwZSwgbGlzdGVuZXIpCiAgcmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpCiAgcmVtb3ZlQWxsTGlzdGVuZXJzKHR5cGUpCiAgcmF3TGlzdGVuZXJzKHR5cGUpCiAgZW1pdCh0eXBlLCAuLi5hcmdzKQogIG9uY2UodHlwZSwgbGlzdGVuZXIpCiAgY2FsbGJhY2sgPSAoLi4uYXJncykgPT4KICBjaGVja1R5cGUodHlwZSkKICBjaGVja0xpc3RlbmVyKGxpc3RlbmVyKQogIHJlbW92ZUFsbChhcnIsIGVsZW0pCiAgb25jZShlbWl0dGVyLCAuLi5ldmVudHMpCiAgd2FpdE9uZShlbWl0dGVyLCBldmVudHMsIG9wdGlvbnMgPSB7IHBhc3NpdmU6IHRydWUsIGNhcHR1cmU6IGZhbHNlIH0pCiAgcmVzb2x2ZSA9PgogIHR5cGUgPT4KICBoYW5kbGVyKGV2ZW50KQogIHR5cGUgPT4KICBtYXAgPT4gKGtleSwgdmFsdWUpID0+CkV2ZW50VGFyZ2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzID0gW10pCiAgY29uc3RydWN0b3IoKQogIGN0b3IKICBnZXQoKQogIHNldCh2YWx1ZSkAAAAAAAAAAF4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					138,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/body.js",
						"symkeys":
						[
							[
								283,
								287
							],
							[
								292,
								309
							],
							[
								350,
								364
							],
							[
								561,
								565
							],
							[
								767,
								778
							],
							[
								989,
								1006
							],
							[
								1222,
								1227
							],
							[
								1409,
								1415
							],
							[
								1461,
								1465
							],
							[
								1628,
								1641
							],
							[
								1672,
								1676
							],
							[
								1814,
								1820
							],
							[
								1851,
								1855
							],
							[
								1996,
								2002
							],
							[
								2033,
								2037
							],
							[
								2061,
								2065
							],
							[
								2106,
								2110
							],
							[
								2147,
								2151
							]
						],
						"symlist":
						[
							"Body",
							"constructor(body)",
							"ReadableStream",
							"Blob",
							"ArrayBuffer",
							"start(controller)",
							" () =>",
							"blob()",
							"a =>",
							"arrayBuffer()",
							"b =>",
							"text()",
							"b =>",
							"json()",
							"s =>",
							"Body",
							"Body",
							"Body"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABeAAAAKGxldmVsLCBtc2cpID0+CiAgY3JlYXRlQ29udGV4dChpbmZvID0ge30pCiAgbSA9PgogIGVtcHR5KG9iaikKICBjZW50ZXJQYWQobGVuLCBzdHIsIGNoID0gJyAnKQAAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					139,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/assert.js",
						"symkeys":
						[
							[
								29,
								44
							],
							[
								80,
								94
							],
							[
								113,
								147
							]
						],
						"symlist":
						[
							" function noop()",
							"AssertionError",
							"function assertImpl(test, message)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACoAAAAQm9keQogIGNvbnN0cnVjdG9yKGJvZHkpClJlYWRhYmxlU3RyZWFtCkJsb2IKQXJyYXlCdWZmZXIKICBzdGFydChjb250cm9sbGVyKQooKSA9PgogIGJsb2IoKQogIGEgPT4KICBhcnJheUJ1ZmZlcigpCiAgYiA9PgogIHRleHQoKQogIGIgPT4KICBqc29uKCkKICBzID0+CkJvZHkKQm9keQpCb2R5AAAAAAAAAAAzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					140,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/body.js",
						"symkeys":
						[
							[
								283,
								287
							],
							[
								292,
								309
							],
							[
								350,
								364
							],
							[
								561,
								565
							],
							[
								767,
								778
							],
							[
								989,
								1006
							],
							[
								1222,
								1227
							],
							[
								1409,
								1415
							],
							[
								1461,
								1465
							],
							[
								1628,
								1641
							],
							[
								1672,
								1676
							],
							[
								1814,
								1820
							],
							[
								1851,
								1855
							],
							[
								1996,
								2002
							],
							[
								2033,
								2037
							],
							[
								2061,
								2065
							],
							[
								2106,
								2110
							],
							[
								2147,
								2151
							]
						],
						"symlist":
						[
							"Body",
							"constructor(body)",
							"ReadableStream",
							"Blob",
							"ArrayBuffer",
							"start(controller)",
							" () =>",
							"blob()",
							"a =>",
							"arrayBuffer()",
							"b =>",
							"text()",
							"b =>",
							"json()",
							"s =>",
							"Body",
							"Body",
							"Body"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAzAAAAICBub29wKCkKQXNzZXJ0aW9uRXJyb3IKICBhc3NlcnRJbXBsKHRlc3QsIG1lc3NhZ2UpAAAAAAAAAACoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					141,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/assert.js",
						"symkeys":
						[
							[
								29,
								44
							],
							[
								80,
								94
							],
							[
								113,
								147
							]
						],
						"symlist":
						[
							" function noop()",
							"AssertionError",
							"function assertImpl(test, message)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACoAAAAQm9keQogIGNvbnN0cnVjdG9yKGJvZHkpClJlYWRhYmxlU3RyZWFtCkJsb2IKQXJyYXlCdWZmZXIKICBzdGFydChjb250cm9sbGVyKQooKSA9PgogIGJsb2IoKQogIGEgPT4KICBhcnJheUJ1ZmZlcigpCiAgYiA9PgogIHRleHQoKQogIGIgPT4KICBqc29uKCkKICBzID0+CkJvZHkKQm9keQpCb2R5AAAAAAAAAAAzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					142,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/abort.js",
						"symkeys":
						[
							[
								57,
								68
							],
							[
								93,
								106
							],
							[
								281,
								301
							],
							[
								594,
								610
							],
							[
								1300,
								1320
							],
							[
								1384,
								1389
							],
							[
								2226,
								2246
							],
							[
								2329,
								2345
							],
							[
								2411,
								2427
							],
							[
								3233,
								3253
							],
							[
								3369,
								3380
							],
							[
								3436,
								3447
							],
							[
								3528,
								3543
							],
							[
								3548,
								3561
							],
							[
								3915,
								3928
							],
							[
								4095,
								4110
							],
							[
								4170,
								4185
							],
							[
								4257,
								4294
							],
							[
								5013,
								5046
							],
							[
								5944,
								6018
							]
						],
						"symlist":
						[
							"AbortSignal",
							"constructor()",
							"dispatchEvent(event)",
							"throwIfAborted()",
							"static timeout(time)",
							"() =>",
							"static any(iterable)",
							" function abort()",
							" function clean()",
							"static abort(reason)",
							"AbortSignal",
							"AbortSignal",
							"AbortController",
							"constructor()",
							"abort(reason)",
							"AbortController",
							"AbortController",
							"function normalizeAbortReason(reason)",
							"function createAbortEvent(reason)",
							"function define(obj, props, opts = { writable: true, configurable: true })"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAzAAAAICBub29wKCkKQXNzZXJ0aW9uRXJyb3IKICBhc3NlcnRJbXBsKHRlc3QsIG1lc3NhZ2UpAAAAAAAAAACKAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					143,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lws-sockaddr46.c",
						"symkeys":
						[
							[
								224,
								252
							],
							[
								1941,
								1965
							],
							[
								3712,
								3732
							],
							[
								5035,
								5055
							],
							[
								6988,
								7012
							],
							[
								7220,
								7241
							],
							[
								7976,
								7998
							],
							[
								8228,
								8249
							],
							[
								8607,
								8627
							]
						],
						"symlist":
						[
							"—Ⓕ– lwsjs_sockaddr46_constructor ( ) { … } — function",
							"—Ⓕ– lwsjs_sockaddr46_methods ( ) { … } — function",
							"—Ⓕ– lwsjs_sockaddr46_get ( ) { … } — function",
							"—Ⓕ– lwsjs_sockaddr46_set ( ) { … } — function",
							"—Ⓕ– js_arraybuffer_prototype ( ) { … } — function",
							"—Ⓕ– lwsjs_sockaddr46_init ( ) { … } — function",
							"—Ⓕ– lwsjs_sockaddr46_value ( ) { … } — function",
							"—Ⓕ– lwsjs_sockaddr46_data ( ) { … } — function",
							"—Ⓕ– lwsjs_sockaddr46_new ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKAQAAQWJvcnRTaWduYWwKICBjb25zdHJ1Y3RvcigpCiAgZGlzcGF0Y2hFdmVudChldmVudCkKICB0aHJvd0lmQWJvcnRlZCgpCiAgc3RhdGljIHRpbWVvdXQodGltZSkKKCkgPT4KICBzdGF0aWMgYW55KGl0ZXJhYmxlKQogIGFib3J0KCkKICBjbGVhbigpCiAgc3RhdGljIGFib3J0KHJlYXNvbikKQWJvcnRTaWduYWwKQWJvcnRTaWduYWwKQWJvcnRDb250cm9sbGVyCiAgY29uc3RydWN0b3IoKQogIGFib3J0KHJlYXNvbikKQWJvcnRDb250cm9sbGVyCkFib3J0Q29udHJvbGxlcgogIG5vcm1hbGl6ZUFib3J0UmVhc29uKHJlYXNvbikKICBjcmVhdGVBYm9ydEV2ZW50KHJlYXNvbikKICBkZWZpbmUob2JqLCBwcm9wcywgb3B0cyA9IHsgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9KQAAAAAAAAAAsQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					144,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAALAgAA4oCU4pK74oCTIGx3c2pzX3NvY2thZGRyNDZfY29uc3RydWN0b3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nqc19zb2NrYWRkcjQ2X21ldGhvZHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3Nqc19zb2NrYWRkcjQ2X2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c2pzX3NvY2thZGRyNDZfc2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfYXJyYXlidWZmZXJfcHJvdG90eXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzanNfc29ja2FkZHI0Nl9pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzanNfc29ja2FkZHI0Nl92YWx1ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c2pzX3NvY2thZGRyNDZfZGF0YSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGx3c2pzX3NvY2thZGRyNDZfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					145,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/README.md",
						"symkeys":
						[
							[
								2,
								9
							],
							[
								80,
								132
							]
						],
						"symlist":
						[
							"qjs-lws",
							"  `new LWSContext(options)`: Create a new lws_context."
						]
					},
					"AQAAAAAAAAAAAAAAPgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					146,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-server.js",
						"symkeys":
						[
							[
								773,
								778
							],
							[
								834,
								856
							],
							[
								927,
								957
							],
							[
								1036,
								1059
							],
							[
								1164,
								1169
							],
							[
								1178,
								1200
							],
							[
								1740,
								1802
							],
							[
								1949,
								1980
							],
							[
								2070,
								2095
							],
							[
								2277,
								2309
							],
							[
								2502,
								2532
							],
							[
								2676,
								2701
							],
							[
								2843,
								2868
							],
							[
								3003,
								3008
							],
							[
								3327,
								3347
							],
							[
								3794,
								3799
							],
							[
								4063,
								4068
							],
							[
								4167,
								4183
							],
							[
								4451,
								4478
							],
							[
								4606,
								4636
							]
						],
						"symlist":
						[
							" () =>",
							"onOpen(name, filename)",
							"onContent(name, filename, buf)",
							"onClose(name, filename)",
							"() =>",
							"function main(...args)",
							"onOpensslPerformServerCertVerification(wsi, ssl, preverify_ok)",
							"onHttpConfirmUpgrade(wsi, type)",
							"onReceive(wsi, data, len)",
							"onFilterHttpConnection(wsi, url)",
							"callback(wsi, reason, ...args)",
							"onHttpBody(wsi, buf, len)",
							"onHttpBodyCompletion(wsi)",
							"() =>",
							"onHttpWriteable(wsi)",
							"() =>",
							"() =>",
							"onHttp(wsi, buf)",
							"onAddHeaders(wsi, buf, len)",
							"callback(wsi, reason, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAICBxanMtbHdzCmBuZXcgTFdTQ29udGV4dChvcHRpb25zKWA6IENyZWF0ZSBhIG5ldyBsd3NfY29udGV4dC4AAAAAAAAAAOUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					147,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/util.js",
						"symkeys":
						[
							[
								284,
								299
							],
							[
								318,
								338
							],
							[
								424,
								447
							],
							[
								471,
								491
							],
							[
								896,
								920
							],
							[
								1006,
								1035
							],
							[
								1147,
								1171
							],
							[
								1278,
								1308
							],
							[
								1487,
								1517
							],
							[
								1633,
								1676
							],
							[
								1731,
								1748
							],
							[
								2008,
								2036
							],
							[
								2127,
								2150
							],
							[
								2228,
								2260
							],
							[
								2370,
								2392
							],
							[
								2432,
								2463
							],
							[
								2572,
								2601
							],
							[
								2662,
								2695
							],
							[
								2707,
								2710
							],
							[
								2722,
								2737
							],
							[
								2864,
								2898
							],
							[
								3275,
								3304
							],
							[
								3795,
								3869
							],
							[
								4388,
								4412
							],
							[
								4424,
								4427
							],
							[
								4439,
								4451
							],
							[
								4538,
								4561
							],
							[
								4579,
								4591
							],
							[
								4743,
								4761
							],
							[
								4974,
								4984
							],
							[
								5005,
								5025
							],
							[
								5094,
								5102
							],
							[
								5130,
								5156
							],
							[
								5196,
								5208
							]
						],
						"symlist":
						[
							"ConnectionError",
							"constructor(message)",
							" function waitWrite(wsi)",
							"(resolve, reject) =>",
							" function typeIsObject(x)",
							" function isAsyncIterable(obj)",
							" function isIterable(obj)",
							" function iteratorProperty(obj)",
							" function iteratorFunction(obj)",
							" function wrapFunction(fn, wrapper = a => a)",
							" function(...args)",
							" function isPrototypeOf(a, b)",
							" function stripAnsi(str)",
							" function padEnd(str, n, s = ' ')",
							" function interactive()",
							" function verbose(name, ...args)",
							" function debug(name, ...args)",
							" function weakMapper(create, map = ",
							"())",
							" (key, value) =>",
							" function setFunctionName(fn, name)",
							" function assign(obj, ...args)",
							" function define(obj, props, opts = { writable: true, configurable: true })",
							" function mapper(target = ",
							"())",
							" (...args) =>",
							" function actor(ws, log)",
							"state(state)",
							"event(type, props)",
							"Uint8Array",
							" function isView(obj)",
							"DataView",
							" function once(fn, thisArg)",
							" (...args) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAQAAKCkgPT4KICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGZpbGVuYW1lLCBidWYpCiAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkKKCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24od3NpLCBzc2wsIHByZXZlcmlmeV9vaykKICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpCiAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKQogIG9uRmlsdGVySHR0cENvbm5lY3Rpb24od3NpLCB1cmwpCiAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpCiAgb25IdHRwQm9keSh3c2ksIGJ1ZiwgbGVuKQogIG9uSHR0cEJvZHlDb21wbGV0aW9uKHdzaSkKKCkgPT4KICBvbkh0dHBXcml0ZWFibGUod3NpKQooKSA9PgooKSA9PgogIG9uSHR0cCh3c2ksIGJ1ZikKICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikKICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykAAAAAAAAAALICAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					150,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyAgAAQ29ubmVjdGlvbkVycm9yCiAgY29uc3RydWN0b3IobWVzc2FnZSkKICB3YWl0V3JpdGUod3NpKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgogIHR5cGVJc09iamVjdCh4KQogIGlzQXN5bmNJdGVyYWJsZShvYmopCiAgaXNJdGVyYWJsZShvYmopCiAgaXRlcmF0b3JQcm9wZXJ0eShvYmopCiAgaXRlcmF0b3JGdW5jdGlvbihvYmopCiAgd3JhcEZ1bmN0aW9uKGZuLCB3cmFwcGVyID0gYSA9PiBhKQpmdW5jdGlvbiguLi5hcmdzKQogIGlzUHJvdG90eXBlT2YoYSwgYikKICBzdHJpcEFuc2koc3RyKQogIHBhZEVuZChzdHIsIG4sIHMgPSAnICcpCiAgaW50ZXJhY3RpdmUoKQogIHZlcmJvc2UobmFtZSwgLi4uYXJncykKICBkZWJ1ZyhuYW1lLCAuLi5hcmdzKQogIHdlYWtNYXBwZXIoY3JlYXRlLCBtYXAgPSAKKCkpCihrZXksIHZhbHVlKSA9PgogIHNldEZ1bmN0aW9uTmFtZShmbiwgbmFtZSkKICBhc3NpZ24ob2JqLCAuLi5hcmdzKQogIGRlZmluZShvYmosIHByb3BzLCBvcHRzID0geyB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pCiAgbWFwcGVyKHRhcmdldCA9IAooKSkKKC4uLmFyZ3MpID0+CiAgYWN0b3Iod3MsIGxvZykKICBzdGF0ZShzdGF0ZSkKICBldmVudCh0eXBlLCBwcm9wcykKVWludDhBcnJheQogIGlzVmlldyhvYmopCkRhdGFWaWV3CiAgb25jZShmbiwgdGhpc0FyZykKKC4uLmFyZ3MpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/util.js",
						"symkeys":
						[
							[
								284,
								299
							],
							[
								318,
								338
							],
							[
								424,
								447
							],
							[
								471,
								491
							],
							[
								896,
								920
							],
							[
								1006,
								1035
							],
							[
								1147,
								1171
							],
							[
								1278,
								1308
							],
							[
								1487,
								1517
							],
							[
								1633,
								1676
							],
							[
								1731,
								1748
							],
							[
								2008,
								2036
							],
							[
								2127,
								2150
							],
							[
								2228,
								2260
							],
							[
								2370,
								2392
							],
							[
								2432,
								2463
							],
							[
								2572,
								2601
							],
							[
								2662,
								2695
							],
							[
								2707,
								2710
							],
							[
								2722,
								2737
							],
							[
								2864,
								2898
							],
							[
								3275,
								3304
							],
							[
								3795,
								3869
							],
							[
								4388,
								4412
							],
							[
								4424,
								4427
							],
							[
								4439,
								4451
							],
							[
								4538,
								4561
							],
							[
								4579,
								4591
							],
							[
								4743,
								4761
							],
							[
								4974,
								4984
							],
							[
								5005,
								5025
							],
							[
								5094,
								5102
							],
							[
								5130,
								5156
							],
							[
								5196,
								5208
							]
						],
						"symlist":
						[
							"ConnectionError",
							"constructor(message)",
							" function waitWrite(wsi)",
							"(resolve, reject) =>",
							" function typeIsObject(x)",
							" function isAsyncIterable(obj)",
							" function isIterable(obj)",
							" function iteratorProperty(obj)",
							" function iteratorFunction(obj)",
							" function wrapFunction(fn, wrapper = a => a)",
							" function(...args)",
							" function isPrototypeOf(a, b)",
							" function stripAnsi(str)",
							" function padEnd(str, n, s = ' ')",
							" function interactive()",
							" function verbose(name, ...args)",
							" function debug(name, ...args)",
							" function weakMapper(create, map = ",
							"())",
							" (key, value) =>",
							" function setFunctionName(fn, name)",
							" function assign(obj, ...args)",
							" function define(obj, props, opts = { writable: true, configurable: true })",
							" function mapper(target = ",
							"())",
							" (...args) =>",
							" function actor(ws, log)",
							"state(state)",
							"event(type, props)",
							"Uint8Array",
							" function isView(obj)",
							"DataView",
							" function once(fn, thisArg)",
							" (...args) =>"
						]
					},
					"AQAAAAAAAAAAAAAAsgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					152,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAACyAgAAQ29ubmVjdGlvbkVycm9yCiAgY29uc3RydWN0b3IobWVzc2FnZSkKICB3YWl0V3JpdGUod3NpKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgogIHR5cGVJc09iamVjdCh4KQogIGlzQXN5bmNJdGVyYWJsZShvYmopCiAgaXNJdGVyYWJsZShvYmopCiAgaXRlcmF0b3JQcm9wZXJ0eShvYmopCiAgaXRlcmF0b3JGdW5jdGlvbihvYmopCiAgd3JhcEZ1bmN0aW9uKGZuLCB3cmFwcGVyID0gYSA9PiBhKQpmdW5jdGlvbiguLi5hcmdzKQogIGlzUHJvdG90eXBlT2YoYSwgYikKICBzdHJpcEFuc2koc3RyKQogIHBhZEVuZChzdHIsIG4sIHMgPSAnICcpCiAgaW50ZXJhY3RpdmUoKQogIHZlcmJvc2UobmFtZSwgLi4uYXJncykKICBkZWJ1ZyhuYW1lLCAuLi5hcmdzKQogIHdlYWtNYXBwZXIoY3JlYXRlLCBtYXAgPSAKKCkpCihrZXksIHZhbHVlKSA9PgogIHNldEZ1bmN0aW9uTmFtZShmbiwgbmFtZSkKICBhc3NpZ24ob2JqLCAuLi5hcmdzKQogIGRlZmluZShvYmosIHByb3BzLCBvcHRzID0geyB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pCiAgbWFwcGVyKHRhcmdldCA9IAooKSkKKC4uLmFyZ3MpID0+CiAgYWN0b3Iod3MsIGxvZykKICBzdGF0ZShzdGF0ZSkKICBldmVudCh0eXBlLCBwcm9wcykKVWludDhBcnJheQogIGlzVmlldyhvYmopCkRhdGFWaWV3CiAgb25jZShmbiwgdGhpc0FyZykKKC4uLmFyZ3MpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					153,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					154,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					155,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					156,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/util.js",
						"symkeys":
						[
							[
								284,
								299
							],
							[
								318,
								338
							],
							[
								424,
								447
							],
							[
								471,
								491
							],
							[
								896,
								920
							],
							[
								1006,
								1035
							],
							[
								1147,
								1171
							],
							[
								1278,
								1308
							],
							[
								1487,
								1517
							],
							[
								1633,
								1676
							],
							[
								1731,
								1748
							],
							[
								2008,
								2036
							],
							[
								2127,
								2150
							],
							[
								2228,
								2260
							],
							[
								2370,
								2392
							],
							[
								2432,
								2463
							],
							[
								2572,
								2601
							],
							[
								2662,
								2695
							],
							[
								2707,
								2710
							],
							[
								2722,
								2737
							],
							[
								2864,
								2898
							],
							[
								3275,
								3304
							],
							[
								3795,
								3869
							],
							[
								4388,
								4412
							],
							[
								4424,
								4427
							],
							[
								4439,
								4451
							],
							[
								4538,
								4561
							],
							[
								4579,
								4591
							],
							[
								4743,
								4761
							],
							[
								4974,
								4984
							],
							[
								5005,
								5025
							],
							[
								5094,
								5102
							],
							[
								5130,
								5156
							],
							[
								5196,
								5208
							]
						],
						"symlist":
						[
							"ConnectionError",
							"constructor(message)",
							" function waitWrite(wsi)",
							"(resolve, reject) =>",
							" function typeIsObject(x)",
							" function isAsyncIterable(obj)",
							" function isIterable(obj)",
							" function iteratorProperty(obj)",
							" function iteratorFunction(obj)",
							" function wrapFunction(fn, wrapper = a => a)",
							" function(...args)",
							" function isPrototypeOf(a, b)",
							" function stripAnsi(str)",
							" function padEnd(str, n, s = ' ')",
							" function interactive()",
							" function verbose(name, ...args)",
							" function debug(name, ...args)",
							" function weakMapper(create, map = ",
							"())",
							" (key, value) =>",
							" function setFunctionName(fn, name)",
							" function assign(obj, ...args)",
							" function define(obj, props, opts = { writable: true, configurable: true })",
							" function mapper(target = ",
							"())",
							" (...args) =>",
							" function actor(ws, log)",
							"state(state)",
							"event(type, props)",
							"Uint8Array",
							" function isView(obj)",
							"DataView",
							" function once(fn, thisArg)",
							" (...args) =>"
						]
					},
					"AQAAAAAAAAAAAAAAsgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					157,
					1,
					"outline_refresh",
					{
						"path": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/body.js",
						"symkeys":
						[
							[
								283,
								287
							],
							[
								292,
								309
							],
							[
								350,
								364
							],
							[
								561,
								565
							],
							[
								767,
								778
							],
							[
								989,
								1006
							],
							[
								1222,
								1227
							],
							[
								1409,
								1415
							],
							[
								1461,
								1465
							],
							[
								1628,
								1641
							],
							[
								1672,
								1676
							],
							[
								1814,
								1820
							],
							[
								1851,
								1855
							],
							[
								1996,
								2002
							],
							[
								2033,
								2037
							],
							[
								2061,
								2065
							],
							[
								2106,
								2110
							],
							[
								2147,
								2151
							]
						],
						"symlist":
						[
							"Body",
							"constructor(body)",
							"ReadableStream",
							"Blob",
							"ArrayBuffer",
							"start(controller)",
							" () =>",
							"blob()",
							"a =>",
							"arrayBuffer()",
							"b =>",
							"text()",
							"b =>",
							"json()",
							"s =>",
							"Body",
							"Body",
							"Body"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyAgAAQ29ubmVjdGlvbkVycm9yCiAgY29uc3RydWN0b3IobWVzc2FnZSkKICB3YWl0V3JpdGUod3NpKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgogIHR5cGVJc09iamVjdCh4KQogIGlzQXN5bmNJdGVyYWJsZShvYmopCiAgaXNJdGVyYWJsZShvYmopCiAgaXRlcmF0b3JQcm9wZXJ0eShvYmopCiAgaXRlcmF0b3JGdW5jdGlvbihvYmopCiAgd3JhcEZ1bmN0aW9uKGZuLCB3cmFwcGVyID0gYSA9PiBhKQpmdW5jdGlvbiguLi5hcmdzKQogIGlzUHJvdG90eXBlT2YoYSwgYikKICBzdHJpcEFuc2koc3RyKQogIHBhZEVuZChzdHIsIG4sIHMgPSAnICcpCiAgaW50ZXJhY3RpdmUoKQogIHZlcmJvc2UobmFtZSwgLi4uYXJncykKICBkZWJ1ZyhuYW1lLCAuLi5hcmdzKQogIHdlYWtNYXBwZXIoY3JlYXRlLCBtYXAgPSAKKCkpCihrZXksIHZhbHVlKSA9PgogIHNldEZ1bmN0aW9uTmFtZShmbiwgbmFtZSkKICBhc3NpZ24ob2JqLCAuLi5hcmdzKQogIGRlZmluZShvYmosIHByb3BzLCBvcHRzID0geyB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pCiAgbWFwcGVyKHRhcmdldCA9IAooKSkKKC4uLmFyZ3MpID0+CiAgYWN0b3Iod3MsIGxvZykKICBzdGF0ZShzdGF0ZSkKICBldmVudCh0eXBlLCBwcm9wcykKVWludDhBcnJheQogIGlzVmlldyhvYmopCkRhdGFWaWV3CiAgb25jZShmbiwgdGhpc0FyZykKKC4uLmFyZ3MpID0+AAAAAAAAAACoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/lws/context.js",
			"settings":
			{
				"buffer_size": 2836,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEwIAAAAAAAATQgAAAAAAAAAAAAATQgAAAAAAABOCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMCAAAAAAAAEwIAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "import { tests, WindowTestEnvironment, WorkerTestEnvironment, SharedWorkerTestEnvironment, ServiceWorkerTestEnvironment, ShadowRealmTestEnvironment, ShellTestEnvironment, test, async_test, promise_test, promise_rejects_js, promise_rejects_dom, promise_rejects_exactly, EventWatcher, setup, promise_setup, done, generate_tests, on_event, step_timeout, format_value, assert_true, assert_false, assert_equals, assert_not_equals, assert_in_array, assert_object_equals, assert_array_equals, assert_array_approx_equals, assert_approx_equals, assert_less_than, assert_greater_than, assert_between_exclusive, assert_less_than_equal, assert_greater_than_equal, assert_between_inclusive, assert_regexp_match, assert_class_string, assert_own_property, assert_not_own_property, assert_inherits, assert_idl_attribute, assert_readonly, assert_throws_js, assert_throws_dom, assert_throws_exactly, assert_unreached, assert_any, assert_implements, assert_implements_optional, Test, RemoteTest, RemoteContext, TestsStatus, AssertRecord, Tests, fetch_tests_from_worker, fetch_tests_from_window, fetch_tests_from_shadow_realm, begin_shadow_realm_tests, timeout, add_start_callback, add_test_state_callback, add_result_callback, add_completion_callback, Output, AssertionError, OptionalFeatureUnsupportedError, } from './lib/testharnessreport.js';\nimport { WebSocket } from '../lib/websocket.js';\n\ntest(() => {\n  const ws = new WebSocket('ws://localhost/ws', []);\n}, 'Create WebSocket');\n",
			"file": "tests/test_websocket.js",
			"file_size": 1467,
			"file_write_time": 134047656513263097,
			"settings":
			{
				"buffer_size": 1467,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					39,
					1,
					"insert",
					{
						"characters": "lib/"
					},
					"BAAAABQFAAAAAAAAFQUAAAAAAAAAAAAAFQUAAAAAAAAWBQAAAAAAAAAAAAAWBQAAAAAAABcFAAAAAAAAAAAAABcFAAAAAAAAGAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAUAAAAAAAAUBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/test-websocket.js",
			"settings":
			{
				"buffer_size": 1467,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "Searching 1871 files for \"interactive\" (regex, case sensitive)\n\n/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/util.js:\n   86  }\n   87  \n   88: export function interactive() {\n   89    kill(getpid(), SIGUSR1);\n   90  }\n\n/mnt/data/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/libwebsockets.dox:\n 2497  \n 2498  # If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n 2499: # enable generation of interactive SVG images that allow zooming and panning.\n 2500  #\n 2501  # Note that this requires a modern browser other than Internet Explorer. Tested\n\n/mnt/data/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/win32port/zlib/zlib.h:\n  262      accordingly.  This action is forced if the parameter flush is non zero.\n  263      Forcing flush frequently degrades the compression ratio, so this parameter\n  264:     should be set only when necessary (in interactive applications).  Some\n  265      output may be provided even if flush is not set.\n  266  \n\n/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests/test-client.js:\n    1  import { parseUri, toString, toPointer, toArrayBuffer, LWSContext, LWSSocket, WSI_TOKEN_HTTP_ALLOW, ... <skipped 381 characters> ...MPRO_CGI, LWSMPRO_REDIR_HTTP, LWSMPRO_REDIR_HTTPS, LWSMPRO_CALLBACK, LWSMPRO_NO_MOUNT, } from 'lws';\n    2: import { interactive, verbose, debug, weakMapper } from './lib/lws/util.js';\n    3  \n    4  const C = console.config({ compact: true, maxStringLength: +(process.env.COLUMNS ?? 120) - 92, maxArrayLength: 8 });\n    .\n  115  globalThis.client = ctx.clientConnect('https://blog.fefe.de/');\n  116  \n  117: interactive();\n  118  \n  119: function interactive() {\n  120    os.kill(os.getpid(), os.SIGUSR1);\n  121  }\n\n6 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 1718,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "tests/test-client.js",
			"settings":
			{
				"buffer_size": 4300,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFMQAAAAAAAAVBAAAAAAAABBAAAACgpmdW5jdGlvbiBpbnRlcmFjdGl2ZSgpIHsKICBvcy5raWxsKG9zLmdldHBpZCgpLCBvcy5TSUdVU1IxKTsKfQo",
					"AQAAAAAAAAABAAAAUxAAAAAAAACUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"cut",
					null,
					"AQAAAEYCAAAAAAAARgIAAAAAAABNAAAAaW1wb3J0IHsgaW50ZXJhY3RpdmUsIHZlcmJvc2UsIGRlYnVnLCB3ZWFrTWFwcGVyIH0gZnJvbSAnLi9saWIvbHdzL3V0aWwuanMnOwo",
					"AQAAAAAAAAABAAAARgIAAAAAAACTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					2,
					"paste",
					null,
					"AgAAAEYCAAAAAAAAkwIAAAAAAAAAAAAAkwIAAAAAAADgAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgIAAAAAAABGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"cut",
					null,
					"AQAAAJMCAAAAAAAAkwIAAAAAAABNAAAAaW1wb3J0IHsgaW50ZXJhY3RpdmUsIHZlcmJvc2UsIGRlYnVnLCB3ZWFrTWFwcGVyIH0gZnJvbSAnLi9saWIvbHdzL3V0aWwuanMnOwo",
					"AQAAAAAAAAABAAAAkwIAAAAAAADgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAFQQAAAAAAAAVRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBAAAAAAAABUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABVEAAAaW1wb3J0IHsgcGFyc2VVcmksIHRvU3RyaW5nLCB0b1BvaW50ZXIsIHRvQXJyYXlCdWZmZXIsIExXU0NvbnRleHQsIExXU1NvY2tldCwgV1NJX1RPS0VOX0hUVFBfQUxMT1csIFdTSV9UT0tFTl9IVFRQX0FDQ0VQVCwgV1NJX1RPS0VOX0hUVFBfQ09PS0lFLCBXU0lfVE9LRU5fSFRUUF9VU0VSX0FHRU5ULCBMV1NfU0VSVkVSX09QVElPTl9ET19TU0xfR0xPQkFMX0lOSVQsIExXU19TRVJWRVJfT1BUSU9OX0NSRUFURV9WSE9TVF9TU0xfQ1RYLCBMV1NfU0VSVkVSX09QVElPTl9JR05PUkVfTUlTU0lOR19DRVJULCBMV1NfU0VSVkVSX09QVElPTl9QRUVSX0NFUlRfTk9UX1JFUVVJUkVELCBMV1NfU0VSVkVSX09QVElPTl9BTExPV19OT05fU1NMX09OX1NTTF9QT1JULCBMV1NfUFJFLCBMV1NTUEEsIGdldENhbGxiYWNrTmFtZSwgZ2V0Q2FsbGJhY2tOdW1iZXIsIGxvZywgTFdTTVBST19IVFRQLCBMV1NNUFJPX0hUVFBTLCBMV1NNUFJPX0ZJTEUsIExXU01QUk9fQ0dJLCBMV1NNUFJPX1JFRElSX0hUVFAsIExXU01QUk9fUkVESVJfSFRUUFMsIExXU01QUk9fQ0FMTEJBQ0ssIExXU01QUk9fTk9fTU9VTlQsIH0gZnJvbSAnbHdzJzsKaW1wb3J0IHsgaW50ZXJhY3RpdmUsIHZlcmJvc2UsIGRlYnVnLCB3ZWFrTWFwcGVyIH0gZnJvbSAnLi9saWIvbHdzL3V0aWwuanMnOwoKY29uc3QgQyA9IGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogdHJ1ZSwgbWF4U3RyaW5nTGVuZ3RoOiArKHByb2Nlc3MuZW52LkNPTFVNTlMgPz8gMTIwKSAtIDkyLCBtYXhBcnJheUxlbmd0aDogOCB9KTsKCmNvbnN0IHdzaTJvYmogPSB3ZWFrTWFwcGVyKCgpID0+ICh7fSkpOwoKbGV0IGN0eCA9IChnbG9iYWxUaGlzLmN0eCA9IG5ldyBMV1NDb250ZXh0KHsKICBhc3luY0Ruc1NlcnZlcnM6IFsnOC44LjguOCcsICc4LjguNC40JywgJzQuMi4yLjEnXSwKICBvcHRpb25zOgogICAgTFdTX1NFUlZFUl9PUFRJT05fRE9fU1NMX0dMT0JBTF9JTklUIHwKICAgIExXU19TRVJWRVJfT1BUSU9OX0NSRUFURV9WSE9TVF9TU0xfQ1RYIHwKICAgIExXU19TRVJWRVJfT1BUSU9OX0lHTk9SRV9NSVNTSU5HX0NFUlQgfAogICAgTFdTX1NFUlZFUl9PUFRJT05fUEVFUl9DRVJUX05PVF9SRVFVSVJFRCB8CiAgICBMV1NfU0VSVkVSX09QVElPTl9BTExPV19OT05fU1NMX09OX1NTTF9QT1JUIHwKICAgIExXU19TRVJWRVJfT1BUSU9OX0RPX1NTTF9HTE9CQUxfSU5JVCB8CiAgICBMV1NfU0VSVkVSX09QVElPTl9DUkVBVEVfVkhPU1RfU1NMX0NUWCwKICBjbGllbnRTc2xDYUZpbGVwYXRoOiAnY2EuY3J0JywKICBjbGllbnRTc2xDZXJ0RmlsZXBhdGg6ICdsb2NhbGhvc3QuY3J0JywKICBjbGllbnRTc2xQcml2YXRlS2V5RmlsZXBhdGg6ICdsb2NhbGhvc3Qua2V5JywKICBwcm90b2NvbHM6IFsKICAgIHsKICAgICAgbmFtZTogJ3JhdycsCiAgICAgIG9uQ29ubmVjdGluZyh3c2kpIHsKICAgICAgICB2ZXJib3NlKCdvbkNvbm5lY3RpbmcnLCB3c2kpOwogICAgICB9LAogICAgICBvblJhd0Nvbm5lY3RlZCh3c2kpIHsKICAgICAgICB2ZXJib3NlKCdvblJhd0Nvbm5lY3RlZCcsIHdzaSk7CiAgICAgIH0sCiAgICAgIG9uUmF3V3JpdGVhYmxlKHdzaSkgewogICAgICAgIHdzaS53cml0ZSh0b0FycmF5QnVmZmVyKCdHRVQgLyBIVFRQLzEuMFxyXG5cclxuJykpOwogICAgICB9LAogICAgICBvblJhd1J4KHdzaSwgZGF0YSkgewogICAgICAgIGRhdGEgPSB0b1N0cmluZyhkYXRhKTsKCiAgICAgICAgdmVyYm9zZSgnb25SYXdSeCcsIHdzaSwgZGF0YS50cmltRW5kKCkpOwogICAgICB9LAogICAgICBvblJhd0Nsb3NlKHdzaSkgewogICAgICAgIHZlcmJvc2UoJ29uUmF3Q2xvc2UnLCB3c2kpOwogICAgICB9LAogICAgICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykgewogICAgICAgIGdsb2JhbFRoaXMud3NpID0gd3NpOwogICAgICAgIHZlcmJvc2UoJ3JhdyAnICsgZ2V0Q2FsbGJhY2tOYW1lKHJlYXNvbiksIHdzaSwgYXJncyk7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0sCiAgICB9LAogICAgewogICAgICBuYW1lOiAnaHR0cCcsCiAgICAgIG9uRXN0YWJsaXNoZWRDbGllbnRIdHRwKHdzaSwgZGF0YSkgewogICAgICAgIHZlcmJvc2UoJ29uRXN0YWJsaXNoZWRDbGllbnRIdHRwJywgZGF0YSk7CiAgICAgIH0sCiAgICAgIG9uQ2xpZW50QXBwZW5kSGFuZHNoYWtlSGVhZGVyKHdzaSwgZGF0YSwgbGVuKSB7CiAgICAgICAgd3NpLmFkZEhlYWRlcihXU0lfVE9LRU5fSFRUUF9BTExPVywgJ0dFVCwgUE9TVCwgSEVBRCcsIGRhdGEsIGxlbik7CiAgICAgICAgd3NpLmFkZEhlYWRlcihXU0lfVE9LRU5fSFRUUF9BQ0NFUFQsICcqLyonLCBkYXRhLCBsZW4pOwogICAgICAgIHdzaS5hZGRIZWFkZXIoV1NJX1RPS0VOX0hUVFBfQ09PS0lFLCAndGVzdD0xMjM0OycsIGRhdGEsIGxlbik7CiAgICAgICAgd3NpLmFkZEhlYWRlcihXU0lfVE9LRU5fSFRUUF9VU0VSX0FHRU5ULCAnUXVpY2tKUycsIGRhdGEsIGxlbik7CgogICAgICAgIHZlcmJvc2UoJ29uQ2xpZW50QXBwZW5kSGFuZHNoYWtlSGVhZGVyJywgeyBkYXRhOiB0b1N0cmluZyhkYXRhLCAwLCBsZW5bMF0pLCBsZW46IGxlblswXSB9KTsKICAgICAgfSwKICAgICAgb25DbGllbnRIdHRwV3JpdGVhYmxlKHdzaSkgewogICAgICAgIHZlcmJvc2UoJ29uQ2xpZW50SHR0cFdyaXRlYWJsZScsIHdzaSk7CiAgICAgIH0sCiAgICAgIG9uQ29tcGxldGVkQ2xpZW50SHR0cCh3c2kpIHsKICAgICAgICB2ZXJib3NlKCdvbkNvbXBsZXRlZENsaWVudEh0dHAnLCB3c2kpOwogICAgICB9LAogICAgICBvbkNsb3NlZENsaWVudEh0dHAod3NpKSB7CiAgICAgICAgdmVyYm9zZSgnb25DbG9zZWRDbGllbnRIdHRwJywgd3NpLmNvbnRleHQpOwogICAgICAgIGN0eC5jYW5jZWxTZXJ2aWNlKCk7CiAgICAgIH0sCiAgICAgIG9uUmVjZWl2ZUNsaWVudEh0dHBSZWFkKHdzaSwgZGF0YSwgbGVuKSB7CiAgICAgICAgY29uc3Qgb2JqID0gd3NpMm9iaih3c2kpOwogICAgICAgIGNvbnN0IHN0ciA9IHRvU3RyaW5nKGRhdGEsIDAsIGxlbik7CgogICAgICAgIHZlcmJvc2UoJ29uUmVjZWl2ZUNsaWVudEh0dHBSZWFkJywgeyBsZW4sIHN0ciB9KTsKCiAgICAgICAgLy9vYmoub2Zmc2V0ICs9IGxlbjsKICAgICAgfSwKICAgICAgb25SZWNlaXZlQ2xpZW50SHR0cCh3c2ksIC4uLnJlc3QpIHsKICAgICAgICBjb25zdCBvYmogPSB3c2kyb2JqKHdzaSk7CgogICAgICAgIG9iai5vZmZzZXQgPz89IDA7CgogICAgICAgIGNvbnN0IGFiID0gKG9iai5idWZmZXIgPz89IG5ldyBBcnJheUJ1ZmZlcigweGZmMCAqIDE2KSk7CgogICAgICAgIGxldCByZXQ7CgogICAgICAgIHRyeSB7CiAgICAgICAgICByZXQgPSB3c2kuaHR0cENsaWVudFJlYWQoYWIsIG9iai5vZmZzZXQpOwogICAgICAgIH0gY2F0Y2goZSkgewogICAgICAgICAgY29uc29sZS5sb2coJ2V4Y2VwdGlvbicsIGUpOwogICAgICAgIH0KCiAgICAgICAgLy92ZXJib3NlKCdvblJlY2VpdmVDbGllbnRIdHRwKDEpJywgeyBwdHI6IHRvUG9pbnRlcihhYiksIG9mZnNldDogb2JqLm9mZnNldCwgcmV0IH0pOwoKICAgICAgICBpZihyZXQpIHRoaXMub25SZWNlaXZlQ2xpZW50SHR0cFJlYWQod3NpLCBhYik7CiAgICAgIH0sCiAgICAgIG9uQ2xpZW50Q29ubmVjdGlvbkVycm9yKHdzaSwgbXNnKSB7CiAgICAgICAgdmVyYm9zZSgnb25DbGllbnRDb25uZWN0aW9uRXJyb3InLCB7IG1zZyB9KTsKICAgICAgfSwKICAgICAgb25DbGllbnRIdHRwRHJvcFByb3RvY29sKHdzaSkgewogICAgICAgIHZlcmJvc2UoJ29uQ2xpZW50SHR0cERyb3BQcm90b2NvbCcsIHdzaSk7CiAgICAgICAgY3R4LmNhbmNlbFNlcnZpY2UoKTsKICAgICAgfSwKICAgICAgY2FsbGJhY2sod3NpLCByZWFzb24sIC4uLmFyZ3MpIHsKICAgICAgICBnbG9iYWxUaGlzLndzaSA9IHdzaTsKICAgICAgICB2ZXJib3NlKCdodHRwICcgKyBnZXRDYWxsYmFja05hbWUocmVhc29uKSwgd3NpLCBhcmdzKTsKICAgICAgICByZXR1cm4gMDsKICAgICAgfSwKICAgIH0sCiAgXSwKfSkpOwoKLy9jdHguY2xpZW50Q29ubmVjdCh7IGFkZHJlc3M6ICdsb2NhbGhvc3QnLCBwb3J0OiAyMiwgbG9jYWxfcHJvdG9jb2xfbmFtZTogJ3JhdycsIG1ldGhvZDogJ1JBVycgfSk7CgpnbG9iYWxUaGlzLmNsaWVudCA9IGN0eC5jbGllbnRDb25uZWN0KCdodHRwczovL2Jsb2cuZmVmZS5kZS8nKTsKCmludGVyYWN0aXZlKCk7IAoAAAAAAAAAAFQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBAAAAAAAABUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "\nfunction"
					},
					"CQAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADgDAAAAAAAAAAAAADgDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA6AwAAAAAAAAAAAAA6AwAAAAAAADsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgMAAAAAAAAyAwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " main"
					},
					"BQAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA9AwAAAAAAAD4DAAAAAAAAAAAAAD4DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAABAAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwMAAAAAAAA7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEADAAAAAAAAQgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAMAAAAAAABAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "...arg"
					},
					"BgAAAEEDAAAAAAAAQgMAAAAAAAAAAAAAQgMAAAAAAABDAwAAAAAAAAAAAABDAwAAAAAAAEQDAAAAAAAAAAAAAEQDAAAAAAAARQMAAAAAAAAAAAAARQMAAAAAAABGAwAAAAAAAAAAAABGAwAAAAAAAEcDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQMAAAAAAABBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					2,
					"left_delete",
					null,
					"AgAAAEgDAAAAAAAASAMAAAAAAAABAAAAIEcDAAAAAAAARwMAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "s)"
					},
					"AgAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkDAAAAAAAASgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEoDAAAAAAAATAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"right_delete",
					null,
					"AQAAAEsDAAAAAAAASwMAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					11,
					"right_delete",
					null,
					"CwAAAEwDAAAAAAAATAMAAAAAAAABAAAAbEwDAAAAAAAATAMAAAAAAAABAAAAZUwDAAAAAAAATAMAAAAAAAABAAAAdEwDAAAAAAAATAMAAAAAAAABAAAAIEwDAAAAAAAATAMAAAAAAAABAAAAY0wDAAAAAAAATAMAAAAAAAABAAAAdEwDAAAAAAAATAMAAAAAAAABAAAAeEwDAAAAAAAATAMAAAAAAAABAAAAIEwDAAAAAAAATAMAAAAAAAABAAAAPUwDAAAAAAAATAMAAAAAAAABAAAAIEwDAAAAAAAATAMAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAATAMAAAAAAABMAwAAAAAAAAAAAAAAAAAA"
				],
				[
					56,
					1,
					"left_delete",
					null,
					"AQAAAKkPAAAAAAAAqQ8AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAqg8AAAAAAACqDwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"AgAAAKoPAAAAAAAAqw8AAAAAAAAAAAAAqw8AAAAAAACsDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqg8AAAAAAACqDwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"left_delete",
					null,
					"AQAAAKsPAAAAAAAAqw8AAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAArA8AAAAAAACsDwAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAKsPAAAAAAAAqw8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAArA8AAAAAAACsDwAAAAAAAAAAAAAAAAAA"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"AgAAAFEQAAAAAAAAUhAAAAAAAAAAAAAAUhAAAAAAAABTEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURAAAAAAAABREAAAAAAAAAAAAAAAAAAA"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "\n\n\nmauib"
					},
					"CAAAAFMQAAAAAAAAVBAAAAAAAAAAAAAAVBAAAAAAAABVEAAAAAAAAAAAAABVEAAAAAAAAFYQAAAAAAAAAAAAAFYQAAAAAAAAVxAAAAAAAAAAAAAAVxAAAAAAAABYEAAAAAAAAAAAAABYEAAAAAAAAFkQAAAAAAAAAAAAAFkQAAAAAAAAWhAAAAAAAAAAAAAAWhAAAAAAAABbEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxAAAAAAAABTEAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					3,
					"left_delete",
					null,
					"AwAAAFoQAAAAAAAAWhAAAAAAAAABAAAAYlkQAAAAAAAAWRAAAAAAAAABAAAAaVgQAAAAAAAAWBAAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAWxAAAAAAAABbEAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAFgQAAAAAAAAWRAAAAAAAAAAAAAAWRAAAAAAAABaEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBAAAAAAAABYEAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFoQAAAAAAAAXBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhAAAAAAAABaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "...scriptArgs.slice"
					},
					"EwAAAFsQAAAAAAAAXBAAAAAAAAAAAAAAXBAAAAAAAABdEAAAAAAAAAAAAABdEAAAAAAAAF4QAAAAAAAAAAAAAF4QAAAAAAAAXxAAAAAAAAAAAAAAXxAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAGEQAAAAAAAAAAAAAGEQAAAAAAAAYhAAAAAAAAAAAAAAYhAAAAAAAABjEAAAAAAAAAAAAABjEAAAAAAAAGQQAAAAAAAAAAAAAGQQAAAAAAAAZRAAAAAAAAAAAAAAZRAAAAAAAABmEAAAAAAAAAAAAABmEAAAAAAAAGcQAAAAAAAAAAAAAGcQAAAAAAAAaBAAAAAAAAAAAAAAaBAAAAAAAABpEAAAAAAAAAAAAABpEAAAAAAAAGoQAAAAAAAAAAAAAGoQAAAAAAAAaxAAAAAAAAAAAAAAaxAAAAAAAABsEAAAAAAAAAAAAABsEAAAAAAAAG0QAAAAAAAAAAAAAG0QAAAAAAAAbhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxAAAAAAAABbEAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG4QAAAAAAAAcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhAAAAAAAABuEAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAG8QAAAAAAAAcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxAAAAAAAABvEAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHIQAAAAAAAAcxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAchAAAAAAAAByEAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHMQAAAAAAAAdBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxAAAAAAAABzEAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"left_delete",
					null,
					"AQAAAFUQAAAAAAAAVRAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAVhAAAAAAAABWEAAAAAAAAAAAAAAAAAAA"
				],
				[
					82,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDEAAAaW1wb3J0IHsgcGFyc2VVcmksIHRvU3RyaW5nLCB0b1BvaW50ZXIsIHRvQXJyYXlCdWZmZXIsIExXU0NvbnRleHQsIExXU1NvY2tldCwgV1NJX1RPS0VOX0hUVFBfQUxMT1csIFdTSV9UT0tFTl9IVFRQX0FDQ0VQVCwgV1NJX1RPS0VOX0hUVFBfQ09PS0lFLCBXU0lfVE9LRU5fSFRUUF9VU0VSX0FHRU5ULCBMV1NfU0VSVkVSX09QVElPTl9ET19TU0xfR0xPQkFMX0lOSVQsIExXU19TRVJWRVJfT1BUSU9OX0NSRUFURV9WSE9TVF9TU0xfQ1RYLCBMV1NfU0VSVkVSX09QVElPTl9JR05PUkVfTUlTU0lOR19DRVJULCBMV1NfU0VSVkVSX09QVElPTl9QRUVSX0NFUlRfTk9UX1JFUVVJUkVELCBMV1NfU0VSVkVSX09QVElPTl9BTExPV19OT05fU1NMX09OX1NTTF9QT1JULCBMV1NfUFJFLCBMV1NTUEEsIGdldENhbGxiYWNrTmFtZSwgZ2V0Q2FsbGJhY2tOdW1iZXIsIGxvZywgTFdTTVBST19IVFRQLCBMV1NNUFJPX0hUVFBTLCBMV1NNUFJPX0ZJTEUsIExXU01QUk9fQ0dJLCBMV1NNUFJPX1JFRElSX0hUVFAsIExXU01QUk9fUkVESVJfSFRUUFMsIExXU01QUk9fQ0FMTEJBQ0ssIExXU01QUk9fTk9fTU9VTlQsIH0gZnJvbSAnbHdzJzsKaW1wb3J0IHsgaW50ZXJhY3RpdmUsIHZlcmJvc2UsIGRlYnVnLCB3ZWFrTWFwcGVyIH0gZnJvbSAnLi9saWIvbHdzL3V0aWwuanMnOwoKY29uc3QgQyA9IGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogdHJ1ZSwgbWF4U3RyaW5nTGVuZ3RoOiArKHByb2Nlc3MuZW52LkNPTFVNTlMgPz8gMTIwKSAtIDkyLCBtYXhBcnJheUxlbmd0aDogOCB9KTsKCmNvbnN0IHdzaTJvYmogPSB3ZWFrTWFwcGVyKCgpID0+ICh7fSkpOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7Cmdsb2JhbFRoaXMuY3R4ID0gbmV3IExXU0NvbnRleHQoewogIGFzeW5jRG5zU2VydmVyczogWyc4LjguOC44JywgJzguOC40LjQnLCAnNC4yLjIuMSddLAogIG9wdGlvbnM6CiAgICBMV1NfU0VSVkVSX09QVElPTl9ET19TU0xfR0xPQkFMX0lOSVQgfAogICAgTFdTX1NFUlZFUl9PUFRJT05fQ1JFQVRFX1ZIT1NUX1NTTF9DVFggfAogICAgTFdTX1NFUlZFUl9PUFRJT05fSUdOT1JFX01JU1NJTkdfQ0VSVCB8CiAgICBMV1NfU0VSVkVSX09QVElPTl9QRUVSX0NFUlRfTk9UX1JFUVVJUkVEIHwKICAgIExXU19TRVJWRVJfT1BUSU9OX0FMTE9XX05PTl9TU0xfT05fU1NMX1BPUlQgfAogICAgTFdTX1NFUlZFUl9PUFRJT05fRE9fU1NMX0dMT0JBTF9JTklUIHwKICAgIExXU19TRVJWRVJfT1BUSU9OX0NSRUFURV9WSE9TVF9TU0xfQ1RYLAogIGNsaWVudFNzbENhRmlsZXBhdGg6ICdjYS5jcnQnLAogIGNsaWVudFNzbENlcnRGaWxlcGF0aDogJ2xvY2FsaG9zdC5jcnQnLAogIGNsaWVudFNzbFByaXZhdGVLZXlGaWxlcGF0aDogJ2xvY2FsaG9zdC5rZXknLAogIHByb3RvY29sczogWwogICAgewogICAgICBuYW1lOiAncmF3JywKICAgICAgb25Db25uZWN0aW5nKHdzaSkgewogICAgICAgIHZlcmJvc2UoJ29uQ29ubmVjdGluZycsIHdzaSk7CiAgICAgIH0sCiAgICAgIG9uUmF3Q29ubmVjdGVkKHdzaSkgewogICAgICAgIHZlcmJvc2UoJ29uUmF3Q29ubmVjdGVkJywgd3NpKTsKICAgICAgfSwKICAgICAgb25SYXdXcml0ZWFibGUod3NpKSB7CiAgICAgICAgd3NpLndyaXRlKHRvQXJyYXlCdWZmZXIoJ0dFVCAvIEhUVFAvMS4wXHJcblxyXG4nKSk7CiAgICAgIH0sCiAgICAgIG9uUmF3Ungod3NpLCBkYXRhKSB7CiAgICAgICAgZGF0YSA9IHRvU3RyaW5nKGRhdGEpOwoKICAgICAgICB2ZXJib3NlKCdvblJhd1J4Jywgd3NpLCBkYXRhLnRyaW1FbmQoKSk7CiAgICAgIH0sCiAgICAgIG9uUmF3Q2xvc2Uod3NpKSB7CiAgICAgICAgdmVyYm9zZSgnb25SYXdDbG9zZScsIHdzaSk7CiAgICAgIH0sCiAgICAgIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKSB7CiAgICAgICAgZ2xvYmFsVGhpcy53c2kgPSB3c2k7CiAgICAgICAgdmVyYm9zZSgncmF3ICcgKyBnZXRDYWxsYmFja05hbWUocmVhc29uKSwgd3NpLCBhcmdzKTsKICAgICAgICByZXR1cm4gMDsKICAgICAgfSwKICAgIH0sCiAgICB7CiAgICAgIG5hbWU6ICdodHRwJywKICAgICAgb25Fc3RhYmxpc2hlZENsaWVudEh0dHAod3NpLCBkYXRhKSB7CiAgICAgICAgdmVyYm9zZSgnb25Fc3RhYmxpc2hlZENsaWVudEh0dHAnLCBkYXRhKTsKICAgICAgfSwKICAgICAgb25DbGllbnRBcHBlbmRIYW5kc2hha2VIZWFkZXIod3NpLCBkYXRhLCBsZW4pIHsKICAgICAgICB3c2kuYWRkSGVhZGVyKFdTSV9UT0tFTl9IVFRQX0FMTE9XLCAnR0VULCBQT1NULCBIRUFEJywgZGF0YSwgbGVuKTsKICAgICAgICB3c2kuYWRkSGVhZGVyKFdTSV9UT0tFTl9IVFRQX0FDQ0VQVCwgJyovKicsIGRhdGEsIGxlbik7CiAgICAgICAgd3NpLmFkZEhlYWRlcihXU0lfVE9LRU5fSFRUUF9DT09LSUUsICd0ZXN0PTEyMzQ7JywgZGF0YSwgbGVuKTsKICAgICAgICB3c2kuYWRkSGVhZGVyKFdTSV9UT0tFTl9IVFRQX1VTRVJfQUdFTlQsICdRdWlja0pTJywgZGF0YSwgbGVuKTsKCiAgICAgICAgdmVyYm9zZSgnb25DbGllbnRBcHBlbmRIYW5kc2hha2VIZWFkZXInLCB7IGRhdGE6IHRvU3RyaW5nKGRhdGEsIDAsIGxlblswXSksIGxlbjogbGVuWzBdIH0pOwogICAgICB9LAogICAgICBvbkNsaWVudEh0dHBXcml0ZWFibGUod3NpKSB7CiAgICAgICAgdmVyYm9zZSgnb25DbGllbnRIdHRwV3JpdGVhYmxlJywgd3NpKTsKICAgICAgfSwKICAgICAgb25Db21wbGV0ZWRDbGllbnRIdHRwKHdzaSkgewogICAgICAgIHZlcmJvc2UoJ29uQ29tcGxldGVkQ2xpZW50SHR0cCcsIHdzaSk7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2VkQ2xpZW50SHR0cCh3c2kpIHsKICAgICAgICB2ZXJib3NlKCdvbkNsb3NlZENsaWVudEh0dHAnLCB3c2kuY29udGV4dCk7CiAgICAgICAgY3R4LmNhbmNlbFNlcnZpY2UoKTsKICAgICAgfSwKICAgICAgb25SZWNlaXZlQ2xpZW50SHR0cFJlYWQod3NpLCBkYXRhLCBsZW4pIHsKICAgICAgICBjb25zdCBvYmogPSB3c2kyb2JqKHdzaSk7CiAgICAgICAgY29uc3Qgc3RyID0gdG9TdHJpbmcoZGF0YSwgMCwgbGVuKTsKCiAgICAgICAgdmVyYm9zZSgnb25SZWNlaXZlQ2xpZW50SHR0cFJlYWQnLCB7IGxlbiwgc3RyIH0pOwoKICAgICAgICAvL29iai5vZmZzZXQgKz0gbGVuOwogICAgICB9LAogICAgICBvblJlY2VpdmVDbGllbnRIdHRwKHdzaSwgLi4ucmVzdCkgewogICAgICAgIGNvbnN0IG9iaiA9IHdzaTJvYmood3NpKTsKCiAgICAgICAgb2JqLm9mZnNldCA/Pz0gMDsKCiAgICAgICAgY29uc3QgYWIgPSAob2JqLmJ1ZmZlciA/Pz0gbmV3IEFycmF5QnVmZmVyKDB4ZmYwICogMTYpKTsKCiAgICAgICAgbGV0IHJldDsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIHJldCA9IHdzaS5odHRwQ2xpZW50UmVhZChhYiwgb2JqLm9mZnNldCk7CiAgICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnZXhjZXB0aW9uJywgZSk7CiAgICAgICAgfQoKICAgICAgICAvL3ZlcmJvc2UoJ29uUmVjZWl2ZUNsaWVudEh0dHAoMSknLCB7IHB0cjogdG9Qb2ludGVyKGFiKSwgb2Zmc2V0OiBvYmoub2Zmc2V0LCByZXQgfSk7CgogICAgICAgIGlmKHJldCkgdGhpcy5vblJlY2VpdmVDbGllbnRIdHRwUmVhZCh3c2ksIGFiKTsKICAgICAgfSwKICAgICAgb25DbGllbnRDb25uZWN0aW9uRXJyb3Iod3NpLCBtc2cpIHsKICAgICAgICB2ZXJib3NlKCdvbkNsaWVudENvbm5lY3Rpb25FcnJvcicsIHsgbXNnIH0pOwogICAgICB9LAogICAgICBvbkNsaWVudEh0dHBEcm9wUHJvdG9jb2wod3NpKSB7CiAgICAgICAgdmVyYm9zZSgnb25DbGllbnRIdHRwRHJvcFByb3RvY29sJywgd3NpKTsKICAgICAgICBjdHguY2FuY2VsU2VydmljZSgpOwogICAgICB9LAogICAgICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykgewogICAgICAgIGdsb2JhbFRoaXMud3NpID0gd3NpOwogICAgICAgIHZlcmJvc2UoJ2h0dHAgJyArIGdldENhbGxiYWNrTmFtZShyZWFzb24pLCB3c2ksIGFyZ3MpOwogICAgICAgIHJldHVybiAwOwogICAgICB9LAogICAgfSwKICBdLAp9KTsKCi8vY3R4LmNsaWVudENvbm5lY3QoeyBhZGRyZXNzOiAnbG9jYWxob3N0JywgcG9ydDogMjIsIGxvY2FsX3Byb3RvY29sX25hbWU6ICdyYXcnLCBtZXRob2Q6ICdSQVcnIH0pOwoKZ2xvYmFsVGhpcy5jbGllbnQgPSBjdHguY2xpZW50Q29ubmVjdCgnaHR0cHM6Ly9ibG9nLmZlZmUuZGUvJyk7Cgp9CgptYWluKC4uLnNjcmlwdEFyZ3Muc2xpY2UoMSkpOwoKaW50ZXJhY3RpdmUoKTsKAAAAAAAAAABCEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					150,
					2,
					"left_delete",
					null,
					"AgAAAJQCAAAAAAAAlAIAAAAAAAB1AAAAY29uc3QgQyA9IGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogdHJ1ZSwgbWF4U3RyaW5nTGVuZ3RoOiArKHByb2Nlc3MuZW52LkNPTFVNTlMgPz8gMTIwKSAtIDkyLCBtYXhBcnJheUxlbmd0aDogOCB9KTsKkwIAAAAAAACTAgAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAlAIAAAAAAAAJAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/test-server.js",
			"settings":
			{
				"buffer_size": 5454,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ0CAAAAAAAAngIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQIAAAAAAACdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " interactive"
					},
					"DAAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAAnwIAAAAAAACgAgAAAAAAAAAAAACgAgAAAAAAAKECAAAAAAAAAAAAAKECAAAAAAAAogIAAAAAAAAAAAAAogIAAAAAAACjAgAAAAAAAAAAAACjAgAAAAAAAKQCAAAAAAAAAAAAAKQCAAAAAAAApQIAAAAAAAAAAAAApQIAAAAAAACmAgAAAAAAAAAAAACmAgAAAAAAAKcCAAAAAAAAAAAAAKcCAAAAAAAAqAIAAAAAAAAAAAAAqAIAAAAAAACpAgAAAAAAAAAAAACpAgAAAAAAAKoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngIAAAAAAACeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAANAEAAAAAAAA0QQAAAAAAAAAAAAA0QQAAAAAAADSBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AQAAAAAAADQBAAAAAAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CAAAANEEAAAAAAAA0gQAAAAAAAAAAAAA0gQAAAAAAADTBAAAAAAAAAAAAADTBAAAAAAAANQEAAAAAAAAAAAAANQEAAAAAAAA1QQAAAAAAAAAAAAA1QQAAAAAAADWBAAAAAAAAAAAAADWBAAAAAAAANcEAAAAAAAAAAAAANcEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADZBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QQAAAAAAADRBAAAAAAAAAAAAAAAAAAA"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " main"
					},
					"BQAAANkEAAAAAAAA2gQAAAAAAAAAAAAA2gQAAAAAAADbBAAAAAAAAAAAAADbBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA3QQAAAAAAAAAAAAA3QQAAAAAAADeBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QQAAAAAAADZBAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN4EAAAAAAAA4AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gQAAAAAAADeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAOAEAAAAAAAA4QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAOAEAAAAAAAA4AQAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAA4QQAAAAAAADhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOAEAAAAAAAA4QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOEEAAAAAAAA4wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QQAAAAAAADhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"right_delete",
					null,
					"AQAAAOIEAAAAAAAA4gQAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAA4gQAAAAAAADiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAHQUAAAAAAAAdRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBQAAAAAAAB0FAAAAAAAAAAAAAAAAAAA"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n\nmain"
					},
					"BgAAAHUUAAAAAAAAdhQAAAAAAAAAAAAAdhQAAAAAAAB3FAAAAAAAAAAAAAB3FAAAAAAAAHgUAAAAAAAAAAAAAHgUAAAAAAAAeRQAAAAAAAAAAAAAeRQAAAAAAAB6FAAAAAAAAAAAAAB6FAAAAAAAAHsUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdRQAAAAAAAB1FAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHsUAAAAAAAAfRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexQAAAAAAAB7FAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "...scruiopt"
					},
					"CwAAAHwUAAAAAAAAfRQAAAAAAAAAAAAAfRQAAAAAAAB+FAAAAAAAAAAAAAB+FAAAAAAAAH8UAAAAAAAAAAAAAH8UAAAAAAAAgBQAAAAAAAAAAAAAgBQAAAAAAACBFAAAAAAAAAAAAACBFAAAAAAAAIIUAAAAAAAAAAAAAIIUAAAAAAAAgxQAAAAAAAAAAAAAgxQAAAAAAACEFAAAAAAAAAAAAACEFAAAAAAAAIUUAAAAAAAAAAAAAIUUAAAAAAAAhhQAAAAAAAAAAAAAhhQAAAAAAACHFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBQAAAAAAAB8FAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					5,
					"left_delete",
					null,
					"BQAAAIYUAAAAAAAAhhQAAAAAAAABAAAAdIUUAAAAAAAAhRQAAAAAAAABAAAAcIQUAAAAAAAAhBQAAAAAAAABAAAAb4MUAAAAAAAAgxQAAAAAAAABAAAAaYIUAAAAAAAAghQAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAhxQAAAAAAACHFAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "iptArgs"
					},
					"BwAAAIIUAAAAAAAAgxQAAAAAAAAAAAAAgxQAAAAAAACEFAAAAAAAAAAAAACEFAAAAAAAAIUUAAAAAAAAAAAAAIUUAAAAAAAAhhQAAAAAAAAAAAAAhhQAAAAAAACHFAAAAAAAAAAAAACHFAAAAAAAAIgUAAAAAAAAAAAAAIgUAAAAAAAAiRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghQAAAAAAACCFAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAIkUAAAAAAAAiRQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAihQAAAAAAACKFAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": ".slice"
					},
					"BgAAAIkUAAAAAAAAihQAAAAAAAAAAAAAihQAAAAAAACLFAAAAAAAAAAAAACLFAAAAAAAAIwUAAAAAAAAAAAAAIwUAAAAAAAAjRQAAAAAAAAAAAAAjRQAAAAAAACOFAAAAAAAAAAAAACOFAAAAAAAAI8UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRQAAAAAAACJFAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI8UAAAAAAAAkRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxQAAAAAAACPFAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJAUAAAAAAAAkRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBQAAAAAAACQFAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAJIUAAAAAAAAkxQAAAAAAAAAAAAAkxQAAAAAAACUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhQAAAAAAACSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAJQUAAAAAAAAlRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwUAAAAAAAAnBQAAAAAAAAAAAAAAYGVA"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "...."
					},
					"BAAAAN8EAAAAAAAA4AQAAAAAAAAAAAAA4AQAAAAAAADhBAAAAAAAAAAAAADhBAAAAAAAAOIEAAAAAAAAAAAAAOIEAAAAAAAA4wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wQAAAAAAADfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAAOIEAAAAAAAA4gQAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA4wQAAAAAAADjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAAOIEAAAAAAAA4wQAAAAAAAAAAAAA4wQAAAAAAADkBAAAAAAAAAAAAADkBAAAAAAAAOUEAAAAAAAAAAAAAOUEAAAAAAAA5gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gQAAAAAAADiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"left_delete",
					null,
					"AQAAAOkEAAAAAAAA6QQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA6gQAAAAAAADqBAAAAAAAAAAAAAAAAAAA"
				],
				[
					55,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbFAAAaW1wb3J0IHsgbG9nTGV2ZWwsIExXU1NQQSwgZ2V0Q2FsbGJhY2tOYW1lLCBMTExfRVJSLCBMTExfV0FSTiwgTExMX0lORk8sIExMTF9OT1RJQ0UsIExMTF9VU0VSLCBMTExfQ0xJRU5ULCBMV1NfSUxMRUdBTF9IVFRQX0NPTlRFTlRfTEVOLCBMV1NfU0VSVkVSX09QVElPTl9WSF9IMl9IQUxGX0NMT1NFRF9MT05HX1BPTEwsIExXU19TRVJWRVJfT1BUSU9OX0RPX1NTTF9HTE9CQUxfSU5JVCwgTFdTX1NFUlZFUl9PUFRJT05fUEVFUl9DRVJUX05PVF9SRVFVSVJFRCwgTFdTX1NFUlZFUl9PUFRJT05fSUdOT1JFX01JU1NJTkdfQ0VSVCwgTFdTX1NFUlZFUl9PUFRJT05fQUxMT1dfSFRUUF9PTl9IVFRQU19MSVNURU5FUiwgTFdTX1NFUlZFUl9PUFRJT05fQUxMT1dfTk9OX1NTTF9PTl9TU0xfUE9SVCwgTFdTX1dSSVRFX0hUVFBfRklOQUwsIExXU01QUk9fTk9fTU9VTlQsIExXU01QUk9fSFRUUFMsIExXU01QUk9fSFRUUCwgTFdTTVBST19DQUxMQkFDSywgTFdTTVBST19GSUxFLCBMV1NDb250ZXh0LCB0b0FycmF5QnVmZmVyLCB0b1N0cmluZywgfSBmcm9tICdsd3MnOwppbXBvcnQgeyBzZXRUaW1lb3V0IH0gZnJvbSAnb3MnOwppbXBvcnQgZXh0cmFNaW1ldHlwZXMgZnJvbSAnLi9saWIvbHdzL21pbWV0eXBlcy5qcyc7CmltcG9ydCB7IHZlcmJvc2UsIGRlYnVnLCB3ZWFrTWFwcGVyLCBpbnRlcmFjdGl2ZSB9IGZyb20gJy4vbGliL2x3cy91dGlsLmpzJzsKCmxvZ0xldmVsKExMTF9FUlIgfCBMTExfVVNFUik7Cgpjb25zdCBDID0gY29uc29sZS5jb25maWcoeyBjb21wYWN0OiB0cnVlLCBtYXhBcnJheUxlbmd0aDogOCB9KTsKCmNvbnN0IHdzaTJzcGEgPSB3ZWFrTWFwcGVyKAogICgpID0+CiAgICBuZXcgTFdTU1BBKHdzaSwgewogICAgICBtYXhTdG9yYWdlOiAxIDw8IDE3LAogICAgICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpIHsKICAgICAgICB2ZXJib3NlKCdzcGEub25PcGVuJywgeyBbbmFtZV06IGZpbGVuYW1lIH0pOwogICAgICB9LAogICAgICBvbkNvbnRlbnQobmFtZSwgZmlsZW5hbWUsIGJ1ZikgewogICAgICAgIHZlcmJvc2UoJ3NwYS5vbkNvbnRlbnQnLCB7IFtuYW1lXTogZmlsZW5hbWUsIGJ1ZiB9KTsKICAgICAgfSwKICAgICAgb25DbG9zZShuYW1lLCBmaWxlbmFtZSkgewogICAgICAgIHZlcmJvc2UoJ3NwYS5vbkNsb3NlJywgeyBbbmFtZV06IGZpbGVuYW1lIH0pOwogICAgICB9LAogICAgfSksCik7Cgpjb25zdCB3c2kyb2JqID0gd2Vha01hcHBlcigpOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7Cmdsb2JhbFRoaXMuY3R4ID0gbmV3IExXU0NvbnRleHQoewogIHBvcnQ6IDg4ODYsCiAgdmhvc3ROYW1lOiAnbG9jYWxob3N0LnRyYW5zaXN0b3Jpc2llcnQuY2gnLAogIG9wdGlvbnM6CiAgICBMV1NfU0VSVkVSX09QVElPTl9JR05PUkVfTUlTU0lOR19DRVJUIHwKICAgIExXU19TRVJWRVJfT1BUSU9OX1BFRVJfQ0VSVF9OT1RfUkVRVUlSRUQgfAogICAgTFdTX1NFUlZFUl9PUFRJT05fQUxMT1dfSFRUUF9PTl9IVFRQU19MSVNURU5FUiB8CiAgICBMV1NfU0VSVkVSX09QVElPTl9BTExPV19OT05fU1NMX09OX1NTTF9QT1JUIHwKICAgIExXU19TRVJWRVJfT1BUSU9OX0RPX1NTTF9HTE9CQUxfSU5JVCB8CiAgICBMV1NfU0VSVkVSX09QVElPTl9WSF9IMl9IQUxGX0NMT1NFRF9MT05HX1BPTEwsCiAgbGlzdGVuQWNjZXB0Um9sZTogJ3Jhdy1za3QnLAogIGxpc3RlbkFjY2VwdFByb3RvY29sOiAncmF3LWVjaG8nLAogIHByb3RvY29sczogWwogICAgewogICAgICBuYW1lOiAnd3MnLAogICAgICBvbk9wZW5zc2xQZXJmb3JtU2VydmVyQ2VydFZlcmlmaWNhdGlvbih3c2ksIHNzbCwgcHJldmVyaWZ5X29rKSB7CiAgICAgICAgdmVyYm9zZSgnb25PcGVuc3NsUGVyZm9ybVNlcnZlckNlcnRWZXJpZmljYXRpb24nLCB3c2ksICcweCcgKyBzc2wudG9TdHJpbmcoMTYpLCBwcmV2ZXJpZnlfb2spOwogICAgICAgIHJldHVybiAwOwogICAgICB9LAogICAgICBvbkh0dHBDb25maXJtVXBncmFkZSh3c2ksIHR5cGUpIHsKICAgICAgICB2ZXJib3NlKCdvbkh0dHBDb25maXJtVXBncmFkZScsIHdzaSwgdHlwZSwgd3NpLnByb3RvY29sKTsKICAgICAgfSwKICAgICAgb25SZWNlaXZlKHdzaSwgZGF0YSwgbGVuKSB7CiAgICAgICAgaWYoISgnYnl0ZUxlbmd0aCcgaW4gZGF0YSkpIGRhdGEgPSBkYXRhLnRvU3RyaW5nKCkucmVwbGFjZSgvXG4vZywgJ1xcbicpOwoKICAgICAgICB2ZXJib3NlKCdvblJlY2VpdmUnLCB3c2ksIGRhdGEsIGxlbik7CiAgICAgICAgd3NpLndyaXRlKGRhdGEpOwogICAgICB9LAogICAgICBvbkZpbHRlckh0dHBDb25uZWN0aW9uKHdzaSwgdXJsKSB7CiAgICAgICAgY29uc3QgeyBoZWFkZXJzIH0gPSB3c2k7CgogICAgICAgIHZlcmJvc2UoJ29uRmlsdGVySHR0cENvbm5lY3Rpb24nLCB3c2ksIHVybCwgaGVhZGVycyk7CgogICAgICAgIGlmKC9tdWx0aXBhcnQvLnRlc3QoaGVhZGVyc1snY29udGVudC10eXBlJ10pKSB3c2kyc3BhKHdzaSk7CiAgICAgIH0sCiAgICAgIGNhbGxiYWNrKHdzaSwgcmVhc29uLCAuLi5hcmdzKSB7CiAgICAgICAgdmVyYm9zZSgnd3MgJyArIGdldENhbGxiYWNrTmFtZShyZWFzb24pLCB3c2ksIGFyZ3MpOwogICAgICAgIHJldHVybiAwOwogICAgICB9LAogICAgfSwKICAgIHsKICAgICAgbmFtZTogJ2h0dHAnLAogICAgICBvbkh0dHBCb2R5KHdzaSwgYnVmLCBsZW4pIHsKICAgICAgICBjb25zdCBzID0gd3NpMnNwYSh3c2kpOwoKICAgICAgICBkZWJ1Zygnb25IdHRwQm9keScsIHMsIGJ1Zik7CgogICAgICAgIHMucHJvY2VzcyhidWYsIDAsIGJ1Zi5ieXRlTGVuZ3RoKTsKICAgICAgfSwKICAgICAgb25IdHRwQm9keUNvbXBsZXRpb24od3NpKSB7CiAgICAgICAgdmVyYm9zZSgnb25IdHRwQm9keUNvbXBsZXRpb24nLCB3c2kpOwogICAgICAgIGNvbnN0IHMgPSB3c2kyc3BhKHdzaSk7CgogICAgICAgIHMuZmluYWxpemUoKTsKCiAgICAgICAgd3NpLndhbnRXcml0ZSgoKSA9PiB7CiAgICAgICAgICB2ZXJib3NlKCdyZXNwb25kLm9uSHR0cEJvZHlDb21wbGV0aW9uJywgd3NpKTsKCiAgICAgICAgICBjb25zdCBiID0gdG9BcnJheUJ1ZmZlcignUE9TVCBjb21wbGV0ZWQhXHJcbicpOwoKICAgICAgICAgIHdzaS5yZXNwb25kKDIwMCwgeyAnY29udGVudC10eXBlJzogJ3RleHQvaHRtbCcsIHRlc3Q6ICdibGFoJyB9LCBiLmJ5dGVMZW5ndGgpOwogICAgICAgICAgd3NpLndyaXRlKGIsIExXU19XUklURV9IVFRQX0ZJTkFMKTsKCiAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgfSk7CiAgICAgIH0sCiAgICAgIG9uSHR0cFdyaXRlYWJsZSh3c2kpIHsKICAgICAgICB2ZXJib3NlKCdvbkh0dHBXcml0ZWFibGUnLCB3c2kpOwogICAgICAgIGNvbnN0IG9iaiA9IHdzaTJvYmood3NpKTsKCiAgICAgICAgaWYoIW9iai5yZXNwb25kZWQpIHsKICAgICAgICAgIG9iai5saW5lcyA9IChKU09OLnN0cmluZ2lmeSh7IGJsYWg6IDEyMzQsIHRlc3Q6IFsxLCAyLCAzLCA0XSwgeDogdHJ1ZSB9LCBudWxsLCAyKSArICdcbicpLnNwbGl0KCdcbicpOwoKICAgICAgICAgIHdzaS5yZXNwb25kKDIwMCwgTFdTX0lMTEVHQUxfSFRUUF9DT05URU5UX0xFTiA/PyBvYmoubGluZXMubGVuZ3RoLCB7CiAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiAndGV4dC9odG1sJyAvKiwgY29ubmVjdGlvbjogJ2Nsb3NlJyovLAogICAgICAgICAgfSk7CgogICAgICAgICAgb2JqLmluZGV4ID0gMDsKICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gd3NpLndhbnRXcml0ZSgpLCAwKTsKCiAgICAgICAgICBvYmoucmVzcG9uZGVkID0gMTsKICAgICAgICAgIHJldHVybiAwOwogICAgICAgIH0KCiAgICAgICAgd3NpLndyaXRlKG9iai5saW5lc1tvYmouaW5kZXhdICsgJ1xuJywgb2JqLmxpbmVzWysrb2JqLmluZGV4XSA/IExXU19XUklURV9IVFRQIDogTFdTX1dSSVRFX0hUVFBfRklOQUwpOwoKICAgICAgICBpZihvYmoubGluZXNbb2JqLmluZGV4XSkgewogICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB3c2kud2FudFdyaXRlKCksIDEwMCk7CiAgICAgICAgICByZXR1cm4gMDsKICAgICAgICB9CgogICAgICAgIHJldHVybiAtMTsKICAgICAgfSwKICAgICAgb25IdHRwKHdzaSwgYnVmKSB7CiAgICAgICAgY29uc3QgeyBwcm90b2NvbCwgbWV0aG9kLCB1cmksIGhlYWRlcnMgfSA9IHdzaTsKICAgICAgICB2ZXJib3NlKCdvbkh0dHAnLCB3c2ksIHsgcHJvdG9jb2wsIG1ldGhvZCwgdXJpIH0sIGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogZmFsc2UgfSksIGhlYWRlcnMpOwoKICAgICAgICBnbG9iYWxUaGlzLndzaSA9IHdzaTsKCiAgICAgICAgaWYobWV0aG9kICE9ICdQT1NUJykgd3NpLndhbnRXcml0ZSgpOwogICAgICB9LAogICAgICBvbkFkZEhlYWRlcnMod3NpLCBidWYsIGxlbikgewogICAgICAgIHdzaS5hZGRIZWFkZXIoJ3Rlc3QnLCAnYmxhaCcsIGJ1ZiwgbGVuKTsKCiAgICAgICAgdmVyYm9zZSgnb25BZGRIZWFkZXJzJywgd3NpLCB7IGJ1ZiwgbGVuIH0pOwogICAgICB9LAogICAgICBjYWxsYmFjayh3c2ksIHJlYXNvbiwgLi4uYXJncykgewogICAgICAgIHZlcmJvc2UoJ2h0dHAgJyArIGdldENhbGxiYWNrTmFtZShyZWFzb24pLCB3c2ksIGFyZ3MpOwogICAgICAgIHJldHVybiAwOwogICAgICB9LAogICAgfSwKICBdLAogIHNlcnZlclNzbENhOiAnY2EuY3J0JywKICBzZXJ2ZXJTc2xDZXJ0OiAnbG9jYWxob3N0LmNydCcsCiAgc2VydmVyU3NsUHJpdmF0ZUtleTogJ2xvY2FsaG9zdC5rZXknLAogIG1vdW50czogWwogICAgeyBtb3VudHBvaW50OiAnL3dzJywgcHJvdG9jb2w6ICd3cycsIG9yaWdpblByb3RvY29sOiBMV1NNUFJPX05PX01PVU5UIH0sCiAgICB7IG1vdW50cG9pbnQ6ICcvdGVzdCcsIHByb3RvY29sOiAnaHR0cCcsIG9yaWdpblByb3RvY29sOiBMV1NNUFJPX0NBTExCQUNLIH0sCiAgICB7IG1vdW50cG9pbnQ6ICcvd2FybWNhdCcsIG9yaWdpbjogJ3dhcm1jYXQuY29tLycsIGRlZjogJ2luZGV4Lmh0bWwnLCBvcmlnaW5Qcm90b2NvbDogTFdTTVBST19IVFRQIH0sCiAgICAvL3sgbW91bnRwb2ludDogJy8nLCBvcmlnaW46ICd3YXJtY2F0LmNvbS8nLCBkZWY6ICdpbmRleC5odG1sJywgb3JpZ2luUHJvdG9jb2w6IExXU01QUk9fSFRUUCB9LAogICAgewogICAgICBtb3VudHBvaW50OiAnLycsCiAgICAgIG9yaWdpbjogJy4nLAogICAgICBkZWY6ICdSRUFETUUubWQnLAogICAgICBvcmlnaW5Qcm90b2NvbDogTFdTTVBST19GSUxFLAogICAgICBleHRyYU1pbWV0eXBlcywKICAgIH0sCiAgXSwKfSk7Cn0KCm1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7CgAAAAAAAAAAdRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"paste",
					null,
					"AQAAALIEAAAAAAAA2gQAAAAAAAAeAAAAY29uc3Qgd3NpMm9iaiA9IHdlYWtNYXBwZXIoKTsK",
					"AQAAAAAAAAABAAAAsgQAAAAAAADQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYCAAAAAAAA5wIAAAAAAABAAAAACmNvbnN0IEMgPSBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IHRydWUsIG1heEFycmF5TGVuZ3RoOiA4IH0pOw",
					"AQAAAAAAAAABAAAA5gIAAAAAAAAmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					2,
					"left_delete",
					null,
					"AgAAAOYCAAAAAAAA5gIAAAAAAAABAAAAIOUCAAAAAAAA5QIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA5wIAAAAAAADnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"left_delete",
					null,
					"AQAAAD0VAAAAAAAAPRUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAPhUAAAAAAAA+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAD0VAAAAAAAAPhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRUAAAAAAAA9FQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"paste",
					null,
					"AQAAAD4VAAAAAAAATRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhUAAAAAAAA+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"left_delete",
					null,
					"AQAAAEwVAAAAAAAATBUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAATRUAAAAAAABNFQAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD4VAAAAAAAAPxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhUAAAAAAAA+FQAAAAAAAAAAAAAAAAAA"
				],
				[
					143,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAE0VAAAAAAAAThUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegIAAAAAAAB6AgAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lws-socket.c",
			"settings":
			{
				"buffer_size": 26398,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					25,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAAtdAAAAAAAADF0AAAAAAAAKAAAARU5VTUVSQUJMRQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALXQAAAAAAABVdAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					9,
					"left_delete",
					null,
					"CQAAAAtdAAAAAAAAC10AAAAAAAABAAAAQwpdAAAAAAAACl0AAAAAAAABAAAAXwldAAAAAAAACV0AAAAAAAABAAAAUAhdAAAAAAAACF0AAAAAAAABAAAATwddAAAAAAAAB10AAAAAAAABAAAAUgZdAAAAAAAABl0AAAAAAAABAAAAUAVdAAAAAAAABV0AAAAAAAABAAAAXwRdAAAAAAAABF0AAAAAAAABAAAAUwNdAAAAAAAAA10AAAAAAAABAAAASg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMXQAAAAAAAAxdAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAANdAAAAAAAABF0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADXQAAAAAAAANdAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"paste",
					null,
					"AQAAALleAAAAAAAA014AAAAAAAAUAAAASlNfQ0dFVFNFVF9NQUdJQ19ERUY",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5XgAAAAAAAM1eAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPZeAAAAAAAA914AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2XgAAAAAAAPZeAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " HJS"
					},
					"BAAAAPdeAAAAAAAA+F4AAAAAAAAAAAAA+F4AAAAAAAD5XgAAAAAAAAAAAAD5XgAAAAAAAPpeAAAAAAAAAAAAAPpeAAAAAAAA+14AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3XgAAAAAAAPdeAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					3,
					"left_delete",
					null,
					"AwAAAPpeAAAAAAAA+l4AAAAAAAABAAAAU/leAAAAAAAA+V4AAAAAAAABAAAASvheAAAAAAAA+F4AAAAAAAABAAAASA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7XgAAAAAAAPteAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "JS_F"
					},
					"BAAAAPheAAAAAAAA+V4AAAAAAAAAAAAA+V4AAAAAAAD6XgAAAAAAAAAAAAD6XgAAAAAAAPteAAAAAAAAAAAAAPteAAAAAAAA/F4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4XgAAAAAAAPheAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"left_delete",
					null,
					"AQAAAPteAAAAAAAA+14AAAAAAAABAAAARg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8XgAAAAAAAPxeAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "CON"
					},
					"AwAAAPteAAAAAAAA/F4AAAAAAAAAAAAA/F4AAAAAAAD9XgAAAAAAAAAAAAD9XgAAAAAAAP5eAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7XgAAAAAAAPteAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					3,
					"left_delete",
					null,
					"AwAAAP1eAAAAAAAA/V4AAAAAAAABAAAATvxeAAAAAAAA/F4AAAAAAAABAAAAT/teAAAAAAAA+14AAAAAAAABAAAAQw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+XgAAAAAAAP5eAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "PROP_ENUMERA"
					},
					"DAAAAPteAAAAAAAA/F4AAAAAAAAAAAAA/F4AAAAAAAD9XgAAAAAAAAAAAAD9XgAAAAAAAP5eAAAAAAAAAAAAAP5eAAAAAAAA/14AAAAAAAAAAAAA/14AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAAFfAAAAAAAAAAAAAAFfAAAAAAAAAl8AAAAAAAAAAAAAAl8AAAAAAAADXwAAAAAAAAAAAAADXwAAAAAAAARfAAAAAAAAAAAAAARfAAAAAAAABV8AAAAAAAAAAAAABV8AAAAAAAAGXwAAAAAAAAAAAAAGXwAAAAAAAAdfAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7XgAAAAAAAPteAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "BLE"
					},
					"AwAAAAdfAAAAAAAACF8AAAAAAAAAAAAACF8AAAAAAAAJXwAAAAAAAAAAAAAJXwAAAAAAAApfAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHXwAAAAAAAAdfAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lws-context.c",
			"settings":
			{
				"buffer_size": 47589,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					33,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHAZAAAAAAAAcRkAAAAAAAAAAAAAcRkAAAAAAABzGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwGQAAAAAAAHAZAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					2,
					"left_delete",
					null,
					"AgAAAHEZAAAAAAAAcRkAAAAAAAACAAAAICBwGQAAAAAAAHAZAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzGQAAAAAAAHMZAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAHEZAAAAAAAAcxkAAAAAAAAAAAAAeRUAAAAAAAB7FQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxGQAAAAAAAHkVAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACnuQAAI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgojaW5jbHVkZSA8bGlid2Vic29ja2V0cy5oPgojaW5jbHVkZSA8bHdzX2NvbmZpZy5oPgojaW5jbHVkZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlICJsd3Mtc29ja2V0LmgiCiNpbmNsdWRlICJsd3MtY29udGV4dC5oIgojaW5jbHVkZSAibHdzLXNvY2thZGRyNDYuaCIKI2luY2x1ZGUgImx3cy5oIgojaW5jbHVkZSAianMtdXRpbHMuaCIKI2luY2x1ZGUgImlvaGFuZGxlci5oIgoKI2RlZmluZSBMV1NfUExVR0lOX1NUQVRJQwoKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9ERUFERFJPUAojaW5jbHVkZSAibGlid2Vic29ja2V0cy9wbHVnaW5zL2RlYWRkcm9wL3Byb3RvY29sX2x3c19kZWFkZHJvcC5jIgojZW5kaWYKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9SQVdfUFJPWFkKI2luY2x1ZGUgImxpYndlYnNvY2tldHMvcGx1Z2lucy9yYXctcHJveHkvcHJvdG9jb2xfbHdzX3Jhd19wcm94eS5jIgojZW5kaWYKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9GVUxMVEVYVF9ERU1PCiNpbmNsdWRlICJsaWJ3ZWJzb2NrZXRzL3BsdWdpbnMvcHJvdG9jb2xfZnVsbHRleHRfZGVtby5jIgojZW5kaWYKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9MV1NfU1RBVFVTCiNpbmNsdWRlICJsaWJ3ZWJzb2NrZXRzL3BsdWdpbnMvcHJvdG9jb2xfbHdzX3N0YXR1cy5jIgojZW5kaWYKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9MV1NfQUNNRV9DTElFTlQKI2luY2x1ZGUgImxpYndlYnNvY2tldHMvcGx1Z2lucy9hY21lLWNsaWVudC9wcm90b2NvbF9sd3NfYWNtZV9jbGllbnQuYyIKI2VuZGlmCiNpZmRlZiBQTFVHSU5fUFJPVE9DT0xfTFdTX1NTSERfREVNTwojaW5jbHVkZSAibGlid2Vic29ja2V0cy9wbHVnaW5zL3Byb3RvY29sX2x3c19zc2hkX2RlbW8uYyIKI2VuZGlmCiNpZmRlZiBQTFVHSU5fUFJPVE9DT0xfRFVNQl9JTkNSRU1FTlQKI2luY2x1ZGUgImxpYndlYnNvY2tldHMvcGx1Z2lucy9wcm90b2NvbF9kdW1iX2luY3JlbWVudC5jIgojZW5kaWYKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9NSVJST1IKI2luY2x1ZGUgImxpYndlYnNvY2tldHMvcGx1Z2lucy9wcm90b2NvbF9sd3NfbWlycm9yLmMiCiNlbmRpZgojaWZkZWYgUExVR0lOX1BST1RPQ09MX0xXU19SQVdfU1NIRAojaW5jbHVkZSAibGlid2Vic29ja2V0cy9wbHVnaW5zL3NzaC1iYXNlL3NzaGQuYyIKI2VuZGlmCiNpZmRlZiBQTFVHSU5fUFJPVE9DT0xfUkFXX1RFU1QKI2luY2x1ZGUgImxpYndlYnNvY2tldHMvcGx1Z2lucy9wcm90b2NvbF9sd3NfcmF3X3Rlc3QuYyIKI2VuZGlmCgp0eXBlZGVmIHN0cnVjdCBsd3NfcHJvdG9jb2xzIExXU1Byb3RvY29sczsKCnN0YXRpYyBpbnQgY2FsbGJhY2tfcG9sbGZkKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiwgdm9pZCosIHNpemVfdCk7CnN0YXRpYyBpbnQgY2FsbGJhY2tfanMoc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKc3RhdGljIGludCBjYWxsYmFja19odHRwKHN0cnVjdCBsd3MqLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zLCB2b2lkKiwgdm9pZCosIHNpemVfdCk7CnN0YXRpYyBpbnQgY2FsbGJhY2tfcHJvdG9jb2woc3RydWN0IGx3cyosIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMsIHZvaWQqLCB2b2lkKiwgc2l6ZV90KTsKc3RhdGljIEpTVmFsdWUgY2FsbGJhY2tfYyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0W10sIGludCwgdm9pZCopOwoKc3RhdGljIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyogdmhvc3Rfb3B0aW9uc19mcm9tKEpTQ29udGV4dCosIEpTVmFsdWVDb25zdCk7CnN0YXRpYyBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMqIHZob3N0X29wdGlvbnNfZnJvbWZyZWUoSlNDb250ZXh0KiwgSlNWYWx1ZSk7CgpzdGF0aWMgdm9pZCB2aG9zdF9vcHRpb25zX2ZyZWUoSlNSdW50aW1lKiwgc3RydWN0IGx3c19wcm90b2NvbF92aG9zdF9vcHRpb25zKik7CgpKU0NsYXNzSUQgbHdzanNfY29udGV4dF9jbGFzc19pZDsKc3RhdGljIEpTVmFsdWUgbHdzanNfY29udGV4dF9wcm90bywgbHdzanNfY29udGV4dF9jdG9yOwoKc3RhdGljIEpTVmFsdWUKcHJvdG9jb2xfaGFuZGxlcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2LCBpbnQgbWFnaWMsIEpTVmFsdWVDb25zdCBmdW5jX2RhdGFbXSkgewogIHZvaWQqIGNwdHIgPSB0b19wdHIoY3R4LCBmdW5jX2RhdGFbM10pOwogIHN0cnVjdCBsd3NfcG9sbGZkIGxwZmQgPSB7CiAgICAgIC5mZCA9IHRvX2ludDMyKGN0eCwgZnVuY19kYXRhWzBdKSwKICAgICAgLmV2ZW50cyA9IHRvX2ludDMyKGN0eCwgZnVuY19kYXRhWzFdKSwKICAgICAgLnJldmVudHMgPSBKU19Ub0Jvb2woY3R4LCBmdW5jX2RhdGFbMl0pID8gUE9MTE9VVCA6IFBPTExJTiwKICB9OwoKICBsd3Nfc2VydmljZV9mZCgoc3RydWN0IGx3c19jb250ZXh0KiljcHRyLCAmbHBmZCk7CgogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCkpTVmFsdWUKcHJvdG9jb2xfb2JqKEpTQ29udGV4dCogY3R4LCBjb25zdCBMV1NQcm90b2NvbHMqIHByb3RvKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIC8qaWYocHJvdG8tPnVzZXIpCiAgICByZXR1cm4gcHRyX29iaihjdHgsICgoTFdTUHJvdG9jb2wqKXByb3RvLT51c2VyKS0+b2JqKTsqLwoKICByZXQgPSBKU19OZXdPYmplY3RQcm90byhjdHgsIEpTX05VTEwpOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgIm5hbWUiLCBKU19OZXdTdHJpbmcoY3R4LCBwcm90by0+bmFtZSkpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAicGVyU2Vzc2lvbkRhdGFTaXplIiwgSlNfTmV3VWludDMyKGN0eCwgcHJvdG8tPnBlcl9zZXNzaW9uX2RhdGFfc2l6ZSkpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAicnhCdWZmZXJTaXplIiwgSlNfTmV3VWludDMyKGN0eCwgcHJvdG8tPnJ4X2J1ZmZlcl9zaXplKSk7CiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJpZCIsIEpTX05ld1VpbnQzMihjdHgsIHByb3RvLT5pZCkpOwogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAidHhQYWNrZXRTaXplIiwgSlNfTmV3VWludDMyKGN0eCwgcHJvdG8tPnR4X3BhY2tldF9zaXplKSk7CgogIEpTVmFsdWUgY2IgPSBKU19OVUxMOwoKICBpZihwcm90by0+Y2FsbGJhY2spCiAgICBjYiA9IGpzX2Z1bmN0aW9uX2NjbG9zdXJlKGN0eCwgY2FsbGJhY2tfYywgNCwgMCwgKHZvaWQqKXByb3RvLCAwKTsKCiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJjYWxsYmFjayIsIGNiKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIExXU1Byb3RvY29scwpwcm90b2NvbF9mcm9tKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgTFdTUHJvdG9jb2xzIHBybyA9IHswfTsKICBMV1NQcm90b2NvbCogY2xvc3VyZTsKCiAgaWYoIShjbG9zdXJlID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihMV1NQcm90b2NvbCkpKSkKICAgIHJldHVybiBwcm87CgogIEJPT0wgaXNfYXJyYXkgPSBKU19Jc0FycmF5KGN0eCwgb2JqKTsKICBKU1ZhbHVlIHZhbHVlID0gaXNfYXJyYXkgPyBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9iaiwgMCkgOiBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm5hbWUiKTsKICBwcm8ubmFtZSA9IHRvX3N0cmluZ2ZyZWUoY3R4LCB2YWx1ZSk7CgogIHZhbHVlID0gaXNfYXJyYXkgPyBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9iaiwgMSkgOiBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgImNhbGxiYWNrIik7CgogIGNsb3N1cmUtPmN0eCA9IGN0eDsKICBjbG9zdXJlLT5jYWxsYmFjayA9IHZhbHVlOwogIGNsb3N1cmUtPm9iaiA9IG9ial9wdHIoY3R4LCBvYmopOwoKICBwcm8uY2FsbGJhY2sgPSBjYWxsYmFja19wcm90b2NvbDsKICBwcm8udXNlciA9IGNsb3N1cmU7CgogIGx3c2pzX2dldF9sd3NfY2FsbGJhY2tzKGN0eCwgb2JqLCBjbG9zdXJlLT5jYWxsYmFja3MsIGNvdW50b2YoY2xvc3VyZS0+Y2FsbGJhY2tzKSk7CgogIHByby5wZXJfc2Vzc2lvbl9kYXRhX3NpemUgPSBzaXplb2YoSlNWYWx1ZSk7CgogIHZhbHVlID0gaXNfYXJyYXkgPyBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9iaiwgMikgOiBqc19nZXRfcHJvcGVydHkoY3R4LCBvYmosICJyeF9idWZmZXJfc2l6ZSIpOwogIHByby5yeF9idWZmZXJfc2l6ZSA9IHRvX2ludGVnZXJmcmVlKGN0eCwgdmFsdWUpOwoKICB2YWx1ZSA9IGlzX2FycmF5ID8gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBvYmosIDMpIDogSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJpZCIpOwogIHByby5pZCA9IHRvX2ludGVnZXJmcmVlKGN0eCwgdmFsdWUpOwoKICB2YWx1ZSA9IGlzX2FycmF5ID8gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBvYmosIDQpIDoganNfZ2V0X3Byb3BlcnR5KGN0eCwgb2JqLCAidHhfcGFja2V0X3NpemUiKTsKICBwcm8udHhfcGFja2V0X3NpemUgPSB0b19pbnRlZ2VyZnJlZShjdHgsIHZhbHVlKTsKCiAgcmV0dXJuIHBybzsKfQoKc3RhdGljIHZvaWQKcHJvdG9jb2xfZnJlZShKU1J1bnRpbWUqIHJ0LCBMV1NQcm90b2NvbHMqIHBybykgewogIExXU1Byb3RvY29sKiBjbG9zdXJlID0gcHJvLT51c2VyOwoKICBpZihjbG9zdXJlKSB7CiAgICBKU19GcmVlVmFsdWVSVChydCwgY2xvc3VyZS0+Y2FsbGJhY2spOwoKICAgIGlmKGNsb3N1cmUtPm9iaikKICAgICAgb2JqX2ZyZWUocnQsIGNsb3N1cmUtPm9iaik7CgogICAganNfZnJlZV9ydChydCwgY2xvc3VyZSk7CiAgfQoKICBwcm8tPnVzZXIgPSAwOwogIHByby0+Y2FsbGJhY2sgPSAwOwoKICBpZihwcm8tPm5hbWUpIHsKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKilwcm8tPm5hbWUpOwogICAgcHJvLT5uYW1lID0gMDsKICB9Cn0KCnN0YXRpYyBjb25zdCBMV1NQcm90b2NvbHMqCnByb3RvY29sc19mcm9tYXJyYXkoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHNpemVfdCBsZW4gPSAwOwogIEpTVmFsdWUqIHZhbHVlcyA9IHRvX3ZhbHVlYXJyYXkoY3R4LCB2YWx1ZSwgJmxlbik7CiAgTFdTUHJvdG9jb2xzKiBwcm8gPSBqc19tYWxsb2N6KGN0eCwgKGxlbiArIDEzKSAqIHNpemVvZihMV1NQcm90b2NvbHMpKTsKICBzaXplX3QgaiA9IDA7CgogIHByb1tqKytdID0gKExXU1Byb3RvY29scyl7CiAgICAgICJodHRwLW9ubHkiLAogICAgICBjYWxsYmFja19odHRwLAogICAgICAwLAogICAgICAwLAogICAgICAwLAogICAgICBOVUxMLAogICAgICAwLAogIH07CgogIGZvcihzaXplX3QgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgcHJvW2orK10gPSBwcm90b2NvbF9mcm9tKGN0eCwgdmFsdWVzW2ldKTsKCiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZXNbaV0pOwogIH0KCi8qI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9ERUFERFJPUAogIHByb1tqKytdID0gKExXU1Byb3RvY29scylMV1NfUExVR0lOX1BST1RPQ09MX0RFQUREUk9QOwojZW5kaWYKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9SQVdfUFJPWFkKICBwcm9baisrXSA9IChMV1NQcm90b2NvbHMpTFdTX1BMVUdJTl9QUk9UT0NPTF9SQVdfUFJPWFk7CiNlbmRpZgojaWZkZWYgUExVR0lOX1BST1RPQ09MX0ZVTExURVhUX0RFTU8KICBwcm9baisrXSA9IChMV1NQcm90b2NvbHMpTFdTX1BMVUdJTl9QUk9UT0NPTF9GVUxMVEVYVF9ERU1POwojZW5kaWYKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9MV1NfU1RBVFVTCiAgcHJvW2orK10gPSAoTFdTUHJvdG9jb2xzKUxXU19QTFVHSU5fUFJPVE9DT0xfTFdTX1NUQVRVUzsKI2VuZGlmCiNpZmRlZiBQTFVHSU5fUFJPVE9DT0xfTFdTX0FDTUVfQ0xJRU5UCiAgcHJvW2orK10gPSAoTFdTUHJvdG9jb2xzKUxXU19QTFVHSU5fUFJPVE9DT0xfTFdTX0FDTUVfQ0xJRU5UOwojZW5kaWYKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9MV1NfU1NIRF9ERU1PCiAgcHJvW2orK10gPSAoTFdTUHJvdG9jb2xzKUxXU19QTFVHSU5fUFJPVE9DT0xfTFdTX1NTSERfREVNTzsKI2VuZGlmCiNpZmRlZiBQTFVHSU5fUFJPVE9DT0xfRFVNQl9JTkNSRU1FTlQKICBwcm9baisrXSA9IChMV1NQcm90b2NvbHMpTFdTX1BMVUdJTl9QUk9UT0NPTF9EVU1CX0lOQ1JFTUVOVDsKI2VuZGlmCiNpZmRlZiBQTFVHSU5fUFJPVE9DT0xfTUlSUk9SCiAgcHJvW2orK10gPSAoTFdTUHJvdG9jb2xzKUxXU19QTFVHSU5fUFJPVE9DT0xfTUlSUk9SOwojZW5kaWYKI2lmZGVmIFBMVUdJTl9QUk9UT0NPTF9MV1NfUkFXX1NTSEQKICBwcm9baisrXSA9IChMV1NQcm90b2NvbHMpTFdTX1BMVUdJTl9QUk9UT0NPTF9MV1NfUkFXX1NTSEQ7CiNlbmRpZgojaWZkZWYgUExVR0lOX1BST1RPQ09MX1JBV19URVNUCiAgcHJvW2orK10gPSAoTFdTUHJvdG9jb2xzKUxXU19QTFVHSU5fUFJPVE9DT0xfUkFXX1RFU1Q7CiNlbmRpZgoqLwogIGlmKHZhbHVlcykKICAgIGpzX2ZyZWUoY3R4LCB2YWx1ZXMpOwoKICByZXR1cm4gcHJvOwp9CgpzdGF0aWMgdm9pZApwcm90b2NvbHNfZnJlZShKU1J1bnRpbWUqIHJ0LCBMV1NQcm90b2NvbHMqIHBybykgewogIHNpemVfdCBpOwoKICBmb3IoaSA9IDA7IHByb1tpXS5uYW1lOyArK2kpCiAgICBwcm90b2NvbF9mcmVlKHJ0LCAmcHJvW2ldKTsKCiAganNfZnJlZV9ydChydCwgcHJvKTsKfQoKc3RhdGljIHN0cnVjdCBsd3NfaHR0cF9tb3VudCoKaHR0cF9tb3VudF9mcm9tKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqLCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgc3RydWN0IGx3c19odHRwX21vdW50KiBtbnQ7CiAgSlNWYWx1ZSB2YWx1ZTsKCiAgaWYoIShtbnQgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBsd3NfaHR0cF9tb3VudCkpKSkKICAgIHJldHVybiAwOwoKICBpZihuYW1lKSB7CiAgICBtbnQtPm1vdW50cG9pbnQgPSBqc19zdHJkdXAoY3R4LCBuYW1lKTsKICAgIG1udC0+bW91bnRwb2ludF9sZW4gPSBzdHJsZW4obmFtZSk7CiAgfQoKICBpZihKU19Jc0FycmF5KGN0eCwgb2JqKSkgewogICAgaW50IGkgPSAwOwoKICAgIGlmKCFuYW1lKSB7CiAgICAgIHZhbHVlID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBvYmosIGkrKyk7CiAgICAgIG1udC0+bW91bnRwb2ludCA9IHRvX3N0cmluZ2ZyZWUoY3R4LCB2YWx1ZSk7CiAgICAgIG1udC0+bW91bnRwb2ludF9sZW4gPSBzdHJsZW4obW50LT5tb3VudHBvaW50KTsKICAgIH0KCiAgICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCBpKyspOwogICAgbW50LT5vcmlnaW4gPSB0b19zdHJpbmdmcmVlKGN0eCwgdmFsdWUpOwoKICAgIHZhbHVlID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBvYmosIGkrKyk7CiAgICBtbnQtPmRlZiA9IHRvX3N0cmluZ2ZyZWUoY3R4LCB2YWx1ZSk7CgogICAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9iaiwgaSsrKTsKICAgIG1udC0+cHJvdG9jb2wgPSB0b19zdHJpbmdmcmVlKGN0eCwgdmFsdWUpOwoKICAgIHZhbHVlID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBvYmosIGkrKyk7CiAgICBtbnQtPmJhc2ljX2F1dGhfbG9naW5fZmlsZSA9IHRvX3N0cmluZ2ZyZWUoY3R4LCB2YWx1ZSk7CgogIH0gZWxzZSBpZihKU19Jc09iamVjdChvYmopKSB7CiAgICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAibW91bnRwb2ludCIpOwoKICAgIG1udC0+bW91bnRwb2ludCA9IHRvX3N0cmluZ2ZyZWUoY3R4LCB2YWx1ZSk7CiAgICBtbnQtPm1vdW50cG9pbnRfbGVuID0gc3RybGVuKG1udC0+bW91bnRwb2ludCk7CgogICAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm9yaWdpbiIpOwogICAgbW50LT5vcmlnaW4gPSB0b19zdHJpbmdmcmVlKGN0eCwgdmFsdWUpOwoKICAgIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJkZWYiKTsKICAgIG1udC0+ZGVmID0gdG9fc3RyaW5nZnJlZShjdHgsIHZhbHVlKTsKCiAgICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAicHJvdG9jb2wiKTsKICAgIG1udC0+cHJvdG9jb2wgPSB0b19zdHJpbmdmcmVlKGN0eCwgdmFsdWUpOwoKICAgIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJjZ2llbnYiKTsKICAgIG1udC0+Y2dpZW52ID0gdmhvc3Rfb3B0aW9uc19mcm9tZnJlZShjdHgsIHZhbHVlKTsKCiAgICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgImV4dHJhX21pbWV0eXBlcyIpOwogICAgbW50LT5leHRyYV9taW1ldHlwZXMgPSB2aG9zdF9vcHRpb25zX2Zyb21mcmVlKGN0eCwgdmFsdWUpOwoKICAgIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJpbnRlcnByZXQiKTsKICAgIG1udC0+aW50ZXJwcmV0ID0gdmhvc3Rfb3B0aW9uc19mcm9tZnJlZShjdHgsIHZhbHVlKTsKCiAgICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgImNnaV90aW1lb3V0Iik7CiAgICBtbnQtPmNnaV90aW1lb3V0ID0gdG9faW50ZWdlcmZyZWUoY3R4LCB2YWx1ZSk7CgogICAgdmFsdWUgPSBqc19nZXRfcHJvcGVydHkoY3R4LCBvYmosICJjYWNoZV9tYXhfYWdlIik7CiAgICBtbnQtPmNhY2hlX21heF9hZ2UgPSB0b19pbnRlZ2VyZnJlZShjdHgsIHZhbHVlKTsKCiAgICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgImF1dGhfbWFzayIpOwogICAgbW50LT5hdXRoX21hc2sgPSB0b19pbnRlZ2VyZnJlZShjdHgsIHZhbHVlKTsKCiAgICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgImNhY2hlX3JldXNhYmxlIik7CiAgICBtbnQtPmNhY2hlX3JldXNhYmxlID0gdG9fYm9vbGZyZWUoY3R4LCB2YWx1ZSk7CgogICAgdmFsdWUgPSBqc19nZXRfcHJvcGVydHkoY3R4LCBvYmosICJjYWNoZV9yZXZhbGlkYXRlIik7CiAgICBtbnQtPmNhY2hlX3JldmFsaWRhdGUgPSB0b19ib29sZnJlZShjdHgsIHZhbHVlKTsKCiAgICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgImNhY2hlX2ludGVybWVkaWFyaWVzIik7CiAgICBtbnQtPmNhY2hlX2ludGVybWVkaWFyaWVzID0gdG9fYm9vbGZyZWUoY3R4LCB2YWx1ZSk7CgogICAgLyp2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgImNhY2hlX25vIik7CiAgICBtbnQtPmNhY2hlX25vID0gdG9fYm9vbGZyZWUoY3R4LCB2YWx1ZSk7Ki8KCiAgICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgIm9yaWdpbl9wcm90b2NvbCIpOwogICAgbW50LT5vcmlnaW5fcHJvdG9jb2wgPSB0b19pbnRlZ2VyZnJlZShjdHgsIHZhbHVlKTsKCiAgICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgImJhc2ljX2F1dGhfbG9naW5fZmlsZSIpOwogICAgbW50LT5iYXNpY19hdXRoX2xvZ2luX2ZpbGUgPSB0b19zdHJpbmdmcmVlKGN0eCwgdmFsdWUpOwogIH0KCiAgcmV0dXJuIG1udDsKfQoKc3RhdGljIGNvbnN0IHN0cnVjdCBsd3NfaHR0cF9tb3VudCoKaHR0cF9tb3VudHNfZnJvbShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgY29uc3Qgc3RydWN0IGx3c19odHRwX21vdW50ICptbnQgPSAwLCAqKnB0ciA9ICZtbnQsICp0bXA7CgogIGlmKEpTX0lzQXJyYXkoY3R4LCB2YWx1ZSkpIHsKICAgIGludDMyX3QgbGVuID0gdG9faW50MzJmcmVlKGN0eCwgSlNfR2V0UHJvcGVydHlTdHIoY3R4LCB2YWx1ZSwgImxlbmd0aCIpKTsKCiAgICBpZihsZW4gPiAwKSB7CiAgICAgIG1udCA9IGpzX21hbGxvYyhjdHgsIHNpemVvZihzdHJ1Y3QgbHdzX2h0dHBfbW91bnQpKTsKCiAgICAgIGZvcihpbnQzMl90IGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICBKU1ZhbHVlIG1vdW50ID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCB2YWx1ZSwgaSk7CgogICAgICAgIGlmKCgqcHRyID0gdG1wID0gaHR0cF9tb3VudF9mcm9tKGN0eCwgbW91bnQsIDApKSkKICAgICAgICAgIHB0ciA9IChjb25zdCBzdHJ1Y3QgbHdzX2h0dHBfbW91bnQqKikmKCpwdHIpLT5tb3VudF9uZXh0OwoKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBtb3VudCk7CgogICAgICAgIGlmKCF0bXApCiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogIH0gZWxzZSBpZihKU19Jc09iamVjdCh2YWx1ZSkpIHsKICAgIEpTUHJvcGVydHlFbnVtKiB0bXBfdGFiID0gMDsKICAgIHVpbnQzMl90IGxlbjsKCiAgICBpZighSlNfR2V0T3duUHJvcGVydHlOYW1lcyhjdHgsICZ0bXBfdGFiLCAmbGVuLCB2YWx1ZSwgSlNfR1BOX1NUUklOR19NQVNLIHwgSlNfR1BOX1NFVF9FTlVNKSkgewogICAgICBmb3IodWludDMyX3QgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICAgIGNvbnN0IGNoYXIqIG5hbWUgPSBKU19BdG9tVG9DU3RyaW5nKGN0eCwgdG1wX3RhYltpXS5hdG9tKTsKICAgICAgICBKU1ZhbHVlIG1vdW50ID0gSlNfR2V0UHJvcGVydHkoY3R4LCB2YWx1ZSwgdG1wX3RhYltpXS5hdG9tKTsKCiAgICAgICAgaWYoKCpwdHIgPSB0bXAgPSBodHRwX21vdW50X2Zyb20oY3R4LCBtb3VudCwgbmFtZSkpKQogICAgICAgICAgcHRyID0gKGNvbnN0IHN0cnVjdCBsd3NfaHR0cF9tb3VudCoqKSYoKnB0ciktPm1vdW50X25leHQ7CgogICAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbmFtZSk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgbW91bnQpOwoKICAgICAgICBpZighdG1wKQogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBtbnQ7Cn0KCnN0YXRpYyB2b2lkCmh0dHBfbW91bnRzX2ZyZWUoSlNSdW50aW1lKiBydCwgc3RydWN0IGx3c19odHRwX21vdW50KiBtbnQpIHsKICBmb3IoOyBtbnQ7IG1udCA9IChzdHJ1Y3QgbHdzX2h0dHBfbW91bnQqKW1udC0+bW91bnRfbmV4dCkgewogICAgaWYobW50LT5tb3VudHBvaW50KSB7CiAgICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiltbnQtPm1vdW50cG9pbnQpOwogICAgICBtbnQtPm1vdW50cG9pbnQgPSAwOwogICAgfQoKICAgIGlmKG1udC0+b3JpZ2luKSB7CiAgICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiltbnQtPm9yaWdpbik7CiAgICAgIG1udC0+b3JpZ2luID0gMDsKICAgIH0KCiAgICBpZihtbnQtPmRlZikgewogICAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopbW50LT5kZWYpOwogICAgICBtbnQtPmRlZiA9IDA7CiAgICB9CgogICAgaWYobW50LT5wcm90b2NvbCkgewogICAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopbW50LT5wcm90b2NvbCk7CiAgICAgIG1udC0+cHJvdG9jb2wgPSAwOwogICAgfQoKICAgIGlmKG1udC0+Y2dpZW52KSB7CiAgICAgIHZob3N0X29wdGlvbnNfZnJlZShydCwgKHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyopbW50LT5jZ2llbnYpOwogICAgICBtbnQtPmNnaWVudiA9IDA7CiAgICB9CgogICAgaWYobW50LT5leHRyYV9taW1ldHlwZXMpIHsKICAgICAgdmhvc3Rfb3B0aW9uc19mcmVlKHJ0LCAoc3RydWN0IGx3c19wcm90b2NvbF92aG9zdF9vcHRpb25zKiltbnQtPmV4dHJhX21pbWV0eXBlcyk7CiAgICAgIG1udC0+ZXh0cmFfbWltZXR5cGVzID0gMDsKICAgIH0KCiAgICBpZihtbnQtPmludGVycHJldCkgewogICAgICB2aG9zdF9vcHRpb25zX2ZyZWUocnQsIChzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMqKW1udC0+aW50ZXJwcmV0KTsKICAgICAgbW50LT5pbnRlcnByZXQgPSAwOwogICAgfQoKICAgIGlmKG1udC0+YmFzaWNfYXV0aF9sb2dpbl9maWxlKSB7CiAgICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiltbnQtPmJhc2ljX2F1dGhfbG9naW5fZmlsZSk7CiAgICAgIG1udC0+YmFzaWNfYXV0aF9sb2dpbl9maWxlID0gMDsKICAgIH0KICB9Cn0KCnN0YXRpYyBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMqCnZob3N0X29wdGlvbl9mcm9tKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3Qgb2JqKSB7CiAgc3RydWN0IGx3c19wcm90b2NvbF92aG9zdF9vcHRpb25zKiB2aG87CiAgSlNWYWx1ZSBuYW1lID0gSlNfVU5ERUZJTkVELCB2YWx1ZSA9IEpTX1VOREVGSU5FRCwgb3B0aW9ucyA9IEpTX1VOREVGSU5FRCwgbmV4dCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoSlNfSXNBcnJheShjdHgsIG9iaikpIHsKICAgIG5hbWUgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9iaiwgMCk7CiAgICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgb2JqLCAxKTsKICAgIG9wdGlvbnMgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIG9iaiwgMik7CiAgfSBlbHNlIGlmKEpTX0lzT2JqZWN0KG9iaikpIHsKICAgIG5hbWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm5hbWUiKTsKICAgIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJ2YWx1ZSIpOwogICAgb3B0aW9ucyA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAib3B0aW9ucyIpOwoKICAgIGlmKGpzX2hhc19wcm9wZXJ0eShjdHgsIG9iaiwgIm5leHQiKSkKICAgICAgbmV4dCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAibmV4dCIpOwogIH0KCiAgaWYoKHZobyA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2Yoc3RydWN0IGx3c19wcm90b2NvbF92aG9zdF9vcHRpb25zKSkpKSB7CiAgICB2aG8tPm5hbWUgPSB0b19zdHJpbmcoY3R4LCBuYW1lKTsKICAgIHZoby0+dmFsdWUgPSB0b19zdHJpbmcoY3R4LCB2YWx1ZSk7CiAgICB2aG8tPm9wdGlvbnMgPSB2aG9zdF9vcHRpb25zX2Zyb20oY3R4LCBvcHRpb25zKTsKICAgIHZoby0+bmV4dCA9IEpTX0lzT2JqZWN0KG5leHQpID8gdmhvc3Rfb3B0aW9uX2Zyb20oY3R4LCBuZXh0KSA6IE5VTEw7CiAgfQoKICBKU19GcmVlVmFsdWUoY3R4LCBuYW1lKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb3B0aW9ucyk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgbmV4dCk7CiAgcmV0dXJuIHZobzsKfQoKc3RhdGljIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyoKdmhvc3Rfb3B0aW9uc19mcm9tKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsdWUpIHsKICBzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMgKnZobyA9IDAsICoqcHRyID0gJnZobywgKnRtcDsKICBKU1ZhbHVlIGZpcnN0ID0gSlNfVU5ERUZJTkVEOwoKICBpZihKU19Jc0FycmF5KGN0eCwgdmFsdWUpICYmICgoZmlyc3QgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHZhbHVlLCAwKSksIEpTX0lzT2JqZWN0KGZpcnN0KSkpIHsKICAgIGludDMyX3QgbGVuID0gdG9faW50MzJmcmVlKGN0eCwgSlNfR2V0UHJvcGVydHlTdHIoY3R4LCB2YWx1ZSwgImxlbmd0aCIpKTsKCiAgICBpZihsZW4gPiAwKSB7CiAgICAgIGZvcihpbnQzMl90IGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICBKU1ZhbHVlIG9wdGlvbiA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgdmFsdWUsIGkpOwoKICAgICAgICBpZigoKnB0ciA9IHRtcCA9IHZob3N0X29wdGlvbl9mcm9tKGN0eCwgb3B0aW9uKSkpIHsKICAgICAgICAgIGRvCiAgICAgICAgICAgIHB0ciA9IChzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMqKikmKCpwdHIpLT5uZXh0OwogICAgICAgICAgd2hpbGUoKnB0cik7CiAgICAgICAgfQoKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCBvcHRpb24pOwoKICAgICAgICBpZighdG1wKQogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICB9IGVsc2UgaWYoSlNfSXNPYmplY3QodmFsdWUpKSB7CiAgICB2aG8gPSB2aG9zdF9vcHRpb25fZnJvbShjdHgsIHZhbHVlKTsKICB9CgogIEpTX0ZyZWVWYWx1ZShjdHgsIGZpcnN0KTsKCiAgcmV0dXJuIHZobzsKfQoKc3RhdGljIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyoKdmhvc3Rfb3B0aW9uc19mcm9tZnJlZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSB2YWx1ZSkgewogIHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyogdmhvID0gdmhvc3Rfb3B0aW9uc19mcm9tKGN0eCwgdmFsdWUpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbHVlKTsKICByZXR1cm4gdmhvOwp9CgpzdGF0aWMgdm9pZAp2aG9zdF9vcHRpb25zX2ZyZWUoSlNSdW50aW1lKiBydCwgc3RydWN0IGx3c19wcm90b2NvbF92aG9zdF9vcHRpb25zKiB2aG8pIHsKICBkbyB7CiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopdmhvLT5uYW1lKTsKICAgIHZoby0+bmFtZSA9IDA7CgogICAganNfZnJlZV9ydChydCwgKGNoYXIqKXZoby0+dmFsdWUpOwogICAgdmhvLT52YWx1ZSA9IDA7CgogICAgdmhvc3Rfb3B0aW9uc19mcmVlKHJ0LCAoc3RydWN0IGx3c19wcm90b2NvbF92aG9zdF9vcHRpb25zKil2aG8tPm9wdGlvbnMpOwogICAgdmhvLT5vcHRpb25zID0gMDsKCiAgfSB3aGlsZSgodmhvID0gKHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyopdmhvLT5uZXh0KSk7Cn0KCnN0YXRpYyB2b2lkCmNsaWVudF9jb25uZWN0X2luZm9fZnJvbW9iaihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG9iaiwgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvKiBjaSkgewogIEpTVmFsdWUgdmFsdWU7CgogIGlmKGpzX2hhc19wcm9wZXJ0eShjdHgsIG9iaiwgImNvbnRleHQiKSkgewogICAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgImNvbnRleHQiKTsKICAgIGNpLT5jb250ZXh0ID0gbHdzX2NvbnRleHRfZGF0YSh2YWx1ZSk7CiAgICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CiAgfQoKICBzdHJfcHJvcGVydHkoJmNpLT5hZGRyZXNzLCBjdHgsIG9iaiwgImFkZHJlc3MiKTsKCiAgaWYoanNfaGFzX3Byb3BlcnR5KGN0eCwgb2JqLCAicG9ydCIpKQogICAgY2ktPnBvcnQgPSB0b19pbnRlZ2VyZnJlZShjdHgsIGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgInBvcnQiKSk7CgogIGlmKGpzX2hhc19wcm9wZXJ0eShjdHgsIG9iaiwgInNzbF9jb25uZWN0aW9uIikpCiAgICBjaS0+c3NsX2Nvbm5lY3Rpb24gfD0gdG9faW50ZWdlcmZyZWUoY3R4LCBqc19nZXRfcHJvcGVydHkoY3R4LCBvYmosICJzc2xfY29ubmVjdGlvbiIpKTsKCiAgaWYoanNfaGFzX3Byb3BlcnR5KGN0eCwgb2JqLCAic3NsIikpIHsKICAgIHZhbHVlID0ganNfZ2V0X3Byb3BlcnR5KGN0eCwgb2JqLCAic3NsIik7CiAgICBjaS0+c3NsX2Nvbm5lY3Rpb24gfD0gIUpTX0lzTnVtYmVyKHZhbHVlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IChKU19Ub0Jvb2woY3R4LCB2YWx1ZSkgPyBMQ0NTQ0ZfVVNFX1NTTCB8IExDQ1NDRl9BTExPV19TRUxGU0lHTkVEIHwgTENDU0NGX0FMTE9XX0lOU0VDVVJFIHwgTENDU0NGX0FMTE9XX0VYUElSRUQgfCBMQ0NTQ0ZfU0tJUF9TRVJWRVJfQ0VSVF9IT1NUTkFNRV9DSEVDSyA6IDApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdG9fdWludDMyKGN0eCwgdmFsdWUpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwogIH0KCiAgc3RyX3Byb3BlcnR5KCZjaS0+cGF0aCwgY3R4LCBvYmosICJwYXRoIik7CiAgc3RyX3Byb3BlcnR5KCZjaS0+aG9zdCwgY3R4LCBvYmosICJob3N0Iik7CiAgc3RyX3Byb3BlcnR5KCZjaS0+b3JpZ2luLCBjdHgsIG9iaiwgIm9yaWdpbiIpOwogIHN0cl9wcm9wZXJ0eSgmY2ktPnByb3RvY29sLCBjdHgsIG9iaiwgInByb3RvY29sIik7CiAgc3RyX3Byb3BlcnR5KCZjaS0+bWV0aG9kLCBjdHgsIG9iaiwgIm1ldGhvZCIpOwogIHN0cl9wcm9wZXJ0eSgmY2ktPmlmYWNlLCBjdHgsIG9iaiwgImlmYWNlIik7CgogIGlmKGpzX2hhc19wcm9wZXJ0eShjdHgsIG9iaiwgImxvY2FsX3BvcnQiKSkKICAgIGNpLT5sb2NhbF9wb3J0ID0gdG9faW50ZWdlcmZyZWUoY3R4LCBqc19nZXRfcHJvcGVydHkoY3R4LCBvYmosICJsb2NhbF9wb3J0IikpOwoKICBzdHJfcHJvcGVydHkoJmNpLT5sb2NhbF9wcm90b2NvbF9uYW1lLCBjdHgsIG9iaiwgImxvY2FsX3Byb3RvY29sX25hbWUiKTsKICBzdHJfcHJvcGVydHkoJmNpLT5hbHBuLCBjdHgsIG9iaiwgImFscG4iKTsKCiAgaWYoanNfaGFzX3Byb3BlcnR5KGN0eCwgb2JqLCAia2VlcF93YXJtX3NlY3MiKSkKICAgIGNpLT5rZWVwX3dhcm1fc2VjcyA9IHRvX2ludGVnZXJmcmVlKGN0eCwganNfZ2V0X3Byb3BlcnR5KGN0eCwgb2JqLCAia2VlcF93YXJtX3NlY3MiKSk7CgogIHN0cl9wcm9wZXJ0eSgmY2ktPmF1dGhfdXNlcm5hbWUsIGN0eCwgb2JqLCAiYXV0aF91c2VybmFtZSIpOwogIHN0cl9wcm9wZXJ0eSgmY2ktPmF1dGhfcGFzc3dvcmQsIGN0eCwgb2JqLCAiYXV0aF9wYXNzd29yZCIpOwp9CgpzdGF0aWMgdm9pZApjbGllbnRfY29ubmVjdF9pbmZvX2ZyZWUoSlNSdW50aW1lKiBydCwgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvKiBjaSkgewogIGlmKGNpLT5hZGRyZXNzKQogICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5hZGRyZXNzKTsKICBpZihjaS0+cGF0aCkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+cGF0aCk7CiAgaWYoY2ktPmhvc3QpCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPmhvc3QpOwogIGlmKGNpLT5vcmlnaW4pCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPm9yaWdpbik7CiAgaWYoY2ktPnByb3RvY29sKQogICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5wcm90b2NvbCk7CiAgaWYoY2ktPm1ldGhvZCkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+bWV0aG9kKTsKICBpZihjaS0+aWZhY2UpCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPmlmYWNlKTsKICBpZihjaS0+bG9jYWxfcHJvdG9jb2xfbmFtZSkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+bG9jYWxfcHJvdG9jb2xfbmFtZSk7CiAgaWYoY2ktPmFscG4pCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPmFscG4pOwogIGlmKGNpLT5hdXRoX3VzZXJuYW1lKQogICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5hdXRoX3VzZXJuYW1lKTsKICBpZihjaS0+YXV0aF9wYXNzd29yZCkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+YXV0aF9wYXNzd29yZCk7Cn0KCnZvaWQKY29udGV4dF9jcmVhdGlvbl9pbmZvX2Zyb21vYmooSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvYmosIHN0cnVjdCBsd3NfY29udGV4dF9jcmVhdGlvbl9pbmZvKiBjaSkgewogIEpTVmFsdWUgdmFsdWU7CgogIHN0cl9wcm9wZXJ0eSgmY2ktPmlmYWNlLCBjdHgsIG9iaiwgImlmYWNlIik7CiAgc3RyX3Byb3BlcnR5KCZjaS0+dmhvc3RfbmFtZSwgY3R4LCBvYmosICJ2aG9zdF9uYW1lIik7CgogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJwcm90b2NvbHMiKTsKICBjaS0+cHJvdG9jb2xzID0gcHJvdG9jb2xzX2Zyb21hcnJheShjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgojaWZkZWYgTFdTX1JPTEVfV1MKICBzdHJ1Y3QgbHdzX2V4dGVuc2lvbiogZXh0czsKCiAgaWYoKGV4dHMgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKHN0cnVjdCBsd3NfZXh0ZW5zaW9uKSAqIDIpKSkKICAgIGV4dHNbMF0gPSAoc3RydWN0IGx3c19leHRlbnNpb24pewogICAgICAgICJwZXJtZXNzYWdlLWRlZmxhdGUiLAogICAgICAgIGx3c19leHRlbnNpb25fY2FsbGJhY2tfcG1fZGVmbGF0ZSwKICAgICAgICAicGVybWVzc2FnZS1kZWZsYXRlOyBjbGllbnRfbm9fY29udGV4dF90YWtlb3ZlcjsgY2xpZW50X21heF93aW5kb3dfYml0cyIsCiAgICB9OwoKICBjaS0+ZXh0ZW5zaW9ucyA9IGV4dHM7CiNlbmRpZgoKI2lmIGRlZmluZWQoTFdTX1JPTEVfSDEpIHx8IGRlZmluZWQoTFdTX1JPTEVfSDIpCiAgc3RyX3Byb3BlcnR5KCZjaS0+aHR0cF9wcm94eV9hZGRyZXNzLCBjdHgsIG9iaiwgImh0dHBfcHJveHlfYWRkcmVzcyIpOwoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAiaGVhZGVycyIpOwogIGNpLT5oZWFkZXJzID0gdmhvc3Rfb3B0aW9uc19mcm9tZnJlZShjdHgsIHZhbHVlKTsKCiAgdmFsdWUgPSBqc19nZXRfcHJvcGVydHkoY3R4LCBvYmosICJyZWplY3Rfc2VydmljZV9rZXl3b3JkcyIpOwogIGNpLT5yZWplY3Rfc2VydmljZV9rZXl3b3JkcyA9IHZob3N0X29wdGlvbnNfZnJvbShjdHgsIHZhbHVlKTsKICBKU19GcmVlVmFsdWUoY3R4LCB2YWx1ZSk7CgogIHZhbHVlID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBvYmosICJwdm8iKTsKICBjaS0+cHZvID0gdmhvc3Rfb3B0aW9uc19mcm9tZnJlZShjdHgsIHZhbHVlKTsKCiAgc3RyX3Byb3BlcnR5KCZjaS0+bG9nX2ZpbGVwYXRoLCBjdHgsIG9iaiwgImxvZ19maWxlcGF0aCIpOwoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAibW91bnRzIik7CiAgY2ktPm1vdW50cyA9IGh0dHBfbW91bnRzX2Zyb20oY3R4LCB2YWx1ZSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsdWUpOwoKICBzdHJfcHJvcGVydHkoJmNpLT5zZXJ2ZXJfc3RyaW5nLCBjdHgsIG9iaiwgInNlcnZlcl9zdHJpbmciKTsKCiAgc3RyX3Byb3BlcnR5KCZjaS0+ZXJyb3JfZG9jdW1lbnRfNDA0LCBjdHgsIG9iaiwgImVycm9yX2RvY3VtZW50XzQwNCIpOwoKICB2YWx1ZSA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb2JqLCAicG9ydCIpOwogIGNpLT5wb3J0ID0gdG9faW50ZWdlcmZyZWUoY3R4LCB2YWx1ZSk7CgogIHZhbHVlID0ganNfZ2V0X3Byb3BlcnR5KGN0eCwgb2JqLCAiaHR0cF9wcm94eV9wb3J0Iik7CiAgY2ktPmh0dHBfcHJveHlfcG9ydCA9IHRvX2ludGVnZXJmcmVlKGN0eCwgdmFsdWUpOwoKICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgImtlZXBhbGl2ZV90aW1lb3V0Iik7CiAgY2ktPmtlZXBhbGl2ZV90aW1lb3V0ID0gdG9faW50ZWdlcmZyZWUoY3R4LCB2YWx1ZSk7CiNlbmRpZgoKI2lmZGVmIExXU19XSVRIX1NZU19BU1lOQ19ETlMKICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgImFzeW5jX2Ruc19zZXJ2ZXJzIik7CiAgY2ktPmFzeW5jX2Ruc19zZXJ2ZXJzID0gKGNvbnN0IGNoYXIqKil0b19zdHJpbmdhcnJheWZyZWUoY3R4LCB2YWx1ZSk7CiNlbmRpZgoKI2lmZGVmIExXU19XSVRIX1RMUwogIHN0cl9wcm9wZXJ0eSgmY2ktPnNzbF9wcml2YXRlX2tleV9wYXNzd29yZCwgY3R4LCBvYmosICJzc2xfcHJpdmF0ZV9rZXlfcGFzc3dvcmQiKTsKCiAgc3RyX29yX2J1Zl9wcm9wZXJ0eSgmY2ktPnNzbF9jZXJ0X2ZpbGVwYXRoLCAmY2ktPnNlcnZlcl9zc2xfY2VydF9tZW0sICZjaS0+c2VydmVyX3NzbF9jZXJ0X21lbV9sZW4sIGN0eCwgb2JqLCAic2VydmVyX3NzbF9jZXJ0Iik7CiAgc3RyX29yX2J1Zl9wcm9wZXJ0eSgmY2ktPnNzbF9wcml2YXRlX2tleV9maWxlcGF0aCwgJmNpLT5zZXJ2ZXJfc3NsX3ByaXZhdGVfa2V5X21lbSwgJmNpLT5zZXJ2ZXJfc3NsX3ByaXZhdGVfa2V5X21lbV9sZW4sIGN0eCwgb2JqLCAic2VydmVyX3NzbF9wcml2YXRlX2tleSIpOwogIHN0cl9vcl9idWZfcHJvcGVydHkoJmNpLT5zc2xfY2FfZmlsZXBhdGgsICZjaS0+c2VydmVyX3NzbF9jYV9tZW0sICZjaS0+c2VydmVyX3NzbF9jYV9tZW1fbGVuLCBjdHgsIG9iaiwgInNlcnZlcl9zc2xfY2EiKTsKCiAgc3RyX3Byb3BlcnR5KCZjaS0+c3NsX2NpcGhlcl9saXN0LCBjdHgsIG9iaiwgInNzbF9jaXBoZXJfbGlzdCIpOwogIHN0cl9wcm9wZXJ0eSgmY2ktPnRsczFfM19wbHVzX2NpcGhlcl9saXN0LCBjdHgsIG9iaiwgInRsczFfM19wbHVzX2NpcGhlcl9saXN0Iik7CiAgc3RyX3Byb3BlcnR5KCZjaS0+Y2xpZW50X3NzbF9wcml2YXRlX2tleV9wYXNzd29yZCwgY3R4LCBvYmosICJjbGllbnRfc3NsX3ByaXZhdGVfa2V5X3Bhc3N3b3JkIik7CgogIHN0cl9vcl9idWZfcHJvcGVydHkoJmNpLT5jbGllbnRfc3NsX2NlcnRfZmlsZXBhdGgsICZjaS0+Y2xpZW50X3NzbF9jZXJ0X21lbSwgJmNpLT5jbGllbnRfc3NsX2NlcnRfbWVtX2xlbiwgY3R4LCBvYmosICJjbGllbnRfc3NsX2NlcnQiKTsKICBzdHJfb3JfYnVmX3Byb3BlcnR5KCZjaS0+Y2xpZW50X3NzbF9wcml2YXRlX2tleV9maWxlcGF0aCwgJmNpLT5jbGllbnRfc3NsX2tleV9tZW0sICZjaS0+Y2xpZW50X3NzbF9rZXlfbWVtX2xlbiwgY3R4LCBvYmosICJjbGllbnRfc3NsX3ByaXZhdGVfa2V5Iik7CiAgc3RyX29yX2J1Zl9wcm9wZXJ0eSgmY2ktPmNsaWVudF9zc2xfY2FfZmlsZXBhdGgsICZjaS0+Y2xpZW50X3NzbF9jYV9tZW0sICZjaS0+Y2xpZW50X3NzbF9jYV9tZW1fbGVuLCBjdHgsIG9iaiwgImNsaWVudF9zc2xfY2EiKTsKCiAgc3RyX3Byb3BlcnR5KCZjaS0+Y2xpZW50X3NzbF9jaXBoZXJfbGlzdCwgY3R4LCBvYmosICJjbGllbnRfc3NsX2NpcGhlcl9saXN0Iik7CiAgc3RyX3Byb3BlcnR5KCZjaS0+Y2xpZW50X3Rsc18xXzNfcGx1c19jaXBoZXJfbGlzdCwgY3R4LCBvYmosICJjbGllbnRfdGxzXzFfM19wbHVzX2NpcGhlcl9saXN0Iik7CiNlbmRpZgoKI2lmZGVmIExXU19XSVRIX1NPQ0tTNQogIHN0cl9wcm9wZXJ0eSgmY2ktPnNvY2tzX3Byb3h5X2FkZHJlc3MsIGN0eCwgb2JqLCAic29ja3NfcHJveHlfYWRkcmVzcyIpOwoKICB2YWx1ZSA9IGpzX2dldF9wcm9wZXJ0eShjdHgsIG9iaiwgInNvY2tzX3Byb3h5X3BvcnQiKTsKICBjaS0+c29ja3NfcHJveHlfcG9ydCA9IHRvX2ludGVnZXJmcmVlKGN0eCwgdmFsdWUpOwojZW5kaWYKCiAgdmFsdWUgPSBqc19nZXRfcHJvcGVydHkoY3R4LCBvYmosICJkZWZhdWx0X2xvZ2xldmVsIik7CiAgY2ktPmRlZmF1bHRfbG9nbGV2ZWwgPSB0b19pbnRlZ2VyZnJlZShjdHgsIHZhbHVlKTsKCiAgdmFsdWUgPSBqc19nZXRfcHJvcGVydHkoY3R4LCBvYmosICJ2aF9saXN0ZW5fc29ja2ZkIik7CiAgY2ktPnZoX2xpc3Rlbl9zb2NrZmQgPSB0b19pbnRlZ2VyZnJlZShjdHgsIHZhbHVlKTsKCiAgdmFsdWUgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG9iaiwgIm9wdGlvbnMiKTsKICBjaS0+b3B0aW9ucyA9IHRvX2ludGVnZXJmcmVlKGN0eCwgdmFsdWUpOwoKICBpZihjaS0+b3B0aW9ucyAmIExXU19TRVJWRVJfT1BUSU9OX0ZBTExCQUNLX1RPX0FQUExZX0xJU1RFTl9BQ0NFUFRfQ09ORklHKSB7CiAgICBzdHJfcHJvcGVydHkoJmNpLT5saXN0ZW5fYWNjZXB0X3JvbGUsIGN0eCwgb2JqLCAibGlzdGVuX2FjY2VwdF9yb2xlIik7CgogICAgc3RyX3Byb3BlcnR5KCZjaS0+bGlzdGVuX2FjY2VwdF9wcm90b2NvbCwgY3R4LCBvYmosICJsaXN0ZW5fYWNjZXB0X3Byb3RvY29sIik7CiAgfQp9Cgp2b2lkCmNvbnRleHRfY3JlYXRpb25faW5mb19mcmVlKEpTUnVudGltZSogcnQsIHN0cnVjdCBsd3NfY29udGV4dF9jcmVhdGlvbl9pbmZvKiBjaSkgewogIGlmKGNpLT5pZmFjZSkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+aWZhY2UpOwoKICBpZihjaS0+cHJvdG9jb2xzKQogICAgcHJvdG9jb2xzX2ZyZWUocnQsIChMV1NQcm90b2NvbHMqKWNpLT5wcm90b2NvbHMpOwoKICBpZihjaS0+aHR0cF9wcm94eV9hZGRyZXNzKQogICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5odHRwX3Byb3h5X2FkZHJlc3MpOwoKICBpZihjaS0+aGVhZGVycykKICAgIHZob3N0X29wdGlvbnNfZnJlZShydCwgKHN0cnVjdCBsd3NfcHJvdG9jb2xfdmhvc3Rfb3B0aW9ucyopY2ktPmhlYWRlcnMpOwoKICBpZihjaS0+cmVqZWN0X3NlcnZpY2Vfa2V5d29yZHMpCiAgICB2aG9zdF9vcHRpb25zX2ZyZWUocnQsIChzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMqKWNpLT5yZWplY3Rfc2VydmljZV9rZXl3b3Jkcyk7CgogIGlmKGNpLT5wdm8pCiAgICB2aG9zdF9vcHRpb25zX2ZyZWUocnQsIChzdHJ1Y3QgbHdzX3Byb3RvY29sX3Zob3N0X29wdGlvbnMqKWNpLT5wdm8pOwoKICBpZihjaS0+bG9nX2ZpbGVwYXRoKQogICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5sb2dfZmlsZXBhdGgpOwoKICBpZihjaS0+bW91bnRzKQogICAgaHR0cF9tb3VudHNfZnJlZShydCwgKHN0cnVjdCBsd3NfaHR0cF9tb3VudCopY2ktPm1vdW50cyk7CgogIGlmKGNpLT5zZXJ2ZXJfc3RyaW5nKQogICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5zZXJ2ZXJfc3RyaW5nKTsKCiAgaWYoY2ktPmVycm9yX2RvY3VtZW50XzQwNCkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+ZXJyb3JfZG9jdW1lbnRfNDA0KTsKCiNpZmRlZiBMV1NfV0lUSF9TWVNfQVNZTkNfRE5TCiAgaWYoY2ktPmFzeW5jX2Ruc19zZXJ2ZXJzKSB7CiAgICBmb3Ioc2l6ZV90IGkgPSAwOyBjaS0+YXN5bmNfZG5zX3NlcnZlcnNbaV07ICsraSkKICAgICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5hc3luY19kbnNfc2VydmVyc1tpXSk7CiAgICBqc19mcmVlX3J0KHJ0LCBjaS0+YXN5bmNfZG5zX3NlcnZlcnMpOwogIH0KI2VuZGlmCgojaWZkZWYgTFdTX1dJVEhfVExTCiAgaWYoY2ktPnNzbF9wcml2YXRlX2tleV9wYXNzd29yZCkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+c3NsX3ByaXZhdGVfa2V5X3Bhc3N3b3JkKTsKCiAgaWYoY2ktPnNzbF9jZXJ0X2ZpbGVwYXRoKQogICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5zc2xfY2VydF9maWxlcGF0aCk7CgogIGlmKGNpLT5zc2xfcHJpdmF0ZV9rZXlfZmlsZXBhdGgpCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPnNzbF9wcml2YXRlX2tleV9maWxlcGF0aCk7CgogIGlmKGNpLT5zc2xfY2FfZmlsZXBhdGgpCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPnNzbF9jYV9maWxlcGF0aCk7CgogIGlmKGNpLT5zc2xfY2lwaGVyX2xpc3QpCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPnNzbF9jaXBoZXJfbGlzdCk7CgogIGlmKGNpLT50bHMxXzNfcGx1c19jaXBoZXJfbGlzdCkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+dGxzMV8zX3BsdXNfY2lwaGVyX2xpc3QpOwoKICBpZihjaS0+Y2xpZW50X3NzbF9wcml2YXRlX2tleV9wYXNzd29yZCkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+Y2xpZW50X3NzbF9wcml2YXRlX2tleV9wYXNzd29yZCk7CgogIGlmKGNpLT5jbGllbnRfc3NsX2NlcnRfZmlsZXBhdGgpCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPmNsaWVudF9zc2xfY2VydF9maWxlcGF0aCk7CgogIGlmKGNpLT5jbGllbnRfc3NsX3ByaXZhdGVfa2V5X2ZpbGVwYXRoKQogICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5jbGllbnRfc3NsX3ByaXZhdGVfa2V5X2ZpbGVwYXRoKTsKCiAgaWYoY2ktPmNsaWVudF9zc2xfY2FfZmlsZXBhdGgpCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPmNsaWVudF9zc2xfY2FfZmlsZXBhdGgpOwoKICBpZihjaS0+Y2xpZW50X3NzbF9jaXBoZXJfbGlzdCkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+Y2xpZW50X3NzbF9jaXBoZXJfbGlzdCk7CgogIGlmKGNpLT5jbGllbnRfdGxzXzFfM19wbHVzX2NpcGhlcl9saXN0KQogICAganNfZnJlZV9ydChydCwgKGNoYXIqKWNpLT5jbGllbnRfdGxzXzFfM19wbHVzX2NpcGhlcl9saXN0KTsKI2VuZGlmCgojaWZkZWYgTFdTX1dJVEhfU09DS1M1CiAgaWYoY2ktPnNvY2tzX3Byb3h5X2FkZHJlc3MpCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPnNvY2tzX3Byb3h5X2FkZHJlc3MpOwojZW5kaWYKCiAgaWYoY2ktPmxpc3Rlbl9hY2NlcHRfcm9sZSkKICAgIGpzX2ZyZWVfcnQocnQsIChjaGFyKiljaS0+bGlzdGVuX2FjY2VwdF9yb2xlKTsKCiAgaWYoY2ktPmxpc3Rlbl9hY2NlcHRfcHJvdG9jb2wpCiAgICBqc19mcmVlX3J0KHJ0LCAoY2hhciopY2ktPmxpc3Rlbl9hY2NlcHRfcHJvdG9jb2wpOwp9CgpzdGF0aWMgTFdTQ29udGV4dCoKY29udGV4dF9uZXcoSlNDb250ZXh0KiBjdHgpIHsKICBMV1NDb250ZXh0KiBsYzsKCiAgaWYoKGxjID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihMV1NDb250ZXh0KSkpKQogICAgaW5pdF9saXN0X2hlYWQoJmxjLT5oYW5kbGVycyk7CgogIHJldHVybiBsYzsKfQoKc3RhdGljIHZvaWQKY29udGV4dF9mcmVlKEpTUnVudGltZSogcnQsIExXU0NvbnRleHQqIGxjKSB7CiAgaWYobGMtPmpzKSB7CiAgICBKU19GcmVlQ29udGV4dChsYy0+anMpOwogICAgbGMtPmpzID0gTlVMTDsKICB9CgogIGlmKGxjLT5pbmZvLnVzZXIpIHsKICAgIG9ial9mcmVlKHJ0LCBsYy0+aW5mby51c2VyKTsKICAgIGxjLT5pbmZvLnVzZXIgPSBOVUxMOwogIH0KCiAgaWYobGMtPmN0eCkgewogICAgbHdzX2NvbnRleHRfZGVzdHJveShsYy0+Y3R4KTsKICAgIGxjLT5jdHggPSBOVUxMOwogIH0KCiAgY29udGV4dF9jcmVhdGlvbl9pbmZvX2ZyZWUocnQsICZsYy0+aW5mbyk7CgogIGpzX2ZyZWVfcnQocnQsIGxjKTsKfQoKc3RhdGljIEpTVmFsdWUKbHdzanNfY29udGV4dF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgTFdTQ29udGV4dCogbGM7CgogIGlmKCEobGMgPSBjb250ZXh0X25ldyhjdHgpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIEpTVmFsdWUgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBwcm90byA9IEpTX0R1cFZhbHVlKGN0eCwgbHdzanNfY29udGV4dF9wcm90byk7CgogIEpTVmFsdWUgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBsd3Nqc19jb250ZXh0X2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKCiAgaWYoSlNfSXNPYmplY3QoYXJndlswXSkpCiAgICBjb250ZXh0X2NyZWF0aW9uX2luZm9fZnJvbW9iaihjdHgsIGFyZ3ZbMF0sICZsYy0+aW5mbyk7CgogIEpTX1NldE9wYXF1ZShvYmosIGxjKTsKCiAgbGMtPmpzID0gSlNfRHVwQ29udGV4dChjdHgpOwogIGxjLT5pbmZvLnVzZXIgPSBvYmpfcHRyKGN0eCwgb2JqKTsKCiAgaWYoIWpzX2hhc19wcm9wZXJ0eShjdHgsIGFyZ3ZbMF0sICJwb3J0IikpCiAgICBsYy0+aW5mby5wb3J0ID0gQ09OVEVYVF9QT1JUX05PX0xJU1RFTjsKCiAgLyogVGhpcyBtdXN0IGJlIGNhbGxlZCBsYXN0LCBiZWNhdXNlIGl0IGNhbiB0cmlnZ2VyIGNhbGxiYWNrcyBhbHJlYWR5ICovCiAgbGMtPmN0eCA9IGx3c19jcmVhdGVfY29udGV4dCgmbGMtPmluZm8pOwoKICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAiaW5mbyIsIEpTX0R1cFZhbHVlKGN0eCwgYXJndlswXSksIEpTX1BST1BfQ09ORklHVVJBQkxFKTsKCiAgcmV0dXJuIG9iajsKCmZhaWw6CiAganNfZnJlZShjdHgsIGxjKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCmVudW0gewogIERFU1RST1ksCiAgR0VUX1ZIT1NUX0JZX05BTUUsCiAgQURPUFRfU09DS0VULAogIEFET1BUX1NPQ0tFVF9SRUFEQlVGLAogIENBTkNFTF9TRVJWSUNFLAogIENMSUVOVF9DT05ORUNULAogIEdFVF9SQU5ET00sCiAgQVNZTkNfRE5TX1NFUlZFUl9BREQsCiAgQVNZTkNfRE5TX1NFUlZFUl9SRU1PVkUsCiAgV1NJX0ZST01fRkQsCn07CgpzdGF0aWMgSlNWYWx1ZQpsd3Nqc19jb250ZXh0X21ldGhvZHMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIExXU0NvbnRleHQqIGxjOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZighKGxjID0gbHdzanNfY29udGV4dF9kYXRhMihjdHgsIHRoaXNfdmFsKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgREVTVFJPWTogewogICAgICBpZihsYy0+Y3R4KSB7CiAgICAgICAgbHdzX2NvbnRleHRfZGVzdHJveShsYy0+Y3R4KTsKICAgICAgICBsYy0+Y3R4ID0gTlVMTDsKICAgICAgICByZXQgPSBKU19UUlVFOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIEdFVF9WSE9TVF9CWV9OQU1FOiB7CiAgICAgIGNvbnN0IGNoYXIqIG5hbWU7CgogICAgICBpZigobmFtZSA9IEpTX1RvQ1N0cmluZyhjdHgsIGFyZ3ZbMF0pKSkgewogICAgICAgIHN0cnVjdCBsd3Nfdmhvc3QqIHZobzsKCiAgICAgICAgaWYoKHZobyA9IGx3c19nZXRfdmhvc3RfYnlfbmFtZShsYy0+Y3R4LCBuYW1lKSkpCiAgICAgICAgICByZXQgPSBwdHJfb2JqKGN0eCwgbHdzX2dldF92aG9zdF91c2VyKHZobykpOwoKICAgICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIG5hbWUpOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIEFET1BUX1NPQ0tFVDogewogICAgICBpbnQzMl90IGFyZyA9IHRvX2ludDMyKGN0eCwgYXJndlswXSk7CiAgICAgIHN0cnVjdCBsd3MqIHdzaTsKCiAgICAgIGlmKHdzaV9mcm9tX2ZkKGxjLT5jdHgsIGFyZykpCiAgICAgICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJzb2NrZXQgJSIgUFJJaTMyICIgYWxyZWFkeSBhZG9wdGVkIiwgYXJnKTsKCiAgICAgIGlmKCh3c2kgPSBsd3NfYWRvcHRfc29ja2V0KGxjLT5jdHgsIGFyZykpKQogICAgICAgIHJldCA9IGx3c2pzX3NvY2tldF9jcmVhdGUoY3R4LCB3c2kpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBBRE9QVF9TT0NLRVRfUkVBREJVRjogewogICAgICBpbnQzMl90IGFyZyA9IHRvX2ludDMyKGN0eCwgYXJndlswXSk7CiAgICAgIHN0cnVjdCBsd3MqIHdzaTsKICAgICAgc2l6ZV90IGxlbjsKICAgICAgdWludDhfdCogYnVmOwoKICAgICAgaWYod3NpX2Zyb21fZmQobGMtPmN0eCwgYXJnKSkKICAgICAgICByZXR1cm4gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgInNvY2tldCAlIiBQUklpMzIgIiBhbHJlYWR5IGFkb3B0ZWQiLCBhcmcpOwoKICAgICAgaWYoIShidWYgPSBnZXRfYnVmZmVyKGN0eCwgYXJnYyAtIDEsIGFyZ3YgKyAxLCAmbGVuKSkpCiAgICAgICAgcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDIgbXVzdCBiZSBhbiBhcnJheWJ1ZmZlciIpOwoKICAgICAgaWYoKHdzaSA9IGx3c19hZG9wdF9zb2NrZXRfcmVhZGJ1ZihsYy0+Y3R4LCBhcmcsIChjb25zdCBjaGFyKilidWYsIGxlbikpKQogICAgICAgIHJldCA9IGx3c2pzX3NvY2tldF9jcmVhdGUoY3R4LCB3c2kpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBDQU5DRUxfU0VSVklDRTogewogICAgICBsd3NfY2FuY2VsX3NlcnZpY2UobGMtPmN0eCk7CgogICAgICBpb2hhbmRsZXJfY2xlYW51cChsYyk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgQ0xJRU5UX0NPTk5FQ1Q6IHsKICAgICAgc3RydWN0IGx3c19jbGllbnRfY29ubmVjdF9pbmZvIGluZm8gPSB7MH07CiAgICAgIGNoYXIqIHVyaSA9IDA7CiAgICAgIEpTVmFsdWUgb2JqID0gSlNfSXNTdHJpbmcoYXJndlswXSkgPyAoYXJnYyA+IDEgJiYgSlNfSXNPYmplY3QoYXJndlsxXSkgPyBKU19EdXBWYWx1ZShjdHgsIGFyZ3ZbMV0pIDogSlNfTmV3T2JqZWN0KGN0eCkpIDogSlNfRHVwVmFsdWUoY3R4LCBhcmd2WzBdKTsKCiAgICAgIGlmKGFyZ2MgPiAwICYmIEpTX0lzU3RyaW5nKGFyZ3ZbMF0pKSB7CiAgICAgICAgY2hhciogdG1wOwoKICAgICAgICBpZigodG1wID0gdG9fc3RyaW5nKGN0eCwgYXJndlswXSkpKSB7CiAgICAgICAgICB1cmkgPSBqc19zdHJkdXAoY3R4LCB0bXApOwogICAgICAgICAgbHdzanNfdXJpX3RvY29ubmVjdGluZm8oY3R4LCB0bXAsICZpbmZvKTsKICAgICAgICAgIGpzX2ZyZWUoY3R4LCB0bXApOwogICAgICAgIH0KICAgICAgfQoKICAgICAgY2xpZW50X2Nvbm5lY3RfaW5mb19mcm9tb2JqKGN0eCwgb2JqLCAmaW5mbyk7CgogICAgICBMV1NTb2NrZXQqIHNvY2sgPSBzb2NrZXRfYWxsb2MoY3R4KTsKCiAgICAgIHNvY2stPmNsaWVudCA9IFRSVUU7CiAgICAgIHNvY2stPnR5cGUgPSBpbmZvLm1ldGhvZCA/IFNPQ0tFVF9IVFRQIDogU09DS0VUX1dTOwogICAgICBzb2NrLT5tZXRob2QgPSBpbmZvLm1ldGhvZCA/IGx3c2pzX21ldGhvZF9pbmRleChpbmZvLm1ldGhvZCkgOiAwOwoKICAgICAgcmV0ID0gbHdzanNfc29ja2V0X3dyYXAoY3R4LCBzb2NrKTsKCiAgICAgIGluZm8uY29udGV4dCA9IGxjLT5jdHg7CiAgICAgIGluZm8ucHdzaSA9ICZzb2NrLT53c2k7CiAgICAgIGluZm8ub3BhcXVlX3VzZXJfZGF0YSA9IG9ial9wdHIoY3R4LCByZXQpOwoKICAgICAgaWYoaW5mby5hZGRyZXNzID09IDAgJiYgaW5mby5ob3N0KQogICAgICAgIGluZm8uYWRkcmVzcyA9IGpzX3N0cmR1cChjdHgsIGluZm8uaG9zdCk7CgogICAgICBpZighdXJpKQogICAgICAgIHVyaSA9IGx3c2pzX2Nvbm5lY3RpbmZvX3RvX3VyaShjdHgsICZpbmZvKTsKCiAgICAgIHNvY2stPnVyaSA9IHVyaTsKCiAgICAgIGx3c19jbGllbnRfY29ubmVjdF92aWFfaW5mbygmaW5mbyk7CgogICAgICBjbGllbnRfY29ubmVjdF9pbmZvX2ZyZWUoSlNfR2V0UnVudGltZShjdHgpLCAmaW5mbyk7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgR0VUX1JBTkRPTTogewogICAgICBzaXplX3QgbjsKICAgICAgdWludDhfdCogcDsKCiAgICAgIGlmKChwID0gZ2V0X2J1ZmZlcihjdHgsIGFyZ2MsIGFyZ3YsICZuKSkpCiAgICAgICAgbHdzX2dldF9yYW5kb20obGMtPmN0eCwgcCwgbik7CgogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIEFTWU5DX0ROU19TRVJWRVJfQUREOiB7CiAgICAgIEpTVmFsdWUgYWRkciA9IGx3c2pzX3NvY2thZGRyNDZfdmFsdWUoY3R4LCBhcmd2WzBdKTsKICAgICAgbHdzX3NvY2thZGRyNDYqIHNhNDYgPSBsd3Nqc19zb2NrYWRkcjQ2X2RhdGEoY3R4LCBhZGRyKTsKCiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgbHdzX2FzeW5jX2Ruc19zZXJ2ZXJfYWRkKGxjLT5jdHgsIHNhNDYpKTsKCiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGFkZHIpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgQVNZTkNfRE5TX1NFUlZFUl9SRU1PVkU6IHsKICAgICAgSlNWYWx1ZSBhZGRyID0gbHdzanNfc29ja2FkZHI0Nl92YWx1ZShjdHgsIGFyZ3ZbMF0pOwogICAgICBsd3Nfc29ja2FkZHI0Niogc2E0NiA9IGx3c2pzX3NvY2thZGRyNDZfZGF0YShjdHgsIGFkZHIpOwoKICAgICAgbHdzX2FzeW5jX2Ruc19zZXJ2ZXJfcmVtb3ZlKGxjLT5jdHgsIHNhNDYpOwoKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgYWRkcik7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBXU0lfRlJPTV9GRDogewogICAgICBzdHJ1Y3QgbHdzKiB3c2k7CgogICAgICBpZigod3NpID0gd3NpX2Zyb21fZmQobGMtPmN0eCwgdG9faW50MzIoY3R4LCBhcmd2WzBdKSkpKQogICAgICAgIHJldCA9IGpzX3NvY2tldF9nZXQoY3R4LCB3c2kpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCmVudW0gewogIFBST1BfSE9TVE5BTUUgPSAwLAogIFBST1BfREVQUkVDQVRFRCwKICBQUk9QX0VVSUQsCiAgUFJPUF9FR0lELAogIFBST1BfUFJPVE9DT0xTLAp9OwoKc3RhdGljIEpTVmFsdWUKbHdzanNfY29udGV4dF9nZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgTFdTQ29udGV4dCogbGM7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEobGMgPSBsd3Nqc19jb250ZXh0X2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBQUk9QX0hPU1ROQU1FOiB7CiAgICAgIGNvbnN0IGNoYXIqIHM7CgogICAgICBpZigocyA9IGx3c19jYW5vbmljYWxfaG9zdG5hbWUobGMtPmN0eCkpKQogICAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIHMpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUk9QX0RFUFJFQ0FURUQ6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIGx3c19jb250ZXh0X2lzX2RlcHJlY2F0ZWQobGMtPmN0eCkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBST1BfRVVJRDoKICAgIGNhc2UgUFJPUF9FR0lEOiB7CiAgICAgIHVpZF90IHVpZDsKICAgICAgZ2lkX3QgZ2lkOwogICAgICBsd3NfZ2V0X2VmZmVjdGl2ZV91aWRfZ2lkKGxjLT5jdHgsICZ1aWQsICZnaWQpOwoKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBtYWdpYyA9PSBQUk9QX0VVSUQgPyB1aWQgOiBnaWQpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUk9QX1BST1RPQ09MUzogewogICAgICByZXQgPSBKU19OZXdBcnJheShjdHgpOwoKICAgICAgZm9yKHVpbnQzMl90IGkgPSAwOyBsYy0+aW5mby5wcm90b2NvbHNbaV0ubmFtZTsgaSsrKSB7CiAgICAgICAgSlNWYWx1ZSBwcm90b2NvbCA9IHByb3RvY29sX29iaihjdHgsICZsYy0+aW5mby5wcm90b2NvbHNbaV0pOwogICAgICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgcmV0LCBpLCBwcm90b2NvbCk7CiAgICAgIH0KCiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIHZvaWQKbHdzanNfY29udGV4dF9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBMV1NDb250ZXh0KiBsYzsKCiAgaWYoKGxjID0gbHdzanNfY29udGV4dF9kYXRhKHZhbCkpKQogICAgY29udGV4dF9mcmVlKHJ0LCBsYyk7Cn0KCnN0YXRpYyBjb25zdCBKU0NsYXNzRGVmIGx3c19jb250ZXh0X2NsYXNzID0gewogICAgIkxXU0NvbnRleHQiLAogICAgLmZpbmFsaXplciA9IGx3c2pzX2NvbnRleHRfZmluYWxpemVyLAp9OwoKc3RhdGljIGNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGx3c19jb250ZXh0X3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImRlc3Ryb3kiLCAwLCBsd3Nqc19jb250ZXh0X21ldGhvZHMsIERFU1RST1kpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRWaG9zdEJ5TmFtZSIsIDEsIGx3c2pzX2NvbnRleHRfbWV0aG9kcywgR0VUX1ZIT1NUX0JZX05BTUUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJhZG9wdFNvY2tldCIsIDEsIGx3c2pzX2NvbnRleHRfbWV0aG9kcywgQURPUFRfU09DS0VUKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYWRvcHRTb2NrZXRSZWFkYnVmIiwgMiwgbHdzanNfY29udGV4dF9tZXRob2RzLCBBRE9QVF9TT0NLRVRfUkVBREJVRiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImNhbmNlbFNlcnZpY2UiLCAwLCBsd3Nqc19jb250ZXh0X21ldGhvZHMsIENBTkNFTF9TRVJWSUNFKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY2xpZW50Q29ubmVjdCIsIDEsIGx3c2pzX2NvbnRleHRfbWV0aG9kcywgQ0xJRU5UX0NPTk5FQ1QpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRSYW5kb20iLCAxLCBsd3Nqc19jb250ZXh0X21ldGhvZHMsIEdFVF9SQU5ET00pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJhc3luY0Ruc1NlcnZlckFkZCIsIDEsIGx3c2pzX2NvbnRleHRfbWV0aG9kcywgQVNZTkNfRE5TX1NFUlZFUl9BREQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJhc3luY0Ruc1NlcnZlclJlbW92ZSIsIDEsIGx3c2pzX2NvbnRleHRfbWV0aG9kcywgQVNZTkNfRE5TX1NFUlZFUl9SRU1PVkUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ3c2lGcm9tRmQiLCAxLCBsd3Nqc19jb250ZXh0X21ldGhvZHMsIFdTSV9GUk9NX0ZEKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJob3N0bmFtZSIsIGx3c2pzX2NvbnRleHRfZ2V0LCAwLCBQUk9QX0hPU1ROQU1FKSwKICAgIC8vIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJ2aG9zdCIsIGx3c2pzX2NvbnRleHRfZ2V0LCAwLCBQUk9QX1ZIT1NUKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJkZXByZWNhdGVkIiwgbHdzanNfY29udGV4dF9nZXQsIDAsIFBST1BfREVQUkVDQVRFRCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiZXVpZCIsIGx3c2pzX2NvbnRleHRfZ2V0LCAwLCBQUk9QX0VVSUQpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImVnaWQiLCBsd3Nqc19jb250ZXh0X2dldCwgMCwgUFJPUF9FR0lEKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJwcm90b2NvbHMiLCBsd3Nqc19jb250ZXh0X2dldCwgMCwgUFJPUF9QUk9UT0NPTFMpLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJMV1NDb250ZXh0IiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKaW50Cmx3c2pzX2NvbnRleHRfaW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKICBKU19OZXdDbGFzc0lEKCZsd3Nqc19jb250ZXh0X2NsYXNzX2lkKTsKICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGx3c2pzX2NvbnRleHRfY2xhc3NfaWQsICZsd3NfY29udGV4dF9jbGFzcyk7CiAgbHdzanNfY29udGV4dF9wcm90byA9IEpTX05ld09iamVjdFByb3RvKGN0eCwgSlNfTlVMTCk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBsd3Nqc19jb250ZXh0X3Byb3RvLCBsd3NfY29udGV4dF9wcm90b19mdW5jcywgY291bnRvZihsd3NfY29udGV4dF9wcm90b19mdW5jcykpOwoKICBsd3Nqc19jb250ZXh0X2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwgbHdzanNfY29udGV4dF9jb25zdHJ1Y3RvciwgIkxXU0NvbnRleHQiLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCBsd3Nqc19jb250ZXh0X2N0b3IsIGx3c2pzX2NvbnRleHRfcHJvdG8pOwoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiTFdTQ29udGV4dCIsIGx3c2pzX2NvbnRleHRfY3Rvcik7CiAgfQoKICByZXR1cm4gMDsKfQoKc3RhdGljIGludApjYWxsYmFja19wb2xsZmQoc3RydWN0IGx3cyogd3NpLCBlbnVtIGx3c19jYWxsYmFja19yZWFzb25zIHJlYXNvbiwgdm9pZCogdXNlciwgdm9pZCogaW4sIHNpemVfdCBsZW4pIHsKICBMV1NQcm90b2NvbHMgY29uc3QqIHBybyA9IHdzaSA/IGx3c19nZXRfcHJvdG9jb2wod3NpKSA6IDA7CiAgTFdTUHJvdG9jb2wqIGNsb3N1cmUgPSBwcm8gPyBwcm8tPnVzZXIgOiAwOwogIExXU0NvbnRleHQqIGxjID0gd3NpID8gbHdzanNfd3NpX2NvbnRleHQod3NpKSA6IDA7CiAgSlNDb250ZXh0KiBjdHggPSBjbG9zdXJlICYmIGNsb3N1cmUtPmN0eCA/IGNsb3N1cmUtPmN0eCA6IGxjID8gbGMtPmpzIDogMDsKCiAgaWYoIWN0eCAmJiBsYyAmJiBsYy0+Y3R4KSB7CiAgICBKU09iamVjdCogb2JqID0gbHdzX2NvbnRleHRfdXNlcihsYy0+Y3R4KTsKICAgIExXU0NvbnRleHQqIGx3c2N0eDsKCiAgICBpZigobHdzY3R4ID0gSlNfR2V0T3BhcXVlKEpTX01LUFRSKEpTX1RBR19PQkpFQ1QsIG9iaiksIGx3c2pzX2NvbnRleHRfY2xhc3NfaWQpKSkKICAgICAgY3R4ID0gbHdzY3R4LT5qczsKICB9CgogIHN3aXRjaChyZWFzb24pIHsKICAgIGNhc2UgTFdTX0NBTExCQUNLX0xPQ0tfUE9MTDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX1VOTE9DS19QT0xMOiB7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0RFTF9QT0xMX0ZEOiB7CiAgICAgIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIHggPSBpbjsKCiAgICAgIGlvaGFuZGxlcl9zZXQobGMsIHgtPmZkLCBKU19OVUxMLCAwKTsKICAgICAgaW9oYW5kbGVyX3NldChsYywgeC0+ZmQsIEpTX05VTEwsIDEpOwogICAgICByZXR1cm4gMDsKICAgIH0KCiAgICBjYXNlIExXU19DQUxMQkFDS19BRERfUE9MTF9GRDoKICAgIGNhc2UgTFdTX0NBTExCQUNLX0NIQU5HRV9NT0RFX1BPTExfRkQ6IHsKICAgICAgc3RydWN0IGx3c19wb2xsYXJncyogeCA9IGluOwoKICAgICAgaWYoeC0+ZXZlbnRzID09IHgtPnByZXZfZXZlbnRzKQogICAgICAgIHJldHVybiAwOwoKICAgICAgQk9PTCB3cml0ZSA9ICEhKHgtPmV2ZW50cyAmIFBPTExPVVQpOwogICAgICBKU1ZhbHVlQ29uc3QgZGF0YVtdID0gewogICAgICAgICAgSlNfTmV3SW50MzIoY3R4LCB4LT5mZCksCiAgICAgICAgICBKU19OZXdJbnQzMihjdHgsIHgtPmV2ZW50cyksCiAgICAgICAgICBKU19OZXdCb29sKGN0eCwgd3JpdGUpLAogICAgICAgICAgSlNfTmV3SW50NjQoY3R4LCAoaW50cHRyX3QpbHdzX2dldF9jb250ZXh0KHdzaSkpLAogICAgICB9OwogICAgICBKU1ZhbHVlIGZuID0gSlNfTmV3Q0Z1bmN0aW9uRGF0YShjdHgsIHByb3RvY29sX2hhbmRsZXIsIDAsIDAsIGNvdW50b2YoZGF0YSksIGRhdGEpOwoKICAgICAgaWYocmVhc29uID09IExXU19DQUxMQkFDS19DSEFOR0VfTU9ERV9QT0xMX0ZEKQogICAgICAgIGlvaGFuZGxlcl9zZXQobGMsIHgtPmZkLCBKU19OVUxMLCAhd3JpdGUpOwoKICAgICAgaW9oYW5kbGVyX3NldChsYywgeC0+ZmQsIGZuLCB3cml0ZSk7CgogICAgICBKU19GcmVlVmFsdWUoY3R4LCBmbik7CiAgICAgIHJldHVybiAwOwogICAgfQoKICAgIGRlZmF1bHQ6IGJyZWFrOwogIH0KCiAgcmV0dXJuIC0xOwp9CgpzdGF0aWMgaW50CmNhbGxiYWNrX2pzKHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucyByZWFzb24sIHZvaWQqIHVzZXIsIHZvaWQqIGluLCBzaXplX3QgbGVuKSB7CiAgaWYod3NpKSB7CiAgICBKU1ZhbHVlKiBqc3ZhbCA9IHVzZXI7CiAgICBMV1NQcm90b2NvbHMgY29uc3QqIHBybyA9IGx3c19nZXRfcHJvdG9jb2wod3NpKTsKCiAgICBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX1dTSV9DUkVBVEUgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19IVFRQX0JJTkRfUFJPVE9DT0wgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19DTElFTlRfSFRUUF9CSU5EX1BST1RPQ09MIHx8IHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfV1NfU0VSVkVSX0JJTkRfUFJPVE9DT0wgfHwKICAgICAgIHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfV1NfQ0xJRU5UX0JJTkRfUFJPVE9DT0wgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19SQVdfUFJPWFlfQ0xJX0JJTkRfUFJPVE9DT0wgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19SQVdfUFJPWFlfU1JWX0JJTkRfUFJPVE9DT0wgfHwKICAgICAgIHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfUkFXX1NLVF9CSU5EX1BST1RPQ09MIHx8IHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfUkFXX0ZJTEVfQklORF9QUk9UT0NPTCkgewogICAgICBpZih1c2VyICYmIHByby0+cGVyX3Nlc3Npb25fZGF0YV9zaXplID09IHNpemVvZihKU1ZhbHVlKSkgewogICAgICAgIEpTQ29udGV4dCogY3R4ID0gbHdzanNfd3NpX2pzY29udGV4dCh3c2kpOwoKICAgICAgICBpZihKU19WQUxVRV9HRVRfVEFHKCpqc3ZhbCkgPT0gMCAmJiBKU19WQUxVRV9HRVRfUFRSKCpqc3ZhbCkgPT0gMCkKICAgICAgICAgICpqc3ZhbCA9IEpTX05ld09iamVjdFByb3RvKGN0eCwgSlNfTlVMTCk7CgogICAgICAgIHJldHVybiAwOwogICAgICB9CiAgICB9CgogICAgaWYocmVhc29uID09IExXU19DQUxMQkFDS19XU0lfREVTVFJPWSkgewogICAgICBpZih1c2VyICYmIHByby0+cGVyX3Nlc3Npb25fZGF0YV9zaXplID09IHNpemVvZihKU1ZhbHVlKSkgewogICAgICAgIEpTQ29udGV4dCogY3R4ID0gbHdzanNfd3NpX2pzY29udGV4dCh3c2kpOwoKICAgICAgICBpZihKU19Jc09iamVjdCgqanN2YWwpKSB7CiAgICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCAqanN2YWwpOwogICAgICAgICAgKmpzdmFsID0gSlNfTUtQVFIoMCwgMCk7CiAgICAgICAgfQoKICAgICAgICBsd3Nqc19zb2NrZXRfZGVzdHJveShjdHgsIHdzaSk7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiAtMTsKfQoKc3RhdGljIGludApjYWxsYmFja19odHRwKHN0cnVjdCBsd3MqIHdzaSwgZW51bSBsd3NfY2FsbGJhY2tfcmVhc29ucyByZWFzb24sIHZvaWQqIHVzZXIsIHZvaWQqIGluLCBzaXplX3QgbGVuKSB7CiAgaWYoY2FsbGJhY2tfanMod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pICE9IDApCiAgICBpZihjYWxsYmFja19wb2xsZmQod3NpLCByZWFzb24sIHVzZXIsIGluLCBsZW4pID09IDApCiAgICAgIHJldHVybiAwOwoKICBMV1NTb2NrZXQqIHNvY2s7CiAgQk9PTCBjbGllbnQgPSBGQUxTRTsKCiAgaWYoKHNvY2sgPSBzb2NrZXRfZ2V0KHdzaSkpKQogICAgY2xpZW50ID0gc29jay0+Y2xpZW50OwoKICBpbnQgcmV0ID0gY2xpZW50ID8gMCA6IGx3c19jYWxsYmFja19odHRwX2R1bW15KHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIGludApjYWxsYmFja19wcm90b2NvbChzdHJ1Y3QgbHdzKiB3c2ksIGVudW0gbHdzX2NhbGxiYWNrX3JlYXNvbnMgcmVhc29uLCB2b2lkKiB1c2VyLCB2b2lkKiBpbiwgc2l6ZV90IGxlbikgewogIGlmKHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfT1BFTlNTTF9MT0FEX0VYVFJBX0NMSUVOVF9WRVJJRllfQ0VSVFMgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19PUEVOU1NMX0xPQURfRVhUUkFfU0VSVkVSX1ZFUklGWV9DRVJUUykKICAgIHJldHVybiAwOwoKICBpZihjYWxsYmFja19qcyh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbikgIT0gMCkKICAgIGlmKGNhbGxiYWNrX3BvbGxmZCh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbikgPT0gMCkKICAgICAgcmV0dXJuIDA7CgogIExXU1Byb3RvY29scyBjb25zdCogcHJvID0gd3NpID8gbHdzX2dldF9wcm90b2NvbCh3c2kpIDogMDsKICBMV1NQcm90b2NvbCogY2xvc3VyZSA9IHBybyA/IHByby0+dXNlciA6IDA7CiAgSlNWYWx1ZSogY2IgPSBjbG9zdXJlID8gJmNsb3N1cmUtPmNhbGxiYWNrIDogMDsKICBMV1NDb250ZXh0KiBsYyA9IHdzaSA/IGx3c2pzX3dzaV9jb250ZXh0KHdzaSkgOiAwOwogIEpTQ29udGV4dCogY3R4ID0gbGMgJiYgbGMtPmpzID8gbGMtPmpzIDogd3NpID8gbHdzanNfd3NpX2pzY29udGV4dCh3c2kpIDogMDsKICBpbnQzMl90IHJldCA9IDA7CiAgSlNWYWx1ZSoganN2YWwgPSB1c2VyICYmIHBybyAmJiBwcm8tPnBlcl9zZXNzaW9uX2RhdGFfc2l6ZSA9PSBzaXplb2YoSlNWYWx1ZSkgJiYgSlNfSXNPYmplY3QoKihKU1ZhbHVlKil1c2VyKSA/IHVzZXIgOiAwOwoKICBERUJVR19XU0kod3NpLCAiXHgxYlsxOzMzbSUtMjRzXHgxYlswbSAlcCAlcCAlenUiLCBsd3Nqc19jYWxsYmFja19uYW1lKHJlYXNvbiksIHVzZXIsIGluLCBsZW4pOwoKICBpZihjbG9zdXJlICYmIGNvdW50b2YoY2xvc3VyZS0+Y2FsbGJhY2tzKSA+IHJlYXNvbiAmJiAhaXNfbnVsbGlzaChjbG9zdXJlLT5jYWxsYmFja3NbcmVhc29uXSkpIHsKICAgIGNiID0gJmNsb3N1cmUtPmNhbGxiYWNrc1tyZWFzb25dOwogIH0gZWxzZQoKICAgIHN3aXRjaChyZWFzb24pIHsKICAgICAgLy8gY2FzZSBMV1NfQ0FMTEJBQ0tfRklMVEVSX05FVFdPUktfQ09OTkVDVElPTjoKICAgICAgY2FzZSBMV1NfQ0FMTEJBQ0tfTE9DS19QT0xMOgogICAgICBjYXNlIExXU19DQUxMQkFDS19VTkxPQ0tfUE9MTDogcmV0dXJuIDA7CgogICAgICBjYXNlIExXU19DQUxMQkFDS19ERUxfUE9MTF9GRDogewogICAgICAgIHN0cnVjdCBsd3NfcG9sbGFyZ3MqIHggPSBpbjsKCiAgICAgICAgaW9oYW5kbGVyX3NldChsYywgeC0+ZmQsIEpTX05VTEwsIDApOwogICAgICAgIGlvaGFuZGxlcl9zZXQobGMsIHgtPmZkLCBKU19OVUxMLCAxKTsKICAgICAgICByZXR1cm4gMDsKICAgICAgfQoKICAgICAgY2FzZSBMV1NfQ0FMTEJBQ0tfQUREX1BPTExfRkQ6CiAgICAgIGNhc2UgTFdTX0NBTExCQUNLX0NIQU5HRV9NT0RFX1BPTExfRkQ6IHsKICAgICAgICBzdHJ1Y3QgbHdzX3BvbGxhcmdzKiB4ID0gaW47CiAgICAgICAgQk9PTCB3cml0ZSA9ICEhKHgtPmV2ZW50cyAmIFBPTExPVVQpOwogICAgICAgIEpTVmFsdWVDb25zdCBkYXRhW10gPSB7CiAgICAgICAgICAgIEpTX05ld0ludDMyKGN0eCwgeC0+ZmQpLAogICAgICAgICAgICBKU19OZXdJbnQzMihjdHgsIHgtPmV2ZW50cyksCiAgICAgICAgICAgIEpTX05ld0Jvb2woY3R4LCB3cml0ZSksCiAgICAgICAgICAgIEpTX05ld0ludDY0KGN0eCwgKGludHB0cl90KWx3c19nZXRfY29udGV4dCh3c2kpKSwKICAgICAgICB9OwogICAgICAgIEpTVmFsdWUgZm4gPSBKU19OZXdDRnVuY3Rpb25EYXRhKGN0eCwgcHJvdG9jb2xfaGFuZGxlciwgMCwgMCwgY291bnRvZihkYXRhKSwgZGF0YSk7CgogICAgICAgIGlmKHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfQ0hBTkdFX01PREVfUE9MTF9GRCkKICAgICAgICAgIGlvaGFuZGxlcl9zZXQobGMsIHgtPmZkLCBKU19OVUxMLCAhd3JpdGUpOwoKICAgICAgICBpb2hhbmRsZXJfc2V0KGxjLCB4LT5mZCwgZm4sIHdyaXRlKTsKCiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgZm4pOwogICAgICAgIHJldHVybiAwOwogICAgICB9CgogICAgICBkZWZhdWx0OiBicmVhazsKICAgIH0KCiAgLyppZigoKGludDMyX3QqKXdzaSlbNThdICYgMikKICAgIHJldHVybiBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7Ki8KCiAgSlNWYWx1ZSBzb2NrID0gd3NpICYmIHJlYXNvbiAhPSBMV1NfQ0FMTEJBQ0tfQ0xJRU5UX0hUVFBfQklORF9QUk9UT0NPTCAmJiByZWFzb24gIT0gTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQgPyBsd3Nqc19zb2NrZXRfZ2V0X29yX2NyZWF0ZShjdHgsIHdzaSkgOiBKU19VTkRFRklORUQ7CiAgTFdTU29ja2V0KiBzID0gbHdzanNfc29ja2V0X2RhdGEoc29jayk7CgogIGlmKHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfSFRUUF9XUklURUFCTEUgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19DTElFTlRfSFRUUF9XUklURUFCTEUgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19TRVJWRVJfV1JJVEVBQkxFIHx8IHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfQ0xJRU5UX1dSSVRFQUJMRSB8fAogICAgIHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfUkFXX1BST1hZX0NMSV9XUklURUFCTEUgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19SQVdfUFJPWFlfU1JWX1dSSVRFQUJMRSB8fCByZWFzb24gPT0gTFdTX0NBTExCQUNLX1JBV19XUklURUFCTEUgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19SQVdfV1JJVEVBQkxFX0ZJTEUgfHwKICAgICByZWFzb24gPT0gTFdTX0NBTExCQUNLX01RVFRfQ0xJRU5UX1dSSVRFQUJMRSkgewogICAgaWYocyAmJiBzLT53YW50X3dyaXRlKSB7CiAgICAgIHMtPndhbnRfd3JpdGUgPSBGQUxTRTsKCiAgICAgIGlmKCFKU19Jc1VuZGVmaW5lZChzLT53cml0ZV9oYW5kbGVyKSkgewogICAgICAgIEpTVmFsdWUgZm4gPSBzLT53cml0ZV9oYW5kbGVyOwogICAgICAgIHMtPndyaXRlX2hhbmRsZXIgPSBKU19VTkRFRklORUQ7CiAgICAgICAgSlNWYWx1ZSByZXN1bHQgPSBKU19DYWxsKGN0eCwgZm4sIEpTX1VOREVGSU5FRCwgMSwgJnNvY2spOwogICAgICAgIHJldCA9IHRvX2ludDMyKGN0eCwgcmVzdWx0KTsKICAgICAgICBKU19GcmVlVmFsdWUoY3R4LCByZXN1bHQpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGZuKTsKICAgICAgICBnb3RvIGVuZDsKICAgICAgfQogICAgfQoKICAgIGlmKHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfQ0xJRU5UX0FQUEVORF9IQU5EU0hBS0VfSEVBREVSKQogICAgICBzLT5yZWRpcmVjdGVkX3RvX2dldCA9IGx3c19odHRwX2lzX3JlZGlyZWN0ZWRfdG9fZ2V0KHdzaSk7CgogICAgaWYocmVhc29uID09IExXU19DQUxMQkFDS19DTElFTlRfSFRUUF9XUklURUFCTEUpCiAgICAgIGlmKHMtPnJlZGlyZWN0ZWRfdG9fZ2V0KQogICAgICAgIGdvdG8gZW5kOwogIH0KCiAgaWYocmVhc29uID09IExXU19DQUxMQkFDS19DTElFTlRfRklMVEVSX1BSRV9FU1RBQkxJU0ggfHwgcmVhc29uID09IExXU19DQUxMQkFDS19FU1RBQkxJU0hFRF9DTElFTlRfSFRUUCB8fCByZWFzb24gPT0gTFdTX0NBTExCQUNLX0ZJTFRFUl9IVFRQX0NPTk5FQ1RJT04gfHwgcmVhc29uID09IExXU19DQUxMQkFDS19IVFRQKSB7CiAgICBpZihzICYmIGlzX251bGxpc2gocy0+aGVhZGVycykpIHsKICAgICAgcy0+aGVhZGVycyA9IGx3c2pzX3NvY2tldF9oZWFkZXJzKGN0eCwgcy0+d3NpLCAmcy0+cHJvdG8pOwogICAgfQogIH0KCiAgaWYocmVhc29uID09IExXU19DQUxMQkFDS19IVFRQIHx8IHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfRklMVEVSX0hUVFBfQ09OTkVDVElPTiB8fCByZWFzb24gPT0gTFdTX0NBTExCQUNLX0NMSUVOVF9GSUxURVJfUFJFX0VTVEFCTElTSCkgewogICAgaWYocyAmJiAocy0+dXJpID09IDAgfHwgcy0+bWV0aG9kID09IC0xKSkgewogICAgICBjaGFyKiB1cmlfcHRyID0gMDsKICAgICAgaW50IHVyaV9sZW4gPSAwOwoKICAgICAgaW50IG1ldGhvZCA9IGx3c19odHRwX2dldF91cmlfYW5kX21ldGhvZChzLT53c2ksICZ1cmlfcHRyLCAmdXJpX2xlbik7CgogICAgICBpZih1cmlfcHRyICYmIHMtPnVyaSA9PSAwKQogICAgICAgIHMtPnVyaSA9IGpzX3N0cm5kdXAoY3R4LCB1cmlfcHRyLCB1cmlfbGVuKTsKCiAgICAgIGlmKG1ldGhvZCA+PSAwICYmIHMtPm1ldGhvZCA9PSAtMSkKICAgICAgICBzLT5tZXRob2QgPSBtZXRob2Q7CiAgICB9CiAgfQoKICBpZihjYiAmJiAhaXNfbnVsbGlzaCgqY2IpKSB7CiAgICBpbnQgYXJnaSA9IDEsIGJ1ZmZlcl9pbmRleCA9IC0xOwogICAgSlNWYWx1ZSBhcmd2WzVdID0gewogICAgICAgIEpTX0R1cFZhbHVlKGN0eCwgc29jayksCiAgICB9OwoKICAgIGlmKGNiID09ICZjbG9zdXJlLT5jYWxsYmFjaykKICAgICAgYXJndlthcmdpKytdID0gSlNfTmV3SW50MzIoY3R4LCByZWFzb24pOwoKICAgIC8qYXJndlthcmdpKytdID0gKHVzZXIgJiYgcHJvLT5wZXJfc2Vzc2lvbl9kYXRhX3NpemUgPT0gc2l6ZW9mKEpTVmFsdWUpICYmIChKU19WQUxVRV9HRVRfT0JKKCooSlNWYWx1ZSopdXNlcikgJiYgSlNfVkFMVUVfR0VUX1RBRygqKEpTVmFsdWUqKXVzZXIpID09IEpTX1RBR19PQkpFQ1QpKSA/ICooSlNWYWx1ZSopdXNlciA6IEpTX05VTEw7Ki8KCiAgICBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX0hUVFBfQ09ORklSTV9VUEdSQURFKSB7CiAgICAgIGlmKHMgJiYgIXN0cmNtcChpbiwgIndlYnNvY2tldCIpKQogICAgICAgIHMtPnR5cGUgPSBTT0NLRVRfV1M7CiAgICB9CgogICAgaWYocmVhc29uID09IExXU19DQUxMQkFDS19GSUxURVJfSFRUUF9DT05ORUNUSU9OKSB7CiAgICAgIGlmKHMgJiYgIXN0cmNtcChpbiwgIndzIikpCiAgICAgICAgcy0+dHlwZSA9IFNPQ0tFVF9XUzsKICAgIH0KCiAgICBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX0NMSUVOVF9FU1RBQkxJU0hFRCB8fCByZWFzb24gPT0gTFdTX0NBTExCQUNLX0ZJTFRFUl9QUk9UT0NPTF9DT05ORUNUSU9OKSB7CiAgICAgIGlmKHMpCiAgICAgICAgcy0+dHlwZSA9IFNPQ0tFVF9XUzsKICAgIH0KCiAgICBCT09MIHByb2Nlc3NfaHRtbF9hcmdzID0gcmVhc29uID09IExXU19DQUxMQkFDS19BRERfSEVBREVSUyB8fCByZWFzb24gPT0gTFdTX0NBTExCQUNLX0NIRUNLX0FDQ0VTU19SSUdIVFMgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19QUk9DRVNTX0hUTUw7CgogICAgaWYocmVhc29uID09IExXU19DQUxMQkFDS19DTElFTlRfSFRUUF9SRURJUkVDVCkgewogICAgICBhcmd2W2FyZ2krK10gPSBKU19OZXdTdHJpbmcoY3R4LCBpbik7CiAgICAgIGFyZ3ZbYXJnaSsrXSA9IEpTX05ld0ludDMyKGN0eCwgbGVuKTsKICAgIH0gZWxzZSBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX0NMSUVOVF9SRUNFSVZFICYmICgoKGNoYXIqKWluKVstMl0gJiAweDdmKSA9PSA4KSB7CiAgICAgIEJPT0wgaGFzX3JlYXNvbiA9IGNiID09ICZjbG9zdXJlLT5jYWxsYmFjazsKICAgICAgaW50IGNvZGUgPSAoaW50KSgoKHVpbnQ4X3QqKWluKVswXSkgPDwgOCB8ICgodWludDhfdCopaW4pWzFdOwoKICAgICAgcmVhc29uID0gTFdTX0NBTExCQUNLX1dTX1BFRVJfSU5JVElBVEVEX0NMT1NFOwogICAgICBjYiA9IGlzX251bGxpc2goY2xvc3VyZS0+Y2FsbGJhY2tzW3JlYXNvbl0pID8gJmNsb3N1cmUtPmNhbGxiYWNrIDogJmNsb3N1cmUtPmNhbGxiYWNrc1tyZWFzb25dOwoKICAgICAgaWYoIWhhc19yZWFzb24gJiYgY2IgPT0gJmNsb3N1cmUtPmNhbGxiYWNrKQogICAgICAgIGFyZ3ZbYXJnaSsrXSA9IEpTX05ld0ludDMyKGN0eCwgcmVhc29uKTsKCiAgICAgIGFyZ3ZbYXJnaSsrXSA9IEpTX05ld0ludDMyKGN0eCwgY29kZSk7CgogICAgICBpZihsZW4gPiAyKQogICAgICAgIGFyZ3ZbYXJnaSsrXSA9IEpTX05ld1N0cmluZ0xlbihjdHgsIChjaGFyKilpbiArIDIsIGxlbiAtIDIpOwogICAgfSBlbHNlIGlmKHByb2Nlc3NfaHRtbF9hcmdzKSB7CiAgICAgIHN0cnVjdCBsd3NfcHJvY2Vzc19odG1sX2FyZ3MqIHBoYSA9IChzdHJ1Y3QgbHdzX3Byb2Nlc3NfaHRtbF9hcmdzKilpbjsKCiAgICAgIGlmKHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfQUREX0hFQURFUlMpCiAgICAgICAgcGhhLT5sZW4gPSAwOwoKICAgICAgaWYocGhhLT5sZW4gPCBwaGEtPm1heF9sZW4pCiAgICAgICAgbWVtc2V0KCZwaGEtPnBbcGhhLT5sZW5dLCAwLCBwaGEtPm1heF9sZW4gLSBwaGEtPmxlbik7CgogICAgICBhcmd2W2J1ZmZlcl9pbmRleCA9IGFyZ2krK10gPSBKU19OZXdBcnJheUJ1ZmZlcihjdHgsICh1aW50OF90KilwaGEtPnAsIHBoYS0+bWF4X2xlbiwgMCwgMCwgRkFMU0UpOwogICAgICBhcmd2W2FyZ2ldID0gSlNfTmV3QXJyYXkoY3R4KTsKICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmd2W2FyZ2ldLCAwLCBKU19OZXdVaW50MzIoY3R4LCBwaGEtPmxlbikpOwogICAgICBhcmdpKys7CiAgICB9IGVsc2UgaWYocmVhc29uID09IExXU19DQUxMQkFDS19FU1RBQkxJU0hFRCkgewogICAgICBhcmd2W2FyZ2krK10gPSBqc19mbXRfcG9pbnRlcihjdHgsIGluLCAiKFNTTCopIik7CiAgICAgIGFyZ3ZbYXJnaSsrXSA9IEpTX05ld0ludDMyKGN0eCwgbGVuKTsKICAgIH0gZWxzZSBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX0NMSUVOVF9BUFBFTkRfSEFORFNIQUtFX0hFQURFUikgewogICAgICBtZW1zZXQoKih1aW50OF90KiopaW4sIDAsIGxlbik7CiAgICAgIGFyZ3ZbYnVmZmVyX2luZGV4ID0gYXJnaSsrXSA9IEpTX05ld0FycmF5QnVmZmVyKGN0eCwgKih1aW50OF90KiopaW4sIGxlbiwgMCwgMCwgRkFMU0UpOwogICAgICBhcmd2W2FyZ2ldID0gSlNfTmV3QXJyYXkoY3R4KTsKICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmd2W2FyZ2ldLCAwLCBKU19OZXdVaW50MzIoY3R4LCAwKSk7CiAgICAgIGFyZ2krKzsKICAgIH0gZWxzZSBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX09QRU5TU0xfUEVSRk9STV9TRVJWRVJfQ0VSVF9WRVJJRklDQVRJT04pIHsKICAgICAgYXJndlthcmdpKytdID0gSlNfTmV3SW50NjQoY3R4LCAoaW50NjRfdCkoaW50cHRyX3QpaW4pOwogICAgICBhcmd2W2FyZ2krK10gPSBKU19OZXdJbnQzMihjdHgsIGxlbik7CiAgICB9IGVsc2UgaWYocmVhc29uID09IExXU19DQUxMQkFDS19FU1RBQkxJU0hFRF9DTElFTlRfSFRUUCkgewogICAgICBpbnQgcmVzcG9uc2UgPSBsd3NfaHR0cF9jbGllbnRfaHR0cF9yZXNwb25zZSh3c2kpOwoKICAgICAgYXNzZXJ0KHMpOwogICAgICBzLT5yZXNwb25zZV9jb2RlID0gcmVzcG9uc2U7CgogICAgICBhcmd2W2FyZ2krK10gPSBKU19OZXdJbnQzMihjdHgsIHJlc3BvbnNlKTsKICAgIH0gZWxzZSBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX0NPTk5FQ1RJTkcpIHsKICAgICAgYXJndlthcmdpKytdID0gSlNfTmV3SW50MzIoY3R4LCAoaW50MzJfdCkoaW50cHRyX3QpaW4pOwogICAgfSBlbHNlIGlmKHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfV1NfUEVFUl9JTklUSUFURURfQ0xPU0UpIHsKICAgICAgaWYobGVuID49IDIpCiAgICAgICAgYXJndlthcmdpKytdID0gSlNfTmV3SW50MzIoY3R4LCBudG9ocygqKHVpbnQxNl90KilpbikpOwoKICAgICAgaWYobGVuID4gMikKICAgICAgICBhcmd2W2FyZ2krK10gPSBKU19OZXdBcnJheUJ1ZmZlckNvcHkoY3R4LCAoY29uc3QgdWludDhfdCopaW4gKyAyLCBsZW4gLSAyKTsKCiAgICB9IGVsc2UgaWYoaW4gJiYgKGxlbiA+IDAgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19BRERfSEVBREVSUykgJiYgcmVhc29uICE9IExXU19DQUxMQkFDS19GSUxURVJfSFRUUF9DT05ORUNUSU9OICYmIHJlYXNvbiAhPSBMV1NfQ0FMTEJBQ0tfQ0xJRU5UX0NPTk5FQ1RJT05fRVJST1IpIHsKICAgICAgQk9PTCBpc193cyA9IHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfQ0xJRU5UX1JFQ0VJVkUgfHwgcmVhc29uID09IExXU19DQUxMQkFDS19SRUNFSVZFOwoKICAgICAgYXJndlthcmdpKytdID0gaW4gPyAoKCFpc193cyB8fCBsd3NfZnJhbWVfaXNfYmluYXJ5KHdzaSkpKSA/IEpTX05ld0FycmF5QnVmZmVyQ29weShjdHgsIGluLCBsZW4pIDogSlNfTmV3U3RyaW5nTGVuKGN0eCwgaW4sIGxlbikgOiBKU19OVUxMOwogICAgICBhcmd2W2FyZ2krK10gPSBKU19OZXdJbnQ2NChjdHgsIGxlbik7CiAgICB9IGVsc2UgaWYoaW4gJiYgKGxlbiA9PSAwIHx8IHJlYXNvbiA9PSBMV1NfQ0FMTEJBQ0tfRklMVEVSX0hUVFBfQ09OTkVDVElPTiB8fCByZWFzb24gPT0gTFdTX0NBTExCQUNLX0NMSUVOVF9DT05ORUNUSU9OX0VSUk9SKSkgewogICAgICBhcmd2W2FyZ2krK10gPSBKU19OZXdTdHJpbmcoY3R4LCBpbik7CiAgICB9CgogICAgaWYocmVhc29uID09IExXU19DQUxMQkFDS19DTElFTlRfQ09OTkVDVElPTl9FUlJPUikgewogICAgICBhcmd2W2FyZ2krK10gPSBKU19OZXdJbnQzMihjdHgsIGVycm5vKTsKICAgIH0KCiAgICBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX1JBV19DTE9TRSkgewogICAgICAvKkpTX0ZyZWVWYWx1ZShjdHgsIGFyZ3ZbLS1hcmdpXSk7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGFyZ3ZbLS1hcmdpXSk7Ki8KCiAgICAgIGFyZ3ZbYXJnaSsrXSA9IEpTX05ld0ludDMyKGN0eCwgZXJybm8pOwogICAgfQoKICAgIEpTVmFsdWUgcmVzdWx0ID0gSlNfQ2FsbChjdHgsICpjYiwganN2YWwgPyAqanN2YWwgOiBKU19OVUxMLCBhcmdpLCBhcmd2KTsKCiAgICBpZihKU19Jc0V4Y2VwdGlvbihyZXN1bHQpKSB7CiAgICAgIEpTVmFsdWUgZXJyb3IgPSBKU19HZXRFeGNlcHRpb24oY3R4KTsKICAgICAganNfZXJyb3JfcHJpbnQoY3R4LCBlcnJvcik7CiAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGVycm9yKTsKICAgICAgLyogIHJldCA9IC0xOwogICAgICAgIGdvdG8gZW5kOyovCiAgICB9CgogICAgaWYocmVhc29uID09IExXU19DQUxMQkFDS19DTElFTlRfQVBQRU5EX0hBTkRTSEFLRV9IRUFERVIpIHsKICAgICAgaW50NjRfdCBuID0gdG9faW50NjQoY3R4LCBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyZ3ZbYXJnaSAtIDFdLCAwKSk7CgogICAgICAqKHVpbnQ4X3QqKilpbiArPSBNSU4oTUFYKDAsIG4pLCAoaW50NjRfdClsZW4pOwoKICAgIH0gZWxzZSBpZihwcm9jZXNzX2h0bWxfYXJncykgewogICAgICBzdHJ1Y3QgbHdzX3Byb2Nlc3NfaHRtbF9hcmdzKiBwaGEgPSAoc3RydWN0IGx3c19wcm9jZXNzX2h0bWxfYXJncyopaW47CiAgICAgIGludDY0X3QgbiA9IHRvX2ludDY0KGN0eCwgSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmd2W2FyZ2kgLSAxXSwgMCkpOwoKICAgICAgcGhhLT5wICs9IE1JTihNQVgoMCwgbiksIChpbnQ2NF90KShwaGEtPm1heF9sZW4gLSBwaGEtPmxlbikpOwogICAgfQoKICAgIGZvcihpbnQgaiA9IDA7IGogPCBhcmdpOyBqKyspIHsKICAgICAgaWYoYnVmZmVyX2luZGV4ID09IGFyZ2kpCiAgICAgICAgSlNfRGV0YWNoQXJyYXlCdWZmZXIoY3R4LCBhcmd2W2pdKTsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgYXJndltqXSk7CiAgICB9CgogICAgcmV0ID0gdG9faW50MzJmcmVlKGN0eCwgcmVzdWx0KTsKICB9CgogIGlmKHMgJiYgcy0+Y2xvc2VkKQogICAgcmV0ID0gLTE7CgogIC8qICBpZihyZWFzb24gPT0gTFdTX0NBTExCQUNLX0NMSUVOVF9BUFBFTkRfSEFORFNIQUtFX0hFQURFUikKICAgICAgaWYocyAmJiBzLT5tZXRob2QgPT0gV1NJX1RPS0VOX1BPU1RfVVJJKQogICAgICAgIGlmKCFsd3NfaHR0cF9pc19yZWRpcmVjdGVkX3RvX2dldCh3c2kpKSB7CiAgICAgICAgICBsd3NsX3VzZXIoIiVzOiBkb2luZyBQT1NUIGZsb3dcbiIsIF9fZnVuY19fKTsKICAgICAgICAgIGx3c19jbGllbnRfaHR0cF9ib2R5X3BlbmRpbmcod3NpLCAxKTsKICAgICAgICAgIGx3c19jYWxsYmFja19vbl93cml0YWJsZSh3c2kpOwogICAgICAgIH0qLwoKICBpZihyZWFzb24gIT0gTFdTX0NBTExCQUNLX1BST1RPQ09MX0lOSVQgJiYgcmVhc29uICE9IExXU19DQUxMQkFDS19IVFRQX0JJTkRfUFJPVE9DT0wpIHsKICAgIGlmKHMgJiYgcy0+Y29tcGxldGVkKQogICAgICByZXQgPSAtMTsKICB9CgogIGlmKHJldCAhPSAwKSB7CiAgICBpbnQgZmQgPSBsd3NfZ2V0X3NvY2tldF9mZCh3c2kpOwoKICAgIGlmKGZkICE9IC0xKQogICAgICBpb2hhbmRsZXJfY2xlYXIobGMsIGZkKTsKCiAgICBsd3Nfd3NpX2Nsb3NlKHdzaSwgTFdTX1RPX0tJTExfQVNZTkMpOwogICAgLy8gbHdzX2Nsb3NlX2ZyZWVfd3NpKHdzaSwgTFdTX0NMT1NFX1NUQVRVU19OT1NUQVRVUywgX19mdW5jX18pOwogIH0KCmVuZDoKICBKU19GcmVlVmFsdWUoY3R4LCBzb2NrKTsKCiAgLyppZihyZXQgPT0gMCkKICAgIHJldHVybiBsd3NfY2FsbGJhY2tfaHR0cF9kdW1teSh3c2ksIHJlYXNvbiwgdXNlciwgaW4sIGxlbik7Ki8KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKY2FsbGJhY2tfYyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCB2b2lkKiBjbG9zdXJlKSB7CiAgY29uc3QgTFdTUHJvdG9jb2xzKiBwcm90byA9IGNsb3N1cmU7CiAgc3RydWN0IGx3cyogd3NpID0gMDsKICBpbnQgcmVhc29uID0gLTE7CiAgY2hhciogc3RyID0gMDsKICB2b2lkICp1c2VyID0gMCwgKmluID0gMDsKICBzaXplX3QgbGVuID0gMDsKCiAgaWYoYXJnYyA+IDApCiAgICB3c2kgPSBsd3Nqc19zb2NrZXRfd3NpKGFyZ3ZbMF0pOwoKICBpZihhcmdjID4gMSkKICAgIHJlYXNvbiA9IHRvX2ludDMyKGN0eCwgYXJndlsxXSk7CgogIGlmKEpTX0lzT2JqZWN0KHRoaXNfdmFsKSAmJiAhSlNfSXNOdWxsKHRoaXNfdmFsKSkKICAgIHVzZXIgPSAmdGhpc192YWw7CgogIGlmKGFyZ2MgPiAyKQogICAgaWYoIShpbiA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmxlbiwgYXJndlsyXSkpKQogICAgICBpbiA9IHN0ciA9IHRvX3N0cmluZ2xlbihjdHgsICZsZW4sIGFyZ3ZbMl0pOwoKICBpZihhcmdjID4gMykKICAgIGxlbiA9IHRvX3VpbnQzMihjdHgsIGFyZ3ZbM10pOwoKICBKU1ZhbHVlIHJldCA9IEpTX05ld0ludDMyKGN0eCwgcHJvdG8tPmNhbGxiYWNrKHdzaSwgcmVhc29uLCB1c2VyLCBpbiwgbGVuKSk7CgogIGlmKHN0cikKICAgIGpzX2ZyZWUoY3R4LCBzdHIpOwoKICByZXR1cm4gcmV0Owp9CgAAAAAAAAAA5bkAAAAAAAAAAAAAAAAAAAAAAADluQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfOQAAAAAAAN85AAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "iohandler.h",
			"settings":
			{
				"buffer_size": 2556,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAA0CAAAAAAAADgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAgAAAAAAAA0CAAAAAAAAAAAAAAAAMkA"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAA0CAAAAAAAADQIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOAgAAAAAAAA4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAA0CAAAAAAAADgIAAAAAAAAAAAAADgIAAAAAAAAPAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAgAAAAAAAA0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					2,
					"left_delete",
					null,
					"AgAAAA4CAAAAAAAADgIAAAAAAAABAAAACg0CAAAAAAAADQIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAgAAAAAAAA8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAD9CQAAI2lmbmRlZiBJT0hBTkRMRVJfSAojZGVmaW5lIElPSEFORExFUl9ICgojaW5jbHVkZSAibHdzLWNvbnRleHQuaCIKI2luY2x1ZGUgPHF1aWNranMuaD4KI2luY2x1ZGUgPGN1dGlscy5oPgojaW5jbHVkZSA8bGlzdC5oPgoKCnR5cGVkZWYgc3RydWN0IHsKICBzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7CiAgaW50IGZkOwogIEJPT0wgd3JpdGU7Cn0gSGFuZGxlckZ1bmN0aW9uOwoKc3RhdGljIEpTVmFsdWUKaW9oYW5kbGVyX2Z1bmN0aW9uKEpTQ29udGV4dCogY3R4LCBCT09MIHdyaXRlKSB7CiAgSlNWYWx1ZSBnbG9iID0gSlNfR2V0R2xvYmFsT2JqZWN0KGN0eCk7CiAgSlNWYWx1ZSBvcyA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgZ2xvYiwgIm9zIik7CiAgSlNfRnJlZVZhbHVlKGN0eCwgZ2xvYik7CiAgSlNWYWx1ZSBmbiA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgb3MsIHdyaXRlID8gInNldFdyaXRlSGFuZGxlciIgOiAic2V0UmVhZEhhbmRsZXIiKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvcyk7CiAgcmV0dXJuIGZuOwp9CgpzdGF0aWMgSGFuZGxlckZ1bmN0aW9uKgppb2hhbmRsZXJfZmluZChMV1NDb250ZXh0KiBsYywgaW50IGZkLCBCT09MIHdyaXRlKSB7CiAgc3RydWN0IGxpc3RfaGVhZCogZWw7CgogIGxpc3RfZm9yX2VhY2goZWwsICZsYy0+aGFuZGxlcnMpIHsKICAgIEhhbmRsZXJGdW5jdGlvbiogaGYgPSBsaXN0X2VudHJ5KGVsLCBIYW5kbGVyRnVuY3Rpb24sIGxpbmspOwoKICAgIGlmKGhmLT5mZCA9PSBmZCAmJiBoZi0+d3JpdGUgPT0gd3JpdGUpCiAgICAgIHJldHVybiBoZjsKICB9CgogIHJldHVybiBOVUxMOwp9CgpzdGF0aWMgSGFuZGxlckZ1bmN0aW9uKgppb2hhbmRsZXJfYWRkKExXU0NvbnRleHQqIGxjLCBpbnQgZmQsIEJPT0wgd3JpdGUpIHsKICBIYW5kbGVyRnVuY3Rpb24qIGhmOwoKICBpZigoaGYgPSBpb2hhbmRsZXJfZmluZChsYywgZmQsIHdyaXRlKSkpCiAgICByZXR1cm4gaGY7CgogIGlmKChoZiA9IGpzX21hbGxvYyhsYy0+anMsIHNpemVvZihIYW5kbGVyRnVuY3Rpb24pKSkpIHsKICAgIGhmLT5mZCA9IGZkOwogICAgaGYtPndyaXRlID0gd3JpdGU7CgogICAgREVCVUcoIiVzICVkICVzIiwgX19mdW5jX18sIGZkLCB3cml0ZSA/ICJ3cml0ZSIgOiAicmVhZCIpOwoKICAgIGxpc3RfYWRkKCZoZi0+bGluaywgJmxjLT5oYW5kbGVycyk7CiAgICByZXR1cm4gaGY7CiAgfQoKICByZXR1cm4gMDsKfQoKc3RhdGljIEJPT0wKaW9oYW5kbGVyX3JlbW92ZShMV1NDb250ZXh0KiBsYywgaW50IGZkLCBCT09MIHdyaXRlKSB7CiAgSGFuZGxlckZ1bmN0aW9uKiBoZjsKCiAgaWYoKGhmID0gaW9oYW5kbGVyX2ZpbmQobGMsIGZkLCB3cml0ZSkpKSB7CiAgICBERUJVRygiJXMgJWQgJXMiLCBfX2Z1bmNfXywgZmQsIHdyaXRlID8gIndyaXRlIiA6ICJyZWFkIik7CgogICAgbGlzdF9kZWwoJmhmLT5saW5rKTsKICAgIGpzX2ZyZWUobGMtPmpzLCBoZik7CiAgICByZXR1cm4gVFJVRTsKICB9CgogIHJldHVybiBGQUxTRTsKfQoKc3RhdGljIHZvaWQKaW9oYW5kbGVyX3NldChMV1NDb250ZXh0KiBsYywgaW50IGZkLCBKU1ZhbHVlQ29uc3QgaGFuZGxlciwgQk9PTCB3cml0ZSkgewogIEpTVmFsdWUgZm4gPSBpb2hhbmRsZXJfZnVuY3Rpb24obGMtPmpzLCB3cml0ZSk7CiAgSlNWYWx1ZSBhcmdzWzJdID0ge0pTX05ld0ludDMyKGxjLT5qcywgZmQpLCBoYW5kbGVyfTsKICBCT09MIGFkZCA9IEpTX0lzRnVuY3Rpb24obGMtPmpzLCBoYW5kbGVyKTsKCiAgREVCVUcoIiVzICVkICVzIiwgd3JpdGUgPyAib3Muc2V0V3JpdGVIYW5kbGVyIiA6ICJvcy5zZXRSZWFkSGFuZGxlciIsIGZkLCBhZGQgPyAiW2Z1bmN0aW9uXSIgOiAiTlVMTCIpOwoKICBpZihhZGQpCiAgICBpb2hhbmRsZXJfYWRkKGxjLCBmZCwgd3JpdGUpOwogIGVsc2UKICAgIGlvaGFuZGxlcl9yZW1vdmUobGMsIGZkLCB3cml0ZSk7CgogIEpTVmFsdWUgcmV0ID0gSlNfQ2FsbChsYy0+anMsIGZuLCBKU19OVUxMLCAyLCBhcmdzKTsKICBKU19GcmVlVmFsdWUobGMtPmpzLCByZXQpOwogIEpTX0ZyZWVWYWx1ZShsYy0+anMsIGZuKTsKfQoKc3RhdGljIHZvaWQKaW9oYW5kbGVyX2NsZWFyKExXU0NvbnRleHQqIGxjLCBpbnQgZmQpIHsKICBpb2hhbmRsZXJfc2V0KGxjLCBmZCwgSlNfTlVMTCwgRkFMU0UpOwogIGlvaGFuZGxlcl9zZXQobGMsIGZkLCBKU19OVUxMLCBUUlVFKTsKfQoKc3RhdGljIHZvaWQKaW9oYW5kbGVyX2NsZWFudXAoTFdTQ29udGV4dCogbGMpIHsKICBzdHJ1Y3QgbGlzdF9oZWFkICplbCwgKm5leHQ7CgogIGxpc3RfZm9yX2VhY2hfc2FmZShlbCwgbmV4dCwgJmxjLT5oYW5kbGVycykgewogICAgSGFuZGxlckZ1bmN0aW9uKiBoZiA9IGxpc3RfZW50cnkoZWwsIEhhbmRsZXJGdW5jdGlvbiwgbGluayk7CgogICAgREVCVUcoImRlbGV0ZSBoYW5kbGVyIChmZCA9ICVkLCAlcykiLCBoZi0+ZmQsIGhmLT53cml0ZSA/ICJ3cml0ZSIgOiAicmVhZCIpOwoKICAgIGlvaGFuZGxlcl9zZXQobGMsIGhmLT5mZCwgSlNfTlVMTCwgaGYtPndyaXRlKTsKICB9Cn0KCiNlbmRpZiAvKiBkZWZpbmVkIElPSEFORExFUl9IICovCgAAAAAAAAAA/AkAAAAAAAAAAAAAAAAAAAAAAAD8CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAIkA"
				]
			]
		},
		{
			"file": "js-utils.h",
			"settings":
			{
				"buffer_size": 5665,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/mnt/data/Projects/plot-cv/quickjs/quickjs.h",
			"settings":
			{
				"buffer_size": 43250,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/lws/body.js",
			"settings":
			{
				"buffer_size": 2197,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					20,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANgAAAAAAAAA2QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAAAAAAAAANgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANkAAAAAAAAA2gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZAAAAAAAAANkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"paste",
					null,
					"AQAAANoAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAPAAAAAAAAAA8AAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxAAAAAAAAAPEAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/lws/stream-utils.js",
			"settings":
			{
				"buffer_size": 3292,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJQBAAAAAAAAlQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAQAAAAAAAJQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAJQBAAAAAAAAlQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAQAAAAAAAJQBAAAAAAAAAAAAAAAAAAA"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAAJQBAAAAAAAAlAEAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAQAAAAAAAJUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "import"
					},
					"BgAAAJQBAAAAAAAAlQEAAAAAAAAAAAAAlQEAAAAAAACWAQAAAAAAAAAAAACWAQAAAAAAAJcBAAAAAAAAAAAAAJcBAAAAAAAAmAEAAAAAAAAAAAAAmAEAAAAAAACZAQAAAAAAAAAAAACZAQAAAAAAAJoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAQAAAAAAAJQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJoBAAAAAAAAmwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAQAAAAAAAJoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJsBAAAAAAAAnQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAQAAAAAAAJsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwBAAAAAAAAnQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAQAAAAAAAJwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"paste",
					null,
					"AQAAAJ0BAAAAAAAArQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAQAAAAAAAJ0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0BAAAAAAAArgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAQAAAAAAAK0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAQAAAAAAAK8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALQBAAAAAAAAtQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0AQAAAAAAALQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAALUBAAAAAAAAtwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1AQAAAAAAALUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "./util.j"
					},
					"CAAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAALkBAAAAAAAAugEAAAAAAAAAAAAAugEAAAAAAAC7AQAAAAAAAAAAAAC7AQAAAAAAALwBAAAAAAAAAAAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AQAAAAAAALYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "s?"
					},
					"AgAAAL4BAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+AQAAAAAAAL4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAL8BAAAAAAAAvwEAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAQAAAAAAAMABAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMABAAAAAAAAwQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAQAAAAAAAMABAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "define,"
					},
					"BwAAAJ0BAAAAAAAAngEAAAAAAAAAAAAAngEAAAAAAACfAQAAAAAAAAAAAACfAQAAAAAAAKABAAAAAAAAAAAAAKABAAAAAAAAoQEAAAAAAAAAAAAAoQEAAAAAAACiAQAAAAAAAAAAAACiAQAAAAAAAKMBAAAAAAAAAAAAAKMBAAAAAAAApAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAQAAAAAAAJ0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQBAAAAAAAApQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAQAAAAAAAKQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "wrapFunction,"
					},
					"DQAAAKUBAAAAAAAApgEAAAAAAAAAAAAApgEAAAAAAACnAQAAAAAAAAAAAACnAQAAAAAAAKgBAAAAAAAAAAAAAKgBAAAAAAAAqQEAAAAAAAAAAAAAqQEAAAAAAACqAQAAAAAAAAAAAACqAQAAAAAAAKsBAAAAAAAAAAAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAACtAQAAAAAAAK4BAAAAAAAAAAAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAACwAQAAAAAAALEBAAAAAAAAAAAAALEBAAAAAAAAsgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClAQAAAAAAAKUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIBAAAAAAAAswEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyAQAAAAAAALIBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/lws/response.js",
			"settings":
			{
				"buffer_size": 1364,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					38,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJoEAAAAAAAAnwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgQAAAAAAACaBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/lws/request.js",
			"settings":
			{
				"buffer_size": 2437,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"cam",
				"Convert Case: camelCase"
			],
			[
				"camel",
				"Convert Case: camelCase"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"came",
				"Convert Case: camelCase"
			],
			[
				"case ",
				"Convert Case: camelCase"
			],
			[
				"doxy",
				"DoxyDoxygen: Comment All"
			],
			[
				"",
				":$ - EOF"
			],
			[
				"format",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"ou",
				"Browse Mode: Outline (Right)"
			],
			[
				"instga",
				"Package Control: Install Package"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"json",
				"Pretty JSON: Minify JSON"
			],
			[
				"jspr",
				"JsPrettier: Format Code"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"color",
				"Color Highlight: Reset"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit cu",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/mnt/data/Projects/plot-cv/quickjs/qjs-lws",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-lws/tests"
	],
	"file_history":
	[
		"/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/util.js",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-lws/README.md",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/fetch.js",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lws.c",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-lws/iohandler.h",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/mnt/data/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/webakeit/webakeit-telegram.js",
		"/home/roman/Projects/webakeit/webakeit.tmp",
		"/home/roman/Projects/webakeit/webakeit.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/http/client/client-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-write.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/fetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-socket.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/core-net/output.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/plat/optee/network.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/plat/freertos/freertos-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-context.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/core-net/state.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/plat/unix/unix-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/h2/http2.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-sockaddr46.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-context.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-socket.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/body.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/headers.js",
		"/home/roman/.config/sublime-text/Packages/User/Themes/C Theme.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-sockaddr46.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-network-helper.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-multi/minimal-http-client-multi.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-post/minimal-http-client-post.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/http/parsers.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/h2/ops-h2.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/core/private-lib-core.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/secure-streams/protocols/ss-h1.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/tcpSocket.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/serve.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/websocket.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/src/lib/helpers/webidl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/src/lib/helpers/webidl.ts",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/assert.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/websocketstream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/src/lib/readable-stream/pipe.ts",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/context.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/request.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/response.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-callbacks.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/body.old.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/abort.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/readable-stream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-eventlib-exports.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/http/header.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy/minimal-raw-proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-protocols-plugins.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/h2/hpack.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-vhost.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-spa.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/plugins/deaddrop/protocol_lws_deaddrop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/core-net/network.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-x509.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-writeable.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-adopt.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/test.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/core-net/private-lib-core-net.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-async-dns.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-struct.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/http/private-lib-roles-http.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/private-lib-roles.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-client/main.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/src/lib/readable-stream.ts",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/src/lib/validators/underlying-sink.ts",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/src/ponyfill.ts",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/src/lib/transform-stream/transformer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-tokenize.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/simple-queue.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/list.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/mimetypes.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/abort-controller.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/abort-signal.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/event-target-shim.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/lws/event-attribute-handler.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/fetch/body.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/assert.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/list.js",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/fetch/request.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/fetch/response.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/http/server/server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-post/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples/embedded/lhp/esp32-waveshare-104-212/main/splash-212-104.jpg.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/fetch/headers.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lib/simple-queue.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/tests/test_websocket.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-ws-ext.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/roles/ws/ext/extension-permessage-deflate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/plugin-standalone/protocol_example_standalone.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-echo/minimal-ws-server-echo.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client-echo/minimal-ws-client-echo.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/lib/secure-streams/policy-common.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-pmd-corner/minimal-ws-server-pmd-corner.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/qjs-lws.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/web-streams-polyfill/src/lib/readable-stream.js"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 138.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"normalizeMethod",
			"));\n",
			"\\bC\\b",
			"interactive",
			"'info'",
			"verbose\\(",
			"verbose",
			"JS_Eval\\(",
			"glob",
			"iohandler_function",
			"JS_Eval\\(",
			"JS_EVAL_",
			"JS_Eval",
			"\"set",
			"rest",
			"req.url,",
			"PLUGIN_PROTOCOL_",
			"\"id\"",
			"waitWrite",
			"wantWrite",
			"clientSslCa",
			"\\blogLevel\\b",
			"logLevel",
			"\"logLevel",
			"lwsjs_loglevel",
			"log_callback",
			"setLog",
			"iteratorProperty",
			"readableStreamCallback"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"log("
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 168,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"color_scheme": "Packages/Outline/outline-Dark.hidden-tmTheme",
							"current_file": "/mnt/data/Projects/plot-cv/quickjs/qjs-lws/lib/lws/body.js",
							"function_name_status_row": 1,
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
								[
									283,
									287
								],
								[
									292,
									309
								],
								[
									350,
									364
								],
								[
									561,
									565
								],
								[
									767,
									778
								],
								[
									989,
									1006
								],
								[
									1222,
									1227
								],
								[
									1409,
									1415
								],
								[
									1461,
									1465
								],
								[
									1628,
									1641
								],
								[
									1672,
									1676
								],
								[
									1814,
									1820
								],
								[
									1851,
									1855
								],
								[
									1996,
									2002
								],
								[
									2033,
									2037
								],
								[
									2061,
									2065
								],
								[
									2106,
									2110
								],
								[
									2147,
									2151
								]
							],
							"symlist":
							[
								"Body",
								"  constructor(body)",
								"ReadableStream",
								"Blob",
								"ArrayBuffer",
								"  start(controller)",
								"() =>",
								"  blob()",
								"  a =>",
								"  arrayBuffer()",
								"  b =>",
								"  text()",
								"  b =>",
								"  json()",
								"  s =>",
								"Body",
								"Body",
								"Body"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760293582.95,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/lws/context.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2836,
						"regions":
						{
						},
						"selection":
						[
							[
								1819,
								1837
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 36,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760292470.28,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 784.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "tests/test_websocket.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1467,
						"regions":
						{
						},
						"selection":
						[
							[
								1304,
								1304
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760292148.68,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 285.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "tests/test-websocket.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1467,
						"regions":
						{
						},
						"selection":
						[
							[
								1467,
								1467
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 6,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760292408.41,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1718,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										164,
										175
									],
									[
										420,
										431
									],
									[
										870,
										881
									],
									[
										1293,
										1304
									],
									[
										1585,
										1596
									],
									[
										1624,
										1635
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1630,
								1630
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 33,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"show_line_column": "disabled",
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1760292161.57,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "tests/test-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4300,
						"regions":
						{
						},
						"selection":
						[
							[
								4285,
								4300
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 118,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760292391.72,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2166.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "tests/test-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5454,
						"regions":
						{
						},
						"selection":
						[
							[
								5454,
								5454
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 160,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760292393.77,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 850.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lws-socket.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26398,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								26398
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"show_line_column": "disabled",
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1759177562.66,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lws-context.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47589,
						"regions":
						{
						},
						"selection":
						[
							[
								14815,
								14815
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 503,
							"show_line_column": "disabled",
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1759194156.5,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 252538.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "iohandler.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2556,
						"regions":
						{
						},
						"selection":
						[
							[
								512,
								512
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 21,
							"show_line_column": "disabled",
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1759194202.72,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9053.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "js-utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5665,
						"regions":
						{
						},
						"selection":
						[
							[
								1999,
								1999
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 51,
							"show_line_column": "disabled",
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1759177990.31,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 36831.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/mnt/data/Projects/plot-cv/quickjs/quickjs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43250,
						"regions":
						{
						},
						"selection":
						[
							[
								23899,
								23914
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 316,
							"show_line_column": "disabled",
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1759178255.17,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 417059.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lib/lws/body.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2197,
						"regions":
						{
						},
						"selection":
						[
							[
								1812,
								1823
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 68,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760295959.93,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 780.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "lib/lws/stream-utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3292,
						"regions":
						{
						},
						"selection":
						[
							[
								929,
								719
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 15,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760292417.49,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "lib/lws/response.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1364,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760292421.73,
							"tabs_extra_last_activated_sheet_index": 16,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 285.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/lws/request.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2437,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1760292453.19,
							"tabs_extra_last_activated_sheet_index": 17,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 798.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"pinned_build_system": "",
	"project": "qjs-lws.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ioha",
				"iohandler.h"
			],
			[
				"ioh",
				"iohandler.h"
			],
			[
				"util",
				"lib/lws/util.js"
			],
			[
				"fetch",
				"lib/fetch.js"
			],
			[
				"body",
				"lib/lws/body.js"
			],
			[
				"minnet-client.c",
				"src/minnet-client.c"
			],
			[
				"weba",
				"webakeit-telegram.js"
			],
			[
				"lws-write",
				"libwebsockets/include/libwebsockets/lws-write.h"
			],
			[
				"lws.c",
				"lws.c"
			],
			[
				"lws-soc",
				"lws-socket.c"
			],
			[
				"header",
				"lib/lws/headers.js"
			],
			[
				"lws-net",
				"libwebsockets/include/libwebsockets/lws-network-helper.h"
			],
			[
				"http2",
				"libwebsockets/lib/roles/h2/http2.c"
			],
			[
				"lws-s",
				"lws-socket.c"
			],
			[
				"lws-c",
				"lws-context.c"
			],
			[
				"lws-so",
				"lws-socket.c"
			],
			[
				"lws-con",
				"lws-context.c"
			],
			[
				"http2.c",
				"libwebsockets/lib/roles/h2/http2.c"
			],
			[
				"webidl",
				"web-streams-polyfill/src/lib/helpers/webidl.js"
			],
			[
				"webidl.ts",
				"web-streams-polyfill/src/lib/helpers/webidl.ts"
			],
			[
				"pipe.ts",
				"web-streams-polyfill/src/lib/readable-stream/pipe.ts"
			],
			[
				"streams",
				"lib/lws/streams.js"
			],
			[
				"context",
				"lib/lws/context.js"
			],
			[
				"js-u",
				"js-utils.c"
			],
			[
				"util.js",
				"lib/lws/util.js"
			],
			[
				"heade",
				"lib/lws/headers.js"
			],
			[
				"lws-call",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"body.js",
				"lib/lws/body.js"
			],
			[
				"abort",
				"lib/lws/abort.js"
			],
			[
				"hpack.c",
				"libwebsockets/lib/roles/h2/hpack.c"
			],
			[
				"lws-ca",
				"libwebsockets/include/libwebsockets/lws-callbacks.h"
			],
			[
				"dead",
				"libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c"
			],
			[
				"deaddrop",
				"libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-deaddrop/minimal-http-server-deaddrop.c"
			],
			[
				"lws-vhos",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"lws-vho",
				"lws-vhost.h"
			],
			[
				"lws-conte",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"lws-asy",
				"libwebsockets/include/libwebsockets/lws-async-dns.h"
			],
			[
				"network",
				"libwebsockets/lib/core-net/network.c"
			],
			[
				"lws-netwo",
				"libwebsockets/include/libwebsockets/lws-network-helper.h"
			],
			[
				"lws-str",
				"libwebsockets/include/libwebsockets/lws-struct.h"
			],
			[
				"lws-",
				"libwebsockets/include/libwebsockets/lws-misc.h"
			],
			[
				"lws-ad",
				"libwebsockets/include/libwebsockets/lws-adopt.h"
			],
			[
				"tcpso",
				"lib/tcpSocket.js"
			],
			[
				"client.h",
				"libwebsockets/include/libwebsockets/lws-client.h"
			],
			[
				"ts/lws-",
				"libwebsockets/include/libwebsockets/lws-misc.h"
			],
			[
				"context.js",
				"lib/lws/context.js"
			],
			[
				"lws-cn",
				"lws-context.c"
			],
			[
				"serve",
				"lib/serve.js"
			],
			[
				"abort-si",
				"lib/lws/abort-signal.js"
			],
			[
				"abort-sig",
				"lib/lws/abort-signal.js"
			],
			[
				"fetch.js",
				"lib/fetch.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"lws.h",
				"lws.h"
			],
			[
				"js-ut",
				"js-utils.h"
			],
			[
				"js-utils.h",
				"js-utils.h"
			],
			[
				"121",
				"libwebsockets/minimal-examples/embedded/lhp/esp32-waveshare-104-212/main/splash-212-104.jpg.h"
			],
			[
				"test.js",
				"test.js"
			],
			[
				"serve.js",
				"lib/serve.js"
			],
			[
				"response",
				"lib/fetch/response.js"
			],
			[
				"request",
				"lib/fetch/request.js"
			],
			[
				"lws-sock",
				"lws-socket.c"
			],
			[
				"websocket.js",
				"lib/websocket.js"
			],
			[
				"lws-clie",
				"libwebsockets/include/libwebsockets/lws-client.h"
			],
			[
				"dummy",
				"libwebsockets/lib/core-net/dummy-callback.c"
			],
			[
				"test-clie",
				"test-client.js"
			],
			[
				"lws-co",
				"lws-context.c"
			],
			[
				"dummy-ca",
				"libwebsockets/lib/core-net/dummy-callback.c"
			],
			[
				"lws-client",
				"libwebsockets/include/libwebsockets/lws-client.h"
			],
			[
				"lws-htt",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"conte",
				"lws-context.c"
			],
			[
				"simple-que",
				"lib/simple-queue.js"
			],
			[
				"lws-cont",
				"lws-context.c"
			],
			[
				"client-ht",
				"libwebsockets/lib/roles/http/client/client-http.c"
			],
			[
				"lws-h",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"post.c",
				"libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-post/minimal-http-client-post.c"
			],
			[
				"fet",
				"lib/fetch.js"
			],
			[
				"headers",
				"lib/fetch/headers.js"
			],
			[
				"private",
				"libwebsockets/lib/roles/private-lib-roles.h"
			],
			[
				"ops-ws",
				"libwebsockets/lib/roles/ws/ops-ws.c"
			],
			[
				"websock",
				"lib/websocket.js"
			],
			[
				"service",
				"libwebsockets/lib/core-net/service.c"
			],
			[
				"wsi.c",
				"libwebsockets/lib/core-net/wsi.c"
			],
			[
				"websocket",
				"lib/websocket.js"
			],
			[
				"socket.js",
				"lib/websocket.js"
			],
			[
				"webspo",
				"web-streams-polyfill/.idea/web-streams-polyfill.iml"
			],
			[
				"webso",
				"lib/websocket.js"
			],
			[
				"minnet-client",
				"libwebsockets/minimal-examples-lowlevel/mqtt-client/minimal-mqtt-client/minimal-mqtt-client.c"
			],
			[
				"private-lib-core",
				"libwebsockets/lib/core/private-lib-core.h"
			],
			[
				"private-lib-",
				"libwebsockets/lib/roles/private-lib-roles.h"
			],
			[
				"lws-socket.h",
				"lws-socket.h"
			],
			[
				"mirror",
				"libwebsockets/plugins/protocol_lws_mirror.c"
			],
			[
				"otocol_lws_raw_proxy.c",
				"libwebsockets/plugins/raw-proxy/protocol_lws_raw_proxy.c"
			],
			[
				"test-cli",
				"test-client.js"
			],
			[
				"lws-misc",
				"libwebsockets/include/libwebsockets/lws-misc.h"
			],
			[
				"lws-html",
				"libwebsockets/include/libwebsockets/lws-html.h"
			],
			[
				"context.c",
				"libwebsockets/lib/core/context.c"
			],
			[
				"lws-spa",
				"libwebsockets/lib/roles/http/server/lws-spa.c"
			],
			[
				"lws-sp",
				"libwebsockets/lib/roles/http/server/lws-spa.c"
			],
			[
				"quickj",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"lws-http",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"spa.c",
				"lws-spa.c"
			],
			[
				"wsi-http",
				"libwebsockets/include/libwebsockets/lws-http.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"vhost",
				"libwebsockets/lib/core-net/vhost.c"
			],
			[
				"tls-clie",
				"libwebsockets/lib/tls/tls-client.c"
			],
			[
				"context.",
				"libwebsockets/lib/core/context.c"
			],
			[
				"raw-fall",
				"libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-fallback-http-server/minimal-raw-fallback-http-server.c"
			],
			[
				"test-cl",
				"test-client.js"
			],
			[
				"socket.h",
				"lws-socket.h"
			],
			[
				"lws-log",
				"libwebsockets/include/libwebsockets/lws-logs.h"
			],
			[
				"spa.h",
				"libwebsockets/include/libwebsockets/lws-spa.h"
			],
			[
				"server.c",
				"libwebsockets/lib/roles/http/server/server.c"
			],
			[
				"lws-context-v",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"buffer-ut",
				"src/buffer-utils.c"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"",
				"include/utils.h"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"quickjs-inspec",
				"quickjs-inspect.c"
			],
			[
				"io.js",
				"lib/io.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"util.sj",
				"web-platform-tests-streams/shared-storage/resources/util.sub.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"js-utils.c",
				"src/js-utils.c"
			],
			[
				"quickjs-strea",
				"quickjs-stream.h"
			],
			[
				"quickjs-st",
				"quickjs-stream.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 1059.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 175.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
